method(
  <|file:///run/media/dig/Cioran/Research/sonar-dataset/sonar-jars/sonar-plugin-api-5.6.jar|,|file:///run/media/dig/Cioran/Research/sonar-dataset/sonar-jars/sonar-plugin-api-6.7.jar|>,
  removed={
    <|java+constructor:///org/sonar/colorizer/LiteralTokenizer$EndCommentMatcher/LiteralTokenizer$EndCommentMatcher(int,org.sonar.channel.CodeReader)|,<|java+class:///org/sonar/colorizer/LiteralTokenizer$EndCommentMatcher|,|java+constructor:///org/sonar/colorizer/LiteralTokenizer$EndCommentMatcher/LiteralTokenizer$EndCommentMatcher(int,org.sonar.channel.CodeReader)|>>,
    <|java+method:///org/sonar/api/resources/JavaFile/getName()|,<|java+class:///org/sonar/api/resources/JavaFile|,|java+method:///org/sonar/api/resources/JavaFile/getName()|>>,
    <|java+initializer:///org/sonar/colorizer/JavaAnnotationTokenizer/JavaAnnotationTokenizer$initializer|,<|java+class:///org/sonar/colorizer/JavaAnnotationTokenizer|,|java+initializer:///org/sonar/colorizer/JavaAnnotationTokenizer/JavaAnnotationTokenizer$initializer|>>,
    <|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/addSourceFiles(java.io.File%5B%5D)|,<|java+class:///org/sonar/api/batch/bootstrap/ProjectDefinition|,|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/addSourceFiles(java.io.File%5B%5D)|>>,
    <|java+method:///org/sonar/api/measures/Metric$Level$1/apply(org.sonar.api.measures.Metric$Level)|,<|java+class:///org/sonar/api/measures/Metric$Level$1|,|java+method:///org/sonar/api/measures/Metric$Level$1/apply(org.sonar.api.measures.Metric$Level)|>>,
    <|java+method:///org/sonar/api/resources/File/parseKey(java.lang.String)|,<|java+class:///org/sonar/api/resources/File|,|java+method:///org/sonar/api/resources/File/parseKey(java.lang.String)|>>,
    <|java+method:///org/sonar/api/batch/sensor/internal/SensorContextTester/conditions(java.lang.String,org.sonar.api.batch.sensor.coverage.CoverageType,int)|,<|java+class:///org/sonar/api/batch/sensor/internal/SensorContextTester|,|java+method:///org/sonar/api/batch/sensor/internal/SensorContextTester/conditions(java.lang.String,org.sonar.api.batch.sensor.coverage.CoverageType,int)|>>,
    <|java+method:///org/sonar/graph/StringEdge/hashCode()|,<|java+class:///org/sonar/graph/StringEdge|,|java+method:///org/sonar/graph/StringEdge/hashCode()|>>,
    <|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/setSourceDirs(java.io.File%5B%5D)|,<|java+class:///org/sonar/api/batch/bootstrap/ProjectDefinition|,|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/setSourceDirs(java.io.File%5B%5D)|>>,
    <|java+method:///org/sonar/api/web/CodeColorizerFormat/hashCode()|,<|java+class:///org/sonar/api/web/CodeColorizerFormat|,|java+method:///org/sonar/api/web/CodeColorizerFormat/hashCode()|>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileQuery/exclusions()|,<|java+class:///org/sonar/api/scan/filesystem/FileQuery|,|java+method:///org/sonar/api/scan/filesystem/FileQuery/exclusions()|>>,
    <|java+method:///org/sonar/graph/DsmManualSorter/getCurrentIndex(java.lang.Object)|,<|java+class:///org/sonar/graph/DsmManualSorter|,|java+method:///org/sonar/graph/DsmManualSorter/getCurrentIndex(java.lang.Object)|>>,
    <|java+method:///org/sonar/api/resources/Method/equals(java.lang.Object)|,<|java+class:///org/sonar/api/resources/Method|,|java+method:///org/sonar/api/resources/Method/equals(java.lang.Object)|>>,
    <|java+method:///org/sonar/api/resources/Project/setLanguage(org.sonar.api.resources.Language)|,<|java+class:///org/sonar/api/resources/Project|,|java+method:///org/sonar/api/resources/Project/setLanguage(org.sonar.api.resources.Language)|>>,
    <|java+constructor:///org/sonar/api/batch/fs/internal/DefaultFileSystem$1/DefaultFileSystem$1(org.sonar.api.batch.fs.internal.DefaultFileSystem)|,<|java+class:///org/sonar/api/batch/fs/internal/DefaultFileSystem$1|,|java+constructor:///org/sonar/api/batch/fs/internal/DefaultFileSystem$1/DefaultFileSystem$1(org.sonar.api.batch.fs.internal.DefaultFileSystem)|>>,
    <|java+constructor:///org/sonar/api/ce/measure/test/TestMeasureComputerDefinition$MatchMetricKey/TestMeasureComputerDefinition$MatchMetricKey(java.lang.String%5B%5D)|,<|java+class:///org/sonar/api/ce/measure/test/TestMeasureComputerDefinition$MatchMetricKey|,|java+constructor:///org/sonar/api/ce/measure/test/TestMeasureComputerDefinition$MatchMetricKey/TestMeasureComputerDefinition$MatchMetricKey(java.lang.String%5B%5D)|>>,
    <|java+method:///org/sonar/api/checks/AnnotationCheckFactory/createCheck(org.sonar.api.rules.ActiveRule)|,<|java+class:///org/sonar/api/checks/AnnotationCheckFactory|,|java+method:///org/sonar/api/checks/AnnotationCheckFactory/createCheck(org.sonar.api.rules.ActiveRule)|>>,
    <|java+method:///org/sonar/colorizer/LiteralTokenizer$EndCommentMatcher/evenNumberOfBackSlashBeforeDelimiter()|,<|java+class:///org/sonar/colorizer/LiteralTokenizer$EndCommentMatcher|,|java+method:///org/sonar/colorizer/LiteralTokenizer$EndCommentMatcher/evenNumberOfBackSlashBeforeDelimiter()|>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$1/getQualityGate()|,<|java+class:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$1|,|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$1/getQualityGate()|>>,
    <|java+method:///org/sonar/graph/FeedbackCycle/add(org.sonar.graph.FeedbackEdge)|,<|java+class:///org/sonar/graph/FeedbackCycle|,|java+method:///org/sonar/graph/FeedbackCycle/add(org.sonar.graph.FeedbackEdge)|>>,
    <|java+method:///org/sonar/api/batch/SquidUtils/unsupported()|,<|java+class:///org/sonar/api/batch/SquidUtils|,|java+method:///org/sonar/api/batch/SquidUtils/unsupported()|>>,
    <|java+constructor:///org/sonar/api/batch/fs/internal/FileMetadata$CharHandler/FileMetadata$CharHandler()|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata$CharHandler|,|java+constructor:///org/sonar/api/batch/fs/internal/FileMetadata$CharHandler/FileMetadata$CharHandler()|>>,
    <|java+method:///org/sonar/graph/CycleDetector/convertListOfVerticesToCycle(java.util.List)|,<|java+class:///org/sonar/graph/CycleDetector|,|java+method:///org/sonar/graph/CycleDetector/convertListOfVerticesToCycle(java.util.List)|>>,
    <|java+constructor:///org/sonar/api/measures/CoreMetrics$1/CoreMetrics$1(java.lang.String)|,<|java+class:///org/sonar/api/measures/CoreMetrics$1|,|java+constructor:///org/sonar/api/measures/CoreMetrics$1/CoreMetrics$1(java.lang.String)|>>,
    <|java+constructor:///org/sonar/api/batch/fs/internal/FileMetadata$LineOffsetCounter/FileMetadata$LineOffsetCounter()|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata$LineOffsetCounter|,|java+constructor:///org/sonar/api/batch/fs/internal/FileMetadata$LineOffsetCounter/FileMetadata$LineOffsetCounter()|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$LineHashComputer/processBuffer()|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata$LineHashComputer|,|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$LineHashComputer/processBuffer()|>>,
    <|java+method:///org/sonar/api/resources/ResourceTypes$StringPropertyValuePredicate/apply(java.lang.Object)|,<|java+class:///org/sonar/api/resources/ResourceTypes$StringPropertyValuePredicate|,|java+method:///org/sonar/api/resources/ResourceTypes$StringPropertyValuePredicate/apply(java.lang.Object)|>>,
    <|java+method:///org/sonar/graph/DirectedGraphAccessor/hasEdge(java.lang.Object,java.lang.Object)|,<|java+interface:///org/sonar/graph/DirectedGraphAccessor|,|java+method:///org/sonar/graph/DirectedGraphAccessor/hasEdge(java.lang.Object,java.lang.Object)|>>,
    <|java+method:///org/sonar/api/profiles/RulesProfile$MatchRule/apply(org.sonar.api.rules.ActiveRule)|,<|java+class:///org/sonar/api/profiles/RulesProfile$MatchRule|,|java+method:///org/sonar/api/profiles/RulesProfile$MatchRule/apply(org.sonar.api.rules.ActiveRule)|>>,
    <|java+method:///org/sonar/api/resources/JavaFile/matchFilePattern(java.lang.String)|,<|java+class:///org/sonar/api/resources/JavaFile|,|java+method:///org/sonar/api/resources/JavaFile/matchFilePattern(java.lang.String)|>>,
    <|java+method:///org/sonar/api/batch/sensor/internal/SensorContextTester/setSonarQubeVersion(org.sonar.api.utils.Version)|,<|java+class:///org/sonar/api/batch/sensor/internal/SensorContextTester|,|java+method:///org/sonar/api/batch/sensor/internal/SensorContextTester/setSonarQubeVersion(org.sonar.api.utils.Version)|>>,
    <|java+method:///org/sonar/api/web/FilterColumn/getSortDirection()|,<|java+class:///org/sonar/api/web/FilterColumn|,|java+method:///org/sonar/api/web/FilterColumn/getSortDirection()|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$LineOffsetCounter/getLastValidOffset()|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata$LineOffsetCounter|,|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$LineOffsetCounter/getLastValidOffset()|>>,
    <|java+initializer:///org/sonar/api/resources/Java/Java$initializer|,<|java+class:///org/sonar/api/resources/Java|,|java+initializer:///org/sonar/api/resources/Java/Java$initializer|>>,
    <|java+method:///org/sonar/graph/DirectedGraph/addEdge(java.lang.Object,java.lang.Object)|,<|java+class:///org/sonar/graph/DirectedGraph|,|java+method:///org/sonar/graph/DirectedGraph/addEdge(java.lang.Object,java.lang.Object)|>>,
    <|java+method:///org/sonar/api/server/ws/internal/ValidatingRequest/validate(java.lang.String,org.sonar.api.server.ws.WebService$Param)|,<|java+class:///org/sonar/api/server/ws/internal/ValidatingRequest|,|java+method:///org/sonar/api/server/ws/internal/ValidatingRequest/validate(java.lang.String,org.sonar.api.server.ws.WebService$Param)|>>,
    <|java+method:///org/sonar/api/resources/Project/createFromMavenIds(java.lang.String,java.lang.String)|,<|java+class:///org/sonar/api/resources/Project|,|java+method:///org/sonar/api/resources/Project/createFromMavenIds(java.lang.String,java.lang.String)|>>,
    <|java+method:///org/sonar/graph/MinimumFeedbackEdgeSetSolver/lightResearchForFeedbackEdges()|,<|java+class:///org/sonar/graph/MinimumFeedbackEdgeSetSolver|,|java+method:///org/sonar/graph/MinimumFeedbackEdgeSetSolver/lightResearchForFeedbackEdges()|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/DefaultFileSystem$1/apply(org.sonar.api.batch.fs.InputFile)|,<|java+class:///org/sonar/api/batch/fs/internal/DefaultFileSystem$1|,|java+method:///org/sonar/api/batch/fs/internal/DefaultFileSystem$1/apply(org.sonar.api.batch.fs.InputFile)|>>,
    <|java+constructor:///org/sonar/api/resources/InputFileUtils$DefaultInputFile/InputFileUtils$DefaultInputFile(java.io.File,java.lang.String)|,<|java+class:///org/sonar/api/resources/InputFileUtils$DefaultInputFile|,|java+constructor:///org/sonar/api/resources/InputFileUtils$DefaultInputFile/InputFileUtils$DefaultInputFile(java.io.File,java.lang.String)|>>,
    <|java+method:///org/sonar/api/config/Cipher/decrypt(java.lang.String)|,<|java+class:///org/sonar/api/config/Cipher|,|java+method:///org/sonar/api/config/Cipher/decrypt(java.lang.String)|>>,
    <|java+method:///org/sonar/colorizer/OnlySyntaxHtmlOptions/isGenerateHtmlHeader()|,<|java+class:///org/sonar/colorizer/OnlySyntaxHtmlOptions|,|java+method:///org/sonar/colorizer/OnlySyntaxHtmlOptions/isGenerateHtmlHeader()|>>,
    <|java+method:///org/sonar/api/batch/sensor/highlighting/internal/DefaultHighlighting$1/compare(org.sonar.api.batch.sensor.highlighting.internal.SyntaxHighlightingRule,org.sonar.api.batch.sensor.highlighting.internal.SyntaxHighlightingRule)|,<|java+class:///org/sonar/api/batch/sensor/highlighting/internal/DefaultHighlighting$1|,|java+method:///org/sonar/api/batch/sensor/highlighting/internal/DefaultHighlighting$1/compare(org.sonar.api.batch.sensor.highlighting.internal.SyntaxHighlightingRule,org.sonar.api.batch.sensor.highlighting.internal.SyntaxHighlightingRule)|>>,
    <|java+method:///org/sonar/api/resources/JavaPackage/getDescription()|,<|java+class:///org/sonar/api/resources/JavaPackage|,|java+method:///org/sonar/api/resources/JavaPackage/getDescription()|>>,
    <|java+method:///org/sonar/colorizer/HtmlDecorator/getTagBefore()|,<|java+class:///org/sonar/colorizer/HtmlDecorator|,|java+method:///org/sonar/colorizer/HtmlDecorator/getTagBefore()|>>,
    <|java+method:///org/sonar/api/server/ws/RailsHandler/addFormatParam(org.sonar.api.server.ws.WebService$NewAction)|,<|java+class:///org/sonar/api/server/ws/RailsHandler|,|java+method:///org/sonar/api/server/ws/RailsHandler/addFormatParam(org.sonar.api.server.ws.WebService$NewAction)|>>,
    <|java+constructor:///org/sonar/api/resources/JavaPackage/JavaPackage(java.lang.String)|,<|java+class:///org/sonar/api/resources/JavaPackage|,|java+constructor:///org/sonar/api/resources/JavaPackage/JavaPackage(java.lang.String)|>>,
    <|java+method:///org/sonar/api/utils/Durations/message(java.util.Locale,java.lang.String,java.lang.Object)|,<|java+class:///org/sonar/api/utils/Durations|,|java+method:///org/sonar/api/utils/Durations/message(java.util.Locale,java.lang.String,java.lang.Object)|>>,
    <|java+method:///org/sonar/graph/StringEdge/getTo()|,<|java+class:///org/sonar/graph/StringEdge|,|java+method:///org/sonar/graph/StringEdge/getTo()|>>,
    <|java+method:///org/sonar/graph/Dsm/getVertices()|,<|java+class:///org/sonar/graph/Dsm|,|java+method:///org/sonar/graph/Dsm/getVertices()|>>,
    <|java+method:///org/sonar/colorizer/HtmlDecorator/getTagEndOfFile()|,<|java+class:///org/sonar/colorizer/HtmlDecorator|,|java+method:///org/sonar/colorizer/HtmlDecorator/getTagEndOfFile()|>>,
    <|java+constructor:///org/sonar/api/measures/Metric$Level$1/Metric$Level$1()|,<|java+class:///org/sonar/api/measures/Metric$Level$1|,|java+constructor:///org/sonar/api/measures/Metric$Level$1/Metric$Level$1()|>>,
    <|java+method:///org/sonar/api/batch/sensor/cpd/internal/DefaultCpdTokens/isSkipped(java.lang.String)|,<|java+class:///org/sonar/api/batch/sensor/cpd/internal/DefaultCpdTokens|,|java+method:///org/sonar/api/batch/sensor/cpd/internal/DefaultCpdTokens/isSkipped(java.lang.String)|>>,
    <|java+method:///org/sonar/api/config/Settings/createForComponent(java.lang.Object)|,<|java+class:///org/sonar/api/config/Settings|,|java+method:///org/sonar/api/config/Settings/createForComponent(java.lang.Object)|>>,
    <|java+method:///org/sonar/api/resources/ResourceTypes$PropertyKeyPredicate/apply(java.lang.Object)|,<|java+class:///org/sonar/api/resources/ResourceTypes$PropertyKeyPredicate|,|java+method:///org/sonar/api/resources/ResourceTypes$PropertyKeyPredicate/apply(java.lang.Object)|>>,
    <|java+method:///org/sonar/api/resources/Method/getParent()|,<|java+class:///org/sonar/api/resources/Method|,|java+method:///org/sonar/api/resources/Method/getParent()|>>,
    <|java+method:///org/sonar/colorizer/JavaTokenizers/forHtml()|,<|java+class:///org/sonar/colorizer/JavaTokenizers|,|java+method:///org/sonar/colorizer/JavaTokenizers/forHtml()|>>,
    <|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/getLibraries()|,<|java+class:///org/sonar/api/batch/bootstrap/ProjectDefinition|,|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/getLibraries()|>>,
    <|java+method:///org/sonar/api/issue/IssueHandler$Context/issue()|,<|java+interface:///org/sonar/api/issue/IssueHandler$Context|,|java+method:///org/sonar/api/issue/IssueHandler$Context/issue()|>>,
    <|java+constructor:///org/sonar/colorizer/KeywordsTokenizer/KeywordsTokenizer(java.lang.String,java.lang.String,java.lang.String%5B%5D)|,<|java+class:///org/sonar/colorizer/KeywordsTokenizer|,|java+constructor:///org/sonar/colorizer/KeywordsTokenizer/KeywordsTokenizer(java.lang.String,java.lang.String,java.lang.String%5B%5D)|>>,
    <|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/access$800(org.sonar.api.server.rule.RulesDefinition$NewRule)|,<|java+class:///org/sonar/api/server/rule/RulesDefinition$NewRule|,|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/access$800(org.sonar.api.server.rule.RulesDefinition$NewRule)|>>,
    <|java+method:///org/sonar/graph/DirectedGraph/getIncomingEdges(java.lang.Object)|,<|java+class:///org/sonar/graph/DirectedGraph|,|java+method:///org/sonar/graph/DirectedGraph/getIncomingEdges(java.lang.Object)|>>,
    <|java+constructor:///org/sonar/graph/CycleDetector/CycleDetector(org.sonar.graph.DirectedGraphAccessor,java.util.Collection)|,<|java+class:///org/sonar/graph/CycleDetector|,|java+constructor:///org/sonar/graph/CycleDetector/CycleDetector(org.sonar.graph.DirectedGraphAccessor,java.util.Collection)|>>,
    <|java+method:///org/sonar/api/server/ws/WebService$NewAction/addPageParam()|,<|java+class:///org/sonar/api/server/ws/WebService$NewAction|,|java+method:///org/sonar/api/server/ws/WebService$NewAction/addPageParam()|>>,
    <|java+method:///org/sonar/colorizer/JavaConstantTokenizer/consume(org.sonar.channel.CodeReader,java.lang.Object)|,<|java+class:///org/sonar/colorizer/JavaConstantTokenizer|,|java+method:///org/sonar/colorizer/JavaConstantTokenizer/consume(org.sonar.channel.CodeReader,java.lang.Object)|>>,
    <|java+method:///org/sonar/colorizer/Renderer/render(java.io.Reader,java.util.List)|,<|java+class:///org/sonar/colorizer/Renderer|,|java+method:///org/sonar/colorizer/Renderer/render(java.io.Reader,java.util.List)|>>,
    <|java+constructor:///org/sonar/api/utils/DateUtils$ThreadSafeDateFormat/DateUtils$ThreadSafeDateFormat(java.lang.String)|,<|java+class:///org/sonar/api/utils/DateUtils$ThreadSafeDateFormat|,|java+constructor:///org/sonar/api/utils/DateUtils$ThreadSafeDateFormat/DateUtils$ThreadSafeDateFormat(java.lang.String)|>>,
    <|java+constructor:///org/sonar/api/server/rule/RulesDefinition$NewRule/RulesDefinition$NewRule(java.lang.String,java.lang.String)|,<|java+class:///org/sonar/api/server/rule/RulesDefinition$NewRule|,|java+constructor:///org/sonar/api/server/rule/RulesDefinition$NewRule/RulesDefinition$NewRule(java.lang.String,java.lang.String)|>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester/access$700(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester)|,<|java+class:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester|,|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester/access$700(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$LineCounter/nonBlankLines()|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata$LineCounter|,|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$LineCounter/nonBlankLines()|>>,
    <|java+method:///org/sonar/graph/DsmCell/getWeight()|,<|java+class:///org/sonar/graph/DsmCell|,|java+method:///org/sonar/graph/DsmCell/getWeight()|>>,
    <|java+method:///org/sonar/api/resources/Java/isJavaFile(java.io.File)|,<|java+class:///org/sonar/api/resources/Java|,|java+method:///org/sonar/api/resources/Java/isJavaFile(java.io.File)|>>,
    <|java+method:///org/sonar/api/resources/ResourceTypes$1/apply(org.sonar.api.resources.ResourceType)|,<|java+class:///org/sonar/api/resources/ResourceTypes$1|,|java+method:///org/sonar/api/resources/ResourceTypes$1/apply(org.sonar.api.resources.ResourceType)|>>,
    <|java+method:///org/sonar/api/resources/Project/setParent(org.sonar.api.resources.Project)|,<|java+class:///org/sonar/api/resources/Project|,|java+method:///org/sonar/api/resources/Project/setParent(org.sonar.api.resources.Project)|>>,
    <|java+method:///org/sonar/colorizer/OnlySyntaxHtmlOptions/setGenerateHtmlHeader(boolean)|,<|java+class:///org/sonar/colorizer/OnlySyntaxHtmlOptions|,|java+method:///org/sonar/colorizer/OnlySyntaxHtmlOptions/setGenerateHtmlHeader(boolean)|>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileQuery$1/apply(java.lang.Object)|,<|java+class:///org/sonar/api/scan/filesystem/FileQuery$1|,|java+method:///org/sonar/api/scan/filesystem/FileQuery$1/apply(java.lang.Object)|>>,
    <|java+method:///org/sonar/api/resources/Method/getName()|,<|java+class:///org/sonar/api/resources/Method|,|java+method:///org/sonar/api/resources/Method/getName()|>>,
    <|java+method:///org/sonar/colorizer/HtmlDecorator/consume(org.sonar.channel.CodeReader,java.lang.Object)|,<|java+class:///org/sonar/colorizer/HtmlDecorator|,|java+method:///org/sonar/colorizer/HtmlDecorator/consume(org.sonar.channel.CodeReader,java.lang.Object)|>>,
    <|java+method:///org/sonar/api/resources/InputFile/getFileBaseDir()|,<|java+interface:///org/sonar/api/resources/InputFile|,|java+method:///org/sonar/api/resources/InputFile/getFileBaseDir()|>>,
    <|java+method:///org/sonar/api/config/Settings/doOnRemoveProperty(java.lang.String)|,<|java+class:///org/sonar/api/config/Settings|,|java+method:///org/sonar/api/config/Settings/doOnRemoveProperty(java.lang.String)|>>,
    <|java+method:///org/sonar/graph/IncrementalCyclesAndFESSolver/getNumberOfLoops()|,<|java+class:///org/sonar/graph/IncrementalCyclesAndFESSolver|,|java+method:///org/sonar/graph/IncrementalCyclesAndFESSolver/getNumberOfLoops()|>>,
    <|java+method:///org/sonar/graph/FeedbackCycle/compareTo(java.lang.Object)|,<|java+class:///org/sonar/graph/FeedbackCycle|,|java+method:///org/sonar/graph/FeedbackCycle/compareTo(java.lang.Object)|>>,
    <|java+method:///org/sonar/api/issue/IssueHandler$Context/setSeverity(java.lang.String)|,<|java+interface:///org/sonar/api/issue/IssueHandler$Context|,|java+method:///org/sonar/api/issue/IssueHandler$Context/setSeverity(java.lang.String)|>>,
    <|java+method:///org/sonar/api/config/PropertyDefinition/validateBoolean(java.lang.String)|,<|java+class:///org/sonar/api/config/PropertyDefinition|,|java+method:///org/sonar/api/config/PropertyDefinition/validateBoolean(java.lang.String)|>>,
    <|java+method:///org/sonar/api/server/debt/DebtCharacteristic/order()|,<|java+interface:///org/sonar/api/server/debt/DebtCharacteristic|,|java+method:///org/sonar/api/server/debt/DebtCharacteristic/order()|>>,
    <|java+method:///org/sonar/api/web/CodeColorizerFormat/getTokenizers()|,<|java+class:///org/sonar/api/web/CodeColorizerFormat|,|java+method:///org/sonar/api/web/CodeColorizerFormat/getTokenizers()|>>,
    <|java+method:///org/sonar/graph/FeedbackCycle/createBagWithAllEdgesOfCycles(java.util.Set)|,<|java+class:///org/sonar/graph/FeedbackCycle|,|java+method:///org/sonar/graph/FeedbackCycle/createBagWithAllEdgesOfCycles(java.util.Set)|>>,
    <|java+method:///org/sonar/api/platform/ServerFileSystem/getExtensions(java.lang.String,java.lang.String%5B%5D)|,<|java+interface:///org/sonar/api/platform/ServerFileSystem|,|java+method:///org/sonar/api/platform/ServerFileSystem/getExtensions(java.lang.String,java.lang.String%5B%5D)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$LineOffsetCounter/getOriginalLineOffsets()|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata$LineOffsetCounter|,|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$LineOffsetCounter/getOriginalLineOffsets()|>>,
    <|java+method:///org/sonar/colorizer/LiteralTokenizer/consume(org.sonar.channel.CodeReader,java.lang.Object)|,<|java+class:///org/sonar/colorizer/LiteralTokenizer|,|java+method:///org/sonar/colorizer/LiteralTokenizer/consume(org.sonar.channel.CodeReader,java.lang.Object)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata/readFile(java.io.File,java.nio.charset.Charset,org.sonar.api.batch.fs.internal.FileMetadata$CharHandler%5B%5D)|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata|,|java+method:///org/sonar/api/batch/fs/internal/FileMetadata/readFile(java.io.File,java.nio.charset.Charset,org.sonar.api.batch.fs.internal.FileMetadata$CharHandler%5B%5D)|>>,
    <|java+method:///org/sonar/api/checks/AnnotationCheckFactory/getField(java.lang.Object,java.lang.String)|,<|java+class:///org/sonar/api/checks/AnnotationCheckFactory|,|java+method:///org/sonar/api/checks/AnnotationCheckFactory/getField(java.lang.Object,java.lang.String)|>>,
    <|java+method:///org/sonar/api/config/Settings/setProperties(java.util.Map)|,<|java+class:///org/sonar/api/config/Settings|,|java+method:///org/sonar/api/config/Settings/setProperties(java.util.Map)|>>,
    <|java+method:///org/sonar/graph/CycleDetector/getCycles()|,<|java+class:///org/sonar/graph/CycleDetector|,|java+method:///org/sonar/graph/CycleDetector/getCycles()|>>,
    <|java+method:///org/sonar/graph/DsmPrinter/print(java.io.Writer,org.sonar.graph.Dsm,boolean)|,<|java+class:///org/sonar/graph/DsmPrinter|,|java+method:///org/sonar/graph/DsmPrinter/print(java.io.Writer,org.sonar.graph.Dsm,boolean)|>>,
    <|java+method:///org/sonar/api/resources/InputFile/getRelativePath()|,<|java+interface:///org/sonar/api/resources/InputFile|,|java+method:///org/sonar/api/resources/InputFile/getRelativePath()|>>,
    <|java+initializer:///org/sonar/api/server/ws/RailsHandler/RailsHandler$initializer|,<|java+class:///org/sonar/api/server/ws/RailsHandler|,|java+initializer:///org/sonar/api/server/ws/RailsHandler/RailsHandler$initializer|>>,
    <|java+method:///org/sonar/api/batch/sensor/internal/SensorContextTester/lineHits(java.lang.String,org.sonar.api.batch.sensor.coverage.CoverageType,int)|,<|java+class:///org/sonar/api/batch/sensor/internal/SensorContextTester|,|java+method:///org/sonar/api/batch/sensor/internal/SensorContextTester/lineHits(java.lang.String,org.sonar.api.batch.sensor.coverage.CoverageType,int)|>>,
    <|java+method:///org/sonar/api/resources/Method/createMethod(java.lang.String,org.sonar.api.resources.Language)|,<|java+class:///org/sonar/api/resources/Method|,|java+method:///org/sonar/api/resources/Method/createMethod(java.lang.String,org.sonar.api.resources.Language)|>>,
    <|java+constructor:///org/sonar/colorizer/TokenizerDispatcher/TokenizerDispatcher(org.sonar.channel.Channel%5B%5D)|,<|java+class:///org/sonar/colorizer/TokenizerDispatcher|,|java+constructor:///org/sonar/colorizer/TokenizerDispatcher/TokenizerDispatcher(org.sonar.channel.Channel%5B%5D)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$LineHashComputer/handleIgnoreEoL(char)|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata$LineHashComputer|,|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$LineHashComputer/handleIgnoreEoL(char)|>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester/access$600(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester)|,<|java+class:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester|,|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester/access$600(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester)|>>,
    <|java+constructor:///org/sonar/api/resources/ResourceTypeTree$1/ResourceTypeTree$1(org.sonar.api.resources.ResourceTypeTree)|,<|java+class:///org/sonar/api/resources/ResourceTypeTree$1|,|java+constructor:///org/sonar/api/resources/ResourceTypeTree$1/ResourceTypeTree$1(org.sonar.api.resources.ResourceTypeTree)|>>,
    <|java+method:///org/sonar/api/checks/AnnotationCheckFactory/create(org.sonar.api.profiles.RulesProfile,java.lang.String,java.util.Collection)|,<|java+class:///org/sonar/api/checks/AnnotationCheckFactory|,|java+method:///org/sonar/api/checks/AnnotationCheckFactory/create(org.sonar.api.profiles.RulesProfile,java.lang.String,java.util.Collection)|>>,
    <|java+method:///org/sonar/colorizer/JavaConstantTokenizer$1/isJavaConstantPart(int)|,<|java+class:///org/sonar/colorizer/JavaConstantTokenizer$1|,|java+method:///org/sonar/colorizer/JavaConstantTokenizer$1/isJavaConstantPart(int)|>>,
    <|java+method:///org/sonar/graph/FeedbackCycle/compareTo(org.sonar.graph.FeedbackCycle)|,<|java+class:///org/sonar/graph/FeedbackCycle|,|java+method:///org/sonar/graph/FeedbackCycle/compareTo(org.sonar.graph.FeedbackCycle)|>>,
    <|java+method:///org/sonar/graph/MinimumFeedbackEdgeSetSolver/doesFeedbackEdgesContainAnEdgeOfTheCycle(java.util.Set,org.sonar.graph.FeedbackCycle)|,<|java+class:///org/sonar/graph/MinimumFeedbackEdgeSetSolver|,|java+method:///org/sonar/graph/MinimumFeedbackEdgeSetSolver/doesFeedbackEdgesContainAnEdgeOfTheCycle(java.util.Set,org.sonar.graph.FeedbackCycle)|>>,
    <|java+method:///org/sonar/api/issue/IssueHandler$Context/setAuthorLogin(java.lang.String)|,<|java+interface:///org/sonar/api/issue/IssueHandler$Context|,|java+method:///org/sonar/api/issue/IssueHandler$Context/setAuthorLogin(java.lang.String)|>>,
    <|java+method:///org/sonar/colorizer/MultilinesDocTokenizer$MultilineEndTokenMatcher/match(int)|,<|java+class:///org/sonar/colorizer/MultilinesDocTokenizer$MultilineEndTokenMatcher|,|java+method:///org/sonar/colorizer/MultilinesDocTokenizer$MultilineEndTokenMatcher/match(int)|>>,
    <|java+method:///org/sonar/colorizer/HtmlOptions/getFirstLineId()|,<|java+class:///org/sonar/colorizer/HtmlOptions|,|java+method:///org/sonar/colorizer/HtmlOptions/getFirstLineId()|>>,
    <|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRepositoryImpl/access$600(org.sonar.api.server.rule.RulesDefinition$NewRepositoryImpl)|,<|java+class:///org/sonar/api/server/rule/RulesDefinition$NewRepositoryImpl|,|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRepositoryImpl/access$600(org.sonar.api.server.rule.RulesDefinition$NewRepositoryImpl)|>>,
    <|java+constructor:///org/sonar/graph/Dsm/Dsm(org.sonar.graph.DirectedGraphAccessor)|,<|java+class:///org/sonar/graph/Dsm|,|java+constructor:///org/sonar/graph/Dsm/Dsm(org.sonar.graph.DirectedGraphAccessor)|>>,
    <|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/getSourceFiles()|,<|java+class:///org/sonar/api/batch/bootstrap/ProjectDefinition|,|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/getSourceFiles()|>>,
    <|java+method:///org/sonar/api/resources/JavaPackage/matchFilePattern(java.lang.String)|,<|java+class:///org/sonar/api/resources/JavaPackage|,|java+method:///org/sonar/api/resources/JavaPackage/matchFilePattern(java.lang.String)|>>,
    <|java+method:///org/sonar/colorizer/JavaAnnotationTokenizer/consume(org.sonar.channel.CodeReader,org.sonar.colorizer.HtmlCodeBuilder)|,<|java+class:///org/sonar/colorizer/JavaAnnotationTokenizer|,|java+method:///org/sonar/colorizer/JavaAnnotationTokenizer/consume(org.sonar.channel.CodeReader,org.sonar.colorizer.HtmlCodeBuilder)|>>,
    <|java+constructor:///org/sonar/graph/FeedbackCycle/FeedbackCycle(org.sonar.graph.Cycle)|,<|java+class:///org/sonar/graph/FeedbackCycle|,|java+constructor:///org/sonar/graph/FeedbackCycle/FeedbackCycle(org.sonar.graph.Cycle)|>>,
    <|java+method:///org/sonar/api/ce/measure/test/TestMeasureComputerDefinition$MatchMetricKey/apply(java.lang.Object)|,<|java+class:///org/sonar/api/ce/measure/test/TestMeasureComputerDefinition$MatchMetricKey|,|java+method:///org/sonar/api/ce/measure/test/TestMeasureComputerDefinition$MatchMetricKey/apply(java.lang.Object)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/PathPattern$RelativePathPattern/match(org.sonar.api.batch.fs.InputFile)|,<|java+class:///org/sonar/api/batch/fs/internal/PathPattern$RelativePathPattern|,|java+method:///org/sonar/api/batch/fs/internal/PathPattern$RelativePathPattern/match(org.sonar.api.batch.fs.InputFile)|>>,
    <|java+method:///org/sonar/graph/DirectedGraphAccessor/getEdge(java.lang.Object,java.lang.Object)|,<|java+interface:///org/sonar/graph/DirectedGraphAccessor|,|java+method:///org/sonar/graph/DirectedGraphAccessor/getEdge(java.lang.Object,java.lang.Object)|>>,
    <|java+constructor:///org/sonar/api/utils/DateUtils$ThreadSafeDateFormat$1/DateUtils$ThreadSafeDateFormat$1(org.sonar.api.utils.DateUtils$ThreadSafeDateFormat)|,<|java+class:///org/sonar/api/utils/DateUtils$ThreadSafeDateFormat$1|,|java+constructor:///org/sonar/api/utils/DateUtils$ThreadSafeDateFormat$1/DateUtils$ThreadSafeDateFormat$1(org.sonar.api.utils.DateUtils$ThreadSafeDateFormat)|>>,
    <|java+method:///org/sonar/api/component/RubyComponentService/findByKey(java.lang.String)|,<|java+interface:///org/sonar/api/component/RubyComponentService|,|java+method:///org/sonar/api/component/RubyComponentService/findByKey(java.lang.String)|>>,
    <|java+method:///org/sonar/colorizer/RegexpTokenizer/consume(org.sonar.channel.CodeReader,java.lang.Object)|,<|java+class:///org/sonar/colorizer/RegexpTokenizer|,|java+method:///org/sonar/colorizer/RegexpTokenizer/consume(org.sonar.channel.CodeReader,java.lang.Object)|>>,
    <|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/getTestDirs()|,<|java+class:///org/sonar/api/batch/bootstrap/ProjectDefinition|,|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/getTestDirs()|>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester/access$500(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester)|,<|java+class:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester|,|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester/access$500(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester)|>>,
    <|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/addBinaryDir(java.lang.String)|,<|java+class:///org/sonar/api/batch/bootstrap/ProjectDefinition|,|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/addBinaryDir(java.lang.String)|>>,
    <|java+method:///org/sonar/api/issue/IssueHandler$Context/assign(org.sonar.api.user.User)|,<|java+interface:///org/sonar/api/issue/IssueHandler$Context|,|java+method:///org/sonar/api/issue/IssueHandler$Context/assign(org.sonar.api.user.User)|>>,
    <|java+method:///org/sonar/graph/IncrementalCyclesAndFESSolver/getWeightOfFeedbackEdgeSet()|,<|java+class:///org/sonar/graph/IncrementalCyclesAndFESSolver|,|java+method:///org/sonar/graph/IncrementalCyclesAndFESSolver/getWeightOfFeedbackEdgeSet()|>>,
    <|java+method:///org/sonar/graph/CycleDetector/detectCycles()|,<|java+class:///org/sonar/graph/CycleDetector|,|java+method:///org/sonar/graph/CycleDetector/detectCycles()|>>,
    <|java+method:///org/sonar/api/batch/AbstractSourceImporter/analyse(org.sonar.api.resources.Project,org.sonar.api.batch.SensorContext)|,<|java+class:///org/sonar/api/batch/AbstractSourceImporter|,|java+method:///org/sonar/api/batch/AbstractSourceImporter/analyse(org.sonar.api.resources.Project,org.sonar.api.batch.SensorContext)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/setLines(int)|,<|java+class:///org/sonar/api/batch/fs/internal/DefaultInputFile|,|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/setLines(int)|>>,
    <|java+method:///org/sonar/api/batch/sensor/issue/internal/DefaultIssue$ToFlow$1/locations()|,<|java+class:///org/sonar/api/batch/sensor/issue/internal/DefaultIssue$ToFlow$1|,|java+method:///org/sonar/api/batch/sensor/issue/internal/DefaultIssue$ToFlow$1/locations()|>>,
    <|java+method:///org/sonar/api/web/FilterTemplate/getName()|,<|java+class:///org/sonar/api/web/FilterTemplate|,|java+method:///org/sonar/api/web/FilterTemplate/getName()|>>,
    <|java+constructor:///org/sonar/graph/FeedbackEdge/FeedbackEdge(org.sonar.graph.Edge,int)|,<|java+class:///org/sonar/graph/FeedbackEdge|,|java+constructor:///org/sonar/graph/FeedbackEdge/FeedbackEdge(org.sonar.graph.Edge,int)|>>,
    <|java+constructor:///org/sonar/colorizer/CaseInsensitiveKeywordsTokenizer/CaseInsensitiveKeywordsTokenizer(java.lang.String,java.lang.String,java.util.Set)|,<|java+class:///org/sonar/colorizer/CaseInsensitiveKeywordsTokenizer|,|java+constructor:///org/sonar/colorizer/CaseInsensitiveKeywordsTokenizer/CaseInsensitiveKeywordsTokenizer(java.lang.String,java.lang.String,java.util.Set)|>>,
    <|java+method:///org/sonar/api/utils/DateUtils$ThreadSafeDateFormat/parse(java.lang.String,java.text.ParsePosition)|,<|java+class:///org/sonar/api/utils/DateUtils$ThreadSafeDateFormat|,|java+method:///org/sonar/api/utils/DateUtils$ThreadSafeDateFormat/parse(java.lang.String,java.text.ParsePosition)|>>,
    <|java+method:///org/sonar/colorizer/StringTokenizer/consume(org.sonar.channel.CodeReader,org.sonar.colorizer.HtmlCodeBuilder)|,<|java+class:///org/sonar/colorizer/StringTokenizer|,|java+method:///org/sonar/colorizer/StringTokenizer/consume(org.sonar.channel.CodeReader,org.sonar.colorizer.HtmlCodeBuilder)|>>,
    <|java+method:///org/sonar/colorizer/KeywordsTokenizer/consume(org.sonar.channel.CodeReader,java.lang.Object)|,<|java+class:///org/sonar/colorizer/KeywordsTokenizer|,|java+method:///org/sonar/colorizer/KeywordsTokenizer/consume(org.sonar.channel.CodeReader,java.lang.Object)|>>,
    <|java+method:///org/sonar/graph/DsmPrinter/printRowHeader(int)|,<|java+class:///org/sonar/graph/DsmPrinter|,|java+method:///org/sonar/graph/DsmPrinter/printRowHeader(int)|>>,
    <|java+constructor:///org/sonar/graph/MaximumCyclesToFoundException/MaximumCyclesToFoundException()|,<|java+class:///org/sonar/graph/MaximumCyclesToFoundException|,|java+constructor:///org/sonar/graph/MaximumCyclesToFoundException/MaximumCyclesToFoundException()|>>,
    <|java+method:///org/sonar/api/issue/IssueHandler$Context/addComment(java.lang.String)|,<|java+interface:///org/sonar/api/issue/IssueHandler$Context|,|java+method:///org/sonar/api/issue/IssueHandler$Context/addComment(java.lang.String)|>>,
    <|java+constructor:///org/sonar/api/web/ServletFilter$UrlPattern/ServletFilter$UrlPattern(java.lang.String)|,<|java+class:///org/sonar/api/web/ServletFilter$UrlPattern|,|java+constructor:///org/sonar/api/web/ServletFilter$UrlPattern/ServletFilter$UrlPattern(java.lang.String)|>>,
    <|java+constructor:///org/sonar/duplications/detector/suffixtree/Search$1/Search$1()|,<|java+class:///org/sonar/duplications/detector/suffixtree/Search$1|,|java+constructor:///org/sonar/duplications/detector/suffixtree/Search$1/Search$1()|>>,
    <|java+constructor:///org/sonar/colorizer/CaseInsensitiveKeywordsTokenizer/CaseInsensitiveKeywordsTokenizer(java.lang.String,java.lang.String,java.lang.String%5B%5D)|,<|java+class:///org/sonar/colorizer/CaseInsensitiveKeywordsTokenizer|,|java+constructor:///org/sonar/colorizer/CaseInsensitiveKeywordsTokenizer/CaseInsensitiveKeywordsTokenizer(java.lang.String,java.lang.String,java.lang.String%5B%5D)|>>,
    <|java+method:///org/sonar/api/server/debt/DebtModel/allCharacteristics()|,<|java+interface:///org/sonar/api/server/debt/DebtModel|,|java+method:///org/sonar/api/server/debt/DebtModel/allCharacteristics()|>>,
    <|java+initializer:///org/sonar/api/batch/fs/internal/FileMetadata/FileMetadata$initializer|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata|,|java+initializer:///org/sonar/api/batch/fs/internal/FileMetadata/FileMetadata$initializer|>>,
    <|java+constructor:///org/sonar/colorizer/RegexpTokenizer/RegexpTokenizer(java.lang.String,java.lang.String,java.lang.String)|,<|java+class:///org/sonar/colorizer/RegexpTokenizer|,|java+constructor:///org/sonar/colorizer/RegexpTokenizer/RegexpTokenizer(java.lang.String,java.lang.String,java.lang.String)|>>,
    <|java+method:///org/sonar/api/platform/Server/getDeployDir()|,<|java+class:///org/sonar/api/platform/Server|,|java+method:///org/sonar/api/platform/Server/getDeployDir()|>>,
    <|java+method:///org/sonar/api/batch/SonarIndex/isIndexed(org.sonar.api.resources.Resource,boolean)|,<|java+class:///org/sonar/api/batch/SonarIndex|,|java+method:///org/sonar/api/batch/SonarIndex/isIndexed(org.sonar.api.resources.Resource,boolean)|>>,
    <|java+method:///org/sonar/api/resources/Qualifiers/isPackage(org.sonar.api.resources.Resource)|,<|java+class:///org/sonar/api/resources/Qualifiers|,|java+method:///org/sonar/api/resources/Qualifiers/isPackage(org.sonar.api.resources.Resource)|>>,
    <|java+constructor:///org/sonar/api/resources/JavaPackage/JavaPackage()|,<|java+class:///org/sonar/api/resources/JavaPackage|,|java+constructor:///org/sonar/api/resources/JavaPackage/JavaPackage()|>>,
    <|java+method:///org/sonar/api/utils/DateUtils$ThreadSafeDateFormat/format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)|,<|java+class:///org/sonar/api/utils/DateUtils$ThreadSafeDateFormat|,|java+method:///org/sonar/api/utils/DateUtils$ThreadSafeDateFormat/format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)|>>,
    <|java+method:///org/sonar/api/web/FilterTemplate/createFilter()|,<|java+class:///org/sonar/api/web/FilterTemplate|,|java+method:///org/sonar/api/web/FilterTemplate/createFilter()|>>,
    <|java+method:///org/sonar/graph/DsmPrinter/printCell(int,int)|,<|java+class:///org/sonar/graph/DsmPrinter|,|java+method:///org/sonar/graph/DsmPrinter/printCell(int,int)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$LineHashComputer/newLine()|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata$LineHashComputer|,|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$LineHashComputer/newLine()|>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester/access$400(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester)|,<|java+class:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester|,|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester/access$400(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester)|>>,
    <|java+method:///org/sonar/colorizer/MultilinesDocTokenizer/consume(org.sonar.channel.CodeReader,java.lang.Object)|,<|java+class:///org/sonar/colorizer/MultilinesDocTokenizer|,|java+method:///org/sonar/colorizer/MultilinesDocTokenizer/consume(org.sonar.channel.CodeReader,java.lang.Object)|>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$1/getCeTask()|,<|java+class:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$1|,|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$1/getCeTask()|>>,
    <|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/resetSourceDirs()|,<|java+class:///org/sonar/api/batch/bootstrap/ProjectDefinition|,|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/resetSourceDirs()|>>,
    <|java+method:///org/sonar/graph/MinimumFeedbackEdgeSetSolver/getNumberOfLoops()|,<|java+class:///org/sonar/graph/MinimumFeedbackEdgeSetSolver|,|java+method:///org/sonar/graph/MinimumFeedbackEdgeSetSolver/getNumberOfLoops()|>>,
    <|java+method:///org/sonar/duplications/detector/suffixtree/Search$1/compare(org.sonar.duplications.detector.suffixtree.Node,org.sonar.duplications.detector.suffixtree.Node)|,<|java+class:///org/sonar/duplications/detector/suffixtree/Search$1|,|java+method:///org/sonar/duplications/detector/suffixtree/Search$1/compare(org.sonar.duplications.detector.suffixtree.Node,org.sonar.duplications.detector.suffixtree.Node)|>>,
    <|java+method:///org/sonar/api/resources/InputFileUtils$DefaultInputFile/getFile()|,<|java+class:///org/sonar/api/resources/InputFileUtils$DefaultInputFile|,|java+method:///org/sonar/api/resources/InputFileUtils$DefaultInputFile/getFile()|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$LineCounter/eof()|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata$LineCounter|,|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$LineCounter/eof()|>>,
    <|java+method:///org/sonar/graph/Cycle/equals(java.lang.Object)|,<|java+class:///org/sonar/graph/Cycle|,|java+method:///org/sonar/graph/Cycle/equals(java.lang.Object)|>>,
    <|java+method:///org/sonar/graph/Cycle/toString()|,<|java+class:///org/sonar/graph/Cycle|,|java+method:///org/sonar/graph/Cycle/toString()|>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileQuery/on(org.sonar.api.scan.filesystem.FileType%5B%5D)|,<|java+class:///org/sonar/api/scan/filesystem/FileQuery|,|java+method:///org/sonar/api/scan/filesystem/FileQuery/on(org.sonar.api.scan.filesystem.FileType%5B%5D)|>>,
    <|java+method:///org/sonar/api/batch/SensorContext/index(org.sonar.api.resources.Resource,org.sonar.api.resources.Resource)|,<|java+interface:///org/sonar/api/batch/SensorContext|,|java+method:///org/sonar/api/batch/SensorContext/index(org.sonar.api.resources.Resource,org.sonar.api.resources.Resource)|>>,
    <|java+constructor:///org/sonar/api/batch/sensor/cpd/internal/DefaultCpdTokens/DefaultCpdTokens(org.sonar.api.config.Settings,org.sonar.api.batch.sensor.internal.SensorStorage)|,<|java+class:///org/sonar/api/batch/sensor/cpd/internal/DefaultCpdTokens|,|java+constructor:///org/sonar/api/batch/sensor/cpd/internal/DefaultCpdTokens/DefaultCpdTokens(org.sonar.api.config.Settings,org.sonar.api.batch.sensor.internal.SensorStorage)|>>,
    <|java+method:///org/sonar/graph/DirectedGraph/addEdge(org.sonar.graph.Edge)|,<|java+class:///org/sonar/graph/DirectedGraph|,|java+method:///org/sonar/graph/DirectedGraph/addEdge(org.sonar.graph.Edge)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/DefaultFileSystem/doPreloadFiles()|,<|java+class:///org/sonar/api/batch/fs/internal/DefaultFileSystem|,|java+method:///org/sonar/api/batch/fs/internal/DefaultFileSystem/doPreloadFiles()|>>,
    <|java+constructor:///org/sonar/api/batch/fs/internal/FileMetadata$FileHashComputer/FileMetadata$FileHashComputer(java.io.File)|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata$FileHashComputer|,|java+constructor:///org/sonar/api/batch/fs/internal/FileMetadata$FileHashComputer/FileMetadata$FileHashComputer(java.io.File)|>>,
    <|java+method:///org/sonar/api/resources/InputFileUtils/getRelativePath(java.io.File,java.io.File)|,<|java+class:///org/sonar/api/resources/InputFileUtils|,|java+method:///org/sonar/api/resources/InputFileUtils/getRelativePath(java.io.File,java.io.File)|>>,
    <|java+method:///org/sonar/api/config/Settings/doOnClearProperties()|,<|java+class:///org/sonar/api/config/Settings|,|java+method:///org/sonar/api/config/Settings/doOnClearProperties()|>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileQuery/equals(java.lang.Object)|,<|java+class:///org/sonar/api/scan/filesystem/FileQuery|,|java+method:///org/sonar/api/scan/filesystem/FileQuery/equals(java.lang.Object)|>>,
    <|java+constructor:///org/sonar/api/batch/AbstractSourceImporter/AbstractSourceImporter(org.sonar.api.resources.Language)|,<|java+class:///org/sonar/api/batch/AbstractSourceImporter|,|java+constructor:///org/sonar/api/batch/AbstractSourceImporter/AbstractSourceImporter(org.sonar.api.resources.Language)|>>,
    <|java+constructor:///org/sonar/api/batch/fs/internal/DefaultInputFile/DefaultInputFile(java.lang.String,java.lang.String)|,<|java+class:///org/sonar/api/batch/fs/internal/DefaultInputFile|,|java+constructor:///org/sonar/api/batch/fs/internal/DefaultInputFile/DefaultInputFile(java.lang.String,java.lang.String)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/setOriginalLineOffsets(int%5B%5D)|,<|java+class:///org/sonar/api/batch/fs/internal/DefaultInputFile|,|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/setOriginalLineOffsets(int%5B%5D)|>>,
    <|java+method:///org/sonar/api/resources/InputFileUtils/create(java.io.File,java.lang.String)|,<|java+class:///org/sonar/api/resources/InputFileUtils|,|java+method:///org/sonar/api/resources/InputFileUtils/create(java.io.File,java.lang.String)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/DefaultFileSystem$Cache/inputFile(java.lang.String)|,<|java+class:///org/sonar/api/batch/fs/internal/DefaultFileSystem$Cache|,|java+method:///org/sonar/api/batch/fs/internal/DefaultFileSystem$Cache/inputFile(java.lang.String)|>>,
    <|java+constructor:///org/sonar/api/config/Settings/Settings(org.sonar.api.config.PropertyDefinitions)|,<|java+class:///org/sonar/api/config/Settings|,|java+constructor:///org/sonar/api/config/Settings/Settings(org.sonar.api.config.PropertyDefinitions)|>>,
    <|java+method:///org/sonar/graph/DsmTopologicalSorter/sort(org.sonar.graph.Dsm)|,<|java+class:///org/sonar/graph/DsmTopologicalSorter|,|java+method:///org/sonar/graph/DsmTopologicalSorter/sort(org.sonar.graph.Dsm)|>>,
    <|java+method:///org/sonar/api/resources/Method/getQualifier()|,<|java+class:///org/sonar/api/resources/Method|,|java+method:///org/sonar/api/resources/Method/getQualifier()|>>,
    <|java+method:///org/sonar/api/config/Settings/getClearString(java.lang.String)|,<|java+class:///org/sonar/api/config/Settings|,|java+method:///org/sonar/api/config/Settings/getClearString(java.lang.String)|>>,
    <|java+method:///org/sonar/api/measures/FileLinesContextFactory/createFor(org.sonar.api.resources.Resource)|,<|java+interface:///org/sonar/api/measures/FileLinesContextFactory|,|java+method:///org/sonar/api/measures/FileLinesContextFactory/createFor(org.sonar.api.resources.Resource)|>>,
    <|java+method:///org/sonar/api/checks/CheckFactory/getChecks()|,<|java+class:///org/sonar/api/checks/CheckFactory|,|java+method:///org/sonar/api/checks/CheckFactory/getChecks()|>>,
    <|java+method:///org/sonar/api/resources/Project/setBaseDir(java.io.File)|,<|java+class:///org/sonar/api/resources/Project|,|java+method:///org/sonar/api/resources/Project/setBaseDir(java.io.File)|>>,
    <|java+constructor:///org/sonar/graph/CycleDetector/CycleDetector(org.sonar.graph.DirectedGraphAccessor)|,<|java+class:///org/sonar/graph/CycleDetector|,|java+constructor:///org/sonar/graph/CycleDetector/CycleDetector(org.sonar.graph.DirectedGraphAccessor)|>>,
    <|java+constructor:///org/sonar/colorizer/MultilinesDocTokenizer/MultilinesDocTokenizer(java.lang.String,java.lang.String,java.lang.String)|,<|java+class:///org/sonar/colorizer/MultilinesDocTokenizer|,|java+constructor:///org/sonar/colorizer/MultilinesDocTokenizer/MultilinesDocTokenizer(java.lang.String,java.lang.String,java.lang.String)|>>,
    <|java+method:///org/sonar/api/measures/Measure/setId(java.lang.Long)|,<|java+class:///org/sonar/api/measures/Measure|,|java+method:///org/sonar/api/measures/Measure/setId(java.lang.Long)|>>,
    <|java+method:///org/sonar/graph/IncrementalCyclesAndFESSolver/isAcyclicGraph()|,<|java+class:///org/sonar/graph/IncrementalCyclesAndFESSolver|,|java+method:///org/sonar/graph/IncrementalCyclesAndFESSolver/isAcyclicGraph()|>>,
    <|java+method:///org/sonar/graph/Cycle/contains(org.sonar.graph.Edge)|,<|java+class:///org/sonar/graph/Cycle|,|java+method:///org/sonar/graph/Cycle/contains(org.sonar.graph.Edge)|>>,
    <|java+constructor:///org/sonar/graph/DirectedGraph/DirectedGraph()|,<|java+class:///org/sonar/graph/DirectedGraph|,|java+constructor:///org/sonar/graph/DirectedGraph/DirectedGraph()|>>,
    <|java+method:///org/sonar/graph/DirectedGraph/hasEdge(java.lang.Object,java.lang.Object)|,<|java+class:///org/sonar/graph/DirectedGraph|,|java+method:///org/sonar/graph/DirectedGraph/hasEdge(java.lang.Object,java.lang.Object)|>>,
    <|java+method:///org/sonar/graph/DsmCell/getEdge()|,<|java+class:///org/sonar/graph/DsmCell|,|java+method:///org/sonar/graph/DsmCell/getEdge()|>>,
    <|java+constructor:///org/sonar/colorizer/SynhtaxHighlightingException/SynhtaxHighlightingException(java.lang.String,java.lang.Throwable)|,<|java+class:///org/sonar/colorizer/SynhtaxHighlightingException|,|java+constructor:///org/sonar/colorizer/SynhtaxHighlightingException/SynhtaxHighlightingException(java.lang.String,java.lang.Throwable)|>>,
    <|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/create(java.util.Properties)|,<|java+class:///org/sonar/api/batch/bootstrap/ProjectDefinition|,|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/create(java.util.Properties)|>>,
    <|java+method:///org/sonar/api/resources/ResourceUtils/isClass(org.sonar.api.resources.Resource)|,<|java+class:///org/sonar/api/resources/ResourceUtils|,|java+method:///org/sonar/api/resources/ResourceUtils/isClass(org.sonar.api.resources.Resource)|>>,
    <|java+constructor:///org/sonar/colorizer/InlineDocTokenizer/InlineDocTokenizer(java.lang.String,java.lang.String,java.lang.String)|,<|java+class:///org/sonar/colorizer/InlineDocTokenizer|,|java+constructor:///org/sonar/colorizer/InlineDocTokenizer/InlineDocTokenizer(java.lang.String,java.lang.String,java.lang.String)|>>,
    <|java+method:///org/sonar/colorizer/MultilinesDocTokenizer/hasNextToken(org.sonar.channel.CodeReader,org.sonar.colorizer.HtmlCodeBuilder)|,<|java+class:///org/sonar/colorizer/MultilinesDocTokenizer|,|java+method:///org/sonar/colorizer/MultilinesDocTokenizer/hasNextToken(org.sonar.channel.CodeReader,org.sonar.colorizer.HtmlCodeBuilder)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/getRelativePath()|,<|java+class:///org/sonar/api/batch/fs/internal/DefaultInputFile|,|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/getRelativePath()|>>,
    <|java+constructor:///org/sonar/api/server/rule/RulesDefinition$NewRule/RulesDefinition$NewRule(java.lang.String,java.lang.String,org.sonar.api.server.rule.RulesDefinition$1)|,<|java+class:///org/sonar/api/server/rule/RulesDefinition$NewRule|,|java+constructor:///org/sonar/api/server/rule/RulesDefinition$NewRule/RulesDefinition$NewRule(java.lang.String,java.lang.String,org.sonar.api.server.rule.RulesDefinition$1)|>>,
    <|java+method:///org/sonar/api/batch/SensorContext/saveSource(org.sonar.api.resources.Resource,java.lang.String)|,<|java+interface:///org/sonar/api/batch/SensorContext|,|java+method:///org/sonar/api/batch/SensorContext/saveSource(org.sonar.api.resources.Resource,java.lang.String)|>>,
    <|java+method:///org/sonar/api/web/Filter/create()|,<|java+class:///org/sonar/api/web/Filter|,|java+method:///org/sonar/api/web/Filter/create()|>>,
    <|java+method:///org/sonar/api/web/ServletFilter$UrlPattern/toString()|,<|java+class:///org/sonar/api/web/ServletFilter$UrlPattern|,|java+method:///org/sonar/api/web/ServletFilter$UrlPattern/toString()|>>,
    <|java+constructor:///org/sonar/colorizer/SynhtaxHighlightingException/SynhtaxHighlightingException(java.lang.String)|,<|java+class:///org/sonar/colorizer/SynhtaxHighlightingException|,|java+constructor:///org/sonar/colorizer/SynhtaxHighlightingException/SynhtaxHighlightingException(java.lang.String)|>>,
    <|java+method:///org/sonar/api/resources/JavaFile/fromAbsolutePath(java.lang.String,java.util.List,boolean)|,<|java+class:///org/sonar/api/resources/JavaFile|,|java+method:///org/sonar/api/resources/JavaFile/fromAbsolutePath(java.lang.String,java.util.List,boolean)|>>,
    <|java+method:///org/sonar/api/resources/ResourceTypes/access$000(org.sonar.api.resources.ResourceTypes)|,<|java+class:///org/sonar/api/resources/ResourceTypes|,|java+method:///org/sonar/api/resources/ResourceTypes/access$000(org.sonar.api.resources.ResourceTypes)|>>,
    <|java+method:///org/sonar/graph/MinimumFeedbackEdgeSetSolver/getWeightOfFeedbackEdgeSet()|,<|java+class:///org/sonar/graph/MinimumFeedbackEdgeSetSolver|,|java+method:///org/sonar/graph/MinimumFeedbackEdgeSetSolver/getWeightOfFeedbackEdgeSet()|>>,
    <|java+constructor:///org/sonar/colorizer/KeywordsTokenizer/KeywordsTokenizer(java.lang.String,java.lang.String,java.util.Set)|,<|java+class:///org/sonar/colorizer/KeywordsTokenizer|,|java+constructor:///org/sonar/colorizer/KeywordsTokenizer/KeywordsTokenizer(java.lang.String,java.lang.String,java.util.Set)|>>,
    <|java+method:///org/sonar/api/resources/JavaPackage/getLanguage()|,<|java+class:///org/sonar/api/resources/JavaPackage|,|java+method:///org/sonar/api/resources/JavaPackage/getLanguage()|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/getInputStream()|,<|java+class:///org/sonar/api/batch/fs/internal/DefaultInputFile|,|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/getInputStream()|>>,
    <|java+method:///org/sonar/api/web/RequiredMeasures/anyOf()|,<|java+interface:///org/sonar/api/web/RequiredMeasures|,|java+method:///org/sonar/api/web/RequiredMeasures/anyOf()|>>,
    <|java+method:///org/sonar/api/measures/CoreMetrics$1/apply(java.lang.Object)|,<|java+class:///org/sonar/api/measures/CoreMetrics$1|,|java+method:///org/sonar/api/measures/CoreMetrics$1/apply(java.lang.Object)|>>,
    <|java+method:///org/sonar/api/batch/SensorContext/isExcluded(org.sonar.api.resources.Resource)|,<|java+interface:///org/sonar/api/batch/SensorContext|,|java+method:///org/sonar/api/batch/SensorContext/isExcluded(org.sonar.api.resources.Resource)|>>,
    <|java+method:///org/sonar/duplications/detector/suffixtree/Search$1/compare(java.lang.Object,java.lang.Object)|,<|java+class:///org/sonar/duplications/detector/suffixtree/Search$1|,|java+method:///org/sonar/duplications/detector/suffixtree/Search$1/compare(java.lang.Object,java.lang.Object)|>>,
    <|java+method:///org/sonar/graph/Dsm/getCell(int,int)|,<|java+class:///org/sonar/graph/Dsm|,|java+method:///org/sonar/graph/Dsm/getCell(int,int)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/PathPattern$RelativePathPattern/match(org.sonar.api.batch.fs.InputFile,boolean)|,<|java+class:///org/sonar/api/batch/fs/internal/PathPattern$RelativePathPattern|,|java+method:///org/sonar/api/batch/fs/internal/PathPattern$RelativePathPattern/match(org.sonar.api.batch.fs.InputFile,boolean)|>>,
    <|java+method:///org/sonar/graph/DsmScanner/readColumnHeadersAndcreateDsmBuilder()|,<|java+class:///org/sonar/graph/DsmScanner|,|java+method:///org/sonar/graph/DsmScanner/readColumnHeadersAndcreateDsmBuilder()|>>,
    <|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/addTestDirs(java.lang.String%5B%5D)|,<|java+class:///org/sonar/api/batch/bootstrap/ProjectDefinition|,|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/addTestDirs(java.lang.String%5B%5D)|>>,
    <|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/addTestFiles(java.io.File%5B%5D)|,<|java+class:///org/sonar/api/batch/bootstrap/ProjectDefinition|,|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/addTestFiles(java.io.File%5B%5D)|>>,
    <|java+method:///org/sonar/api/checks/AnnotationCheckFactory/instantiate(org.sonar.api.rules.ActiveRule,java.lang.Object)|,<|java+class:///org/sonar/api/checks/AnnotationCheckFactory|,|java+method:///org/sonar/api/checks/AnnotationCheckFactory/instantiate(org.sonar.api.rules.ActiveRule,java.lang.Object)|>>,
    <|java+method:///org/sonar/api/batch/AbstractSourceImporter/getLanguage()|,<|java+class:///org/sonar/api/batch/AbstractSourceImporter|,|java+method:///org/sonar/api/batch/AbstractSourceImporter/getLanguage()|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$FileHashComputer/processBuffer()|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata$FileHashComputer|,|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$FileHashComputer/processBuffer()|>>,
    <|java+method:///org/sonar/api/web/FilterColumn/isVariation()|,<|java+class:///org/sonar/api/web/FilterColumn|,|java+method:///org/sonar/api/web/FilterColumn/isVariation()|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$CharHandler/handleIgnoreEoL(char)|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata$CharHandler|,|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$CharHandler/handleIgnoreEoL(char)|>>,
    <|java+method:///org/sonar/api/resources/Project/setLatestAnalysis(boolean)|,<|java+class:///org/sonar/api/resources/Project|,|java+method:///org/sonar/api/resources/Project/setLatestAnalysis(boolean)|>>,
    <|java+method:///org/sonar/api/resources/Project/getSettings()|,<|java+class:///org/sonar/api/resources/Project|,|java+method:///org/sonar/api/resources/Project/getSettings()|>>,
    <|java+method:///org/sonar/api/server/ws/WebService$SelectionMode$1/apply(org.sonar.api.server.ws.WebService$SelectionMode)|,<|java+class:///org/sonar/api/server/ws/WebService$SelectionMode$1|,|java+method:///org/sonar/api/server/ws/WebService$SelectionMode$1/apply(org.sonar.api.server.ws.WebService$SelectionMode)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/DefaultFileSystem/setDefaultPredicate(org.sonar.api.batch.fs.FilePredicate)|,<|java+class:///org/sonar/api/batch/fs/internal/DefaultFileSystem|,|java+method:///org/sonar/api/batch/fs/internal/DefaultFileSystem/setDefaultPredicate(org.sonar.api.batch.fs.FilePredicate)|>>,
    <|java+method:///org/sonar/colorizer/MultilinesDocTokenizer/access$000(org.sonar.colorizer.MultilinesDocTokenizer)|,<|java+class:///org/sonar/colorizer/MultilinesDocTokenizer|,|java+method:///org/sonar/colorizer/MultilinesDocTokenizer/access$000(org.sonar.colorizer.MultilinesDocTokenizer)|>>,
    <|java+method:///org/sonar/api/config/PropertyDefinition$Result/access$1800()|,<|java+class:///org/sonar/api/config/PropertyDefinition$Result|,|java+method:///org/sonar/api/config/PropertyDefinition$Result/access$1800()|>>,
    <|java+method:///org/sonar/graph/EdgeFactory/createEdge(java.lang.Object,java.lang.Object,int)|,<|java+interface:///org/sonar/graph/EdgeFactory|,|java+method:///org/sonar/graph/EdgeFactory/createEdge(java.lang.Object,java.lang.Object,int)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata/read(java.io.Reader,org.sonar.api.batch.fs.internal.FileMetadata$CharHandler%5B%5D)|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata|,|java+method:///org/sonar/api/batch/fs/internal/FileMetadata/read(java.io.Reader,org.sonar.api.batch.fs.internal.FileMetadata$CharHandler%5B%5D)|>>,
    <|java+method:///org/sonar/graph/Dsm/getVertex(int)|,<|java+class:///org/sonar/graph/Dsm|,|java+method:///org/sonar/graph/Dsm/getVertex(int)|>>,
    <|java+method:///org/sonar/colorizer/HtmlOptions/isGenerateTable()|,<|java+class:///org/sonar/colorizer/HtmlOptions|,|java+method:///org/sonar/colorizer/HtmlOptions/isGenerateTable()|>>,
    <|java+method:///org/sonar/api/web/Filter/getDisplayAs()|,<|java+class:///org/sonar/api/web/Filter|,|java+method:///org/sonar/api/web/Filter/getDisplayAs()|>>,
    <|java+method:///org/sonar/api/resources/ResourceTypes$1/apply(java.lang.Object)|,<|java+class:///org/sonar/api/resources/ResourceTypes$1|,|java+method:///org/sonar/api/resources/ResourceTypes$1/apply(java.lang.Object)|>>,
    <|java+method:///org/sonar/colorizer/HtmlCodeBuilder/appendWithoutTransforming(java.lang.String)|,<|java+class:///org/sonar/colorizer/HtmlCodeBuilder|,|java+method:///org/sonar/colorizer/HtmlCodeBuilder/appendWithoutTransforming(java.lang.String)|>>,
    <|java+method:///org/sonar/api/batch/SonarIndex/getResources()|,<|java+class:///org/sonar/api/batch/SonarIndex|,|java+method:///org/sonar/api/batch/SonarIndex/getResources()|>>,
    <|java+method:///org/sonar/api/batch/SonarIndex/addResource(org.sonar.api.resources.Resource)|,<|java+class:///org/sonar/api/batch/SonarIndex|,|java+method:///org/sonar/api/batch/SonarIndex/addResource(org.sonar.api.resources.Resource)|>>,
    <|java+method:///org/sonar/api/resources/InputFileUtils/toFiles(java.util.Collection)|,<|java+class:///org/sonar/api/resources/InputFileUtils|,|java+method:///org/sonar/api/resources/InputFileUtils/toFiles(java.util.Collection)|>>,
    <|java+method:///org/sonar/graph/Dsm/permuteColumns(int,int)|,<|java+class:///org/sonar/graph/Dsm|,|java+method:///org/sonar/graph/Dsm/permuteColumns(int,int)|>>,
    <|java+constructor:///org/sonar/graph/Cycle/Cycle(java.util.List)|,<|java+class:///org/sonar/graph/Cycle|,|java+constructor:///org/sonar/graph/Cycle/Cycle(java.util.List)|>>,
    <|java+method:///org/sonar/api/utils/command/CommandExecutor$1/call()|,<|java+class:///org/sonar/api/utils/command/CommandExecutor$1|,|java+method:///org/sonar/api/utils/command/CommandExecutor$1/call()|>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileSystemFilter$Context/fileSystem()|,<|java+interface:///org/sonar/api/scan/filesystem/FileSystemFilter$Context|,|java+method:///org/sonar/api/scan/filesystem/FileSystemFilter$Context/fileSystem()|>>,
    <|java+method:///org/sonar/api/batch/sensor/issue/internal/DefaultIssue$ToFlow/apply(java.util.List)|,<|java+class:///org/sonar/api/batch/sensor/issue/internal/DefaultIssue$ToFlow|,|java+method:///org/sonar/api/batch/sensor/issue/internal/DefaultIssue$ToFlow/apply(java.util.List)|>>,
    <|java+constructor:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$1/PostProjectAnalysisTaskTester$1(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester)|,<|java+class:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$1|,|java+constructor:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$1/PostProjectAnalysisTaskTester$1(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester)|>>,
    <|java+constructor:///org/sonar/api/web/FilterColumn/FilterColumn(java.lang.String,java.lang.String,java.lang.String,boolean)|,<|java+class:///org/sonar/api/web/FilterColumn|,|java+constructor:///org/sonar/api/web/FilterColumn/FilterColumn(java.lang.String,java.lang.String,java.lang.String,boolean)|>>,
    <|java+method:///org/sonar/colorizer/HtmlCodeBuilder/getVariable(java.lang.Object)|,<|java+class:///org/sonar/colorizer/HtmlCodeBuilder|,|java+method:///org/sonar/colorizer/HtmlCodeBuilder/getVariable(java.lang.Object)|>>,
    <|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/setTestDirs(java.lang.String%5B%5D)|,<|java+class:///org/sonar/api/batch/bootstrap/ProjectDefinition|,|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/setTestDirs(java.lang.String%5B%5D)|>>,
    <|java+method:///org/sonar/api/measures/CoreMetrics$1/apply(org.sonar.api.measures.Metric)|,<|java+class:///org/sonar/api/measures/CoreMetrics$1|,|java+method:///org/sonar/api/measures/CoreMetrics$1/apply(org.sonar.api.measures.Metric)|>>,
    <|java+method:///org/sonar/graph/DirectedGraph/getVertices()|,<|java+class:///org/sonar/graph/DirectedGraph|,|java+method:///org/sonar/graph/DirectedGraph/getVertices()|>>,
    <|java+constructor:///org/sonar/api/batch/bootstrap/ProjectBuilder/ProjectBuilder(org.sonar.api.batch.bootstrap.ProjectReactor)|,<|java+class:///org/sonar/api/batch/bootstrap/ProjectBuilder|,|java+constructor:///org/sonar/api/batch/bootstrap/ProjectBuilder/ProjectBuilder(org.sonar.api.batch.bootstrap.ProjectReactor)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/PathPattern/match(org.sonar.api.batch.fs.InputFile)|,<|java+class:///org/sonar/api/batch/fs/internal/PathPattern|,|java+method:///org/sonar/api/batch/fs/internal/PathPattern/match(org.sonar.api.batch.fs.InputFile)|>>,
    <|java+method:///org/sonar/colorizer/CodeColorizer/groovyToHtml(java.io.Reader,org.sonar.colorizer.HtmlOptions)|,<|java+class:///org/sonar/colorizer/CodeColorizer|,|java+method:///org/sonar/colorizer/CodeColorizer/groovyToHtml(java.io.Reader,org.sonar.colorizer.HtmlOptions)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$LineCounter/lines()|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata$LineCounter|,|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$LineCounter/lines()|>>,
    <|java+method:///org/sonar/api/resources/ResourceTypeTree/access$300(org.sonar.api.resources.ResourceTypeTree)|,<|java+class:///org/sonar/api/resources/ResourceTypeTree|,|java+method:///org/sonar/api/resources/ResourceTypeTree/access$300(org.sonar.api.resources.ResourceTypeTree)|>>,
    <|java+constructor:///org/sonar/api/web/Filter/Filter()|,<|java+class:///org/sonar/api/web/Filter|,|java+constructor:///org/sonar/api/web/Filter/Filter()|>>,
    <|java+method:///org/sonar/api/config/Settings/doOnGetProperties(java.lang.String)|,<|java+class:///org/sonar/api/config/Settings|,|java+method:///org/sonar/api/config/Settings/doOnGetProperties(java.lang.String)|>>,
    <|java+method:///org/sonar/api/server/debt/DebtCharacteristic/isSub()|,<|java+interface:///org/sonar/api/server/debt/DebtCharacteristic|,|java+method:///org/sonar/api/server/debt/DebtCharacteristic/isSub()|>>,
    <|java+method:///org/sonar/api/resources/Project/setSettings(org.sonar.api.config.Settings)|,<|java+class:///org/sonar/api/resources/Project|,|java+method:///org/sonar/api/resources/Project/setSettings(org.sonar.api.config.Settings)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/DefaultFileSystem/isDefaultJvmEncoding()|,<|java+class:///org/sonar/api/batch/fs/internal/DefaultFileSystem|,|java+method:///org/sonar/api/batch/fs/internal/DefaultFileSystem/isDefaultJvmEncoding()|>>,
    <|java+constructor:///org/sonar/api/resources/Directory/Directory(java.lang.String,org.sonar.api.resources.Language)|,<|java+class:///org/sonar/api/resources/Directory|,|java+constructor:///org/sonar/api/resources/Directory/Directory(java.lang.String,org.sonar.api.resources.Language)|>>,
    <|java+constructor:///org/sonar/api/web/FilterTemplate/FilterTemplate()|,<|java+class:///org/sonar/api/web/FilterTemplate|,|java+constructor:///org/sonar/api/web/FilterTemplate/FilterTemplate()|>>,
    <|java+constructor:///org/sonar/api/resources/ResourceTypes$2/ResourceTypes$2(org.sonar.api.resources.ResourceTypes)|,<|java+class:///org/sonar/api/resources/ResourceTypes$2|,|java+constructor:///org/sonar/api/resources/ResourceTypes$2/ResourceTypes$2(org.sonar.api.resources.ResourceTypes)|>>,
    <|java+method:///org/sonar/colorizer/MultilinesDocTokenizer/access$100(org.sonar.colorizer.MultilinesDocTokenizer)|,<|java+class:///org/sonar/colorizer/MultilinesDocTokenizer|,|java+method:///org/sonar/colorizer/MultilinesDocTokenizer/access$100(org.sonar.colorizer.MultilinesDocTokenizer)|>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileQuery/onLanguage(java.lang.String%5B%5D)|,<|java+class:///org/sonar/api/scan/filesystem/FileQuery|,|java+method:///org/sonar/api/scan/filesystem/FileQuery/onLanguage(java.lang.String%5B%5D)|>>,
    <|java+method:///org/sonar/api/resources/JavaFile/getQualifier()|,<|java+class:///org/sonar/api/resources/JavaFile|,|java+method:///org/sonar/api/resources/JavaFile/getQualifier()|>>,
    <|java+constructor:///org/sonar/api/resources/Project/Project(java.lang.String,java.lang.String,java.lang.String)|,<|java+class:///org/sonar/api/resources/Project|,|java+constructor:///org/sonar/api/resources/Project/Project(java.lang.String,java.lang.String,java.lang.String)|>>,
    <|java+method:///org/sonar/api/resources/InputFileUtils$DefaultInputFile/getFileBaseDir()|,<|java+class:///org/sonar/api/resources/InputFileUtils$DefaultInputFile|,|java+method:///org/sonar/api/resources/InputFileUtils$DefaultInputFile/getFileBaseDir()|>>,
    <|java+method:///org/sonar/graph/DsmScanner/scan(java.lang.String)|,<|java+class:///org/sonar/graph/DsmScanner|,|java+method:///org/sonar/graph/DsmScanner/scan(java.lang.String)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/setLastValidOffset(int)|,<|java+class:///org/sonar/api/batch/fs/internal/DefaultInputFile|,|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/setLastValidOffset(int)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata/computeLineHashesForIssueTracking(org.sonar.api.batch.fs.internal.DefaultInputFile,org.sonar.api.batch.fs.internal.FileMetadata$LineHashConsumer)|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata|,|java+method:///org/sonar/api/batch/fs/internal/FileMetadata/computeLineHashesForIssueTracking(org.sonar.api.batch.fs.internal.DefaultInputFile,org.sonar.api.batch.fs.internal.FileMetadata$LineHashConsumer)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$CharHandler/newLine()|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata$CharHandler|,|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$CharHandler/newLine()|>>,
    <|java+constructor:///org/sonar/graph/StringEdge/StringEdge(java.lang.String,java.lang.String,int)|,<|java+class:///org/sonar/graph/StringEdge|,|java+constructor:///org/sonar/graph/StringEdge/StringEdge(java.lang.String,java.lang.String,int)|>>,
    <|java+constructor:///org/sonar/api/resources/Project/Project(java.lang.String)|,<|java+class:///org/sonar/api/resources/Project|,|java+constructor:///org/sonar/api/resources/Project/Project(java.lang.String)|>>,
    <|java+method:///org/sonar/api/checks/AnnotationCheckFactory/groupByKey(java.util.Collection)|,<|java+class:///org/sonar/api/checks/AnnotationCheckFactory|,|java+method:///org/sonar/api/checks/AnnotationCheckFactory/groupByKey(java.util.Collection)|>>,
    <|java+method:///org/sonar/graph/Dsm/permute(int,int)|,<|java+class:///org/sonar/graph/Dsm|,|java+method:///org/sonar/graph/Dsm/permute(int,int)|>>,
    <|java+constructor:///org/sonar/colorizer/JavaConstantTokenizer$1/JavaConstantTokenizer$1()|,<|java+class:///org/sonar/colorizer/JavaConstantTokenizer$1|,|java+constructor:///org/sonar/colorizer/JavaConstantTokenizer$1/JavaConstantTokenizer$1()|>>,
    <|java+method:///org/sonar/api/resources/ResourceTypes$2/apply(java.lang.Object)|,<|java+class:///org/sonar/api/resources/ResourceTypes$2|,|java+method:///org/sonar/api/resources/ResourceTypes$2/apply(java.lang.Object)|>>,
    <|java+method:///org/sonar/graph/FeedbackCycle/getTotalOccurrencesOfEdgesInCycle()|,<|java+class:///org/sonar/graph/FeedbackCycle|,|java+method:///org/sonar/graph/FeedbackCycle/getTotalOccurrencesOfEdgesInCycle()|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/setHash(java.lang.String)|,<|java+class:///org/sonar/api/batch/fs/internal/DefaultInputFile|,|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/setHash(java.lang.String)|>>,
    <|java+method:///org/sonar/api/batch/SensorContext/isIndexed(org.sonar.api.resources.Resource,boolean)|,<|java+interface:///org/sonar/api/batch/SensorContext|,|java+method:///org/sonar/api/batch/SensorContext/isIndexed(org.sonar.api.resources.Resource,boolean)|>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileQuery/onTest()|,<|java+class:///org/sonar/api/scan/filesystem/FileQuery|,|java+method:///org/sonar/api/scan/filesystem/FileQuery/onTest()|>>,
    <|java+method:///org/sonar/api/batch/SonarIndex/getSource(org.sonar.api.resources.Resource)|,<|java+class:///org/sonar/api/batch/SonarIndex|,|java+method:///org/sonar/api/batch/SonarIndex/getSource(org.sonar.api.resources.Resource)|>>,
    <|java+method:///org/sonar/api/web/Filter/isFavouritesOnly()|,<|java+class:///org/sonar/api/web/Filter|,|java+method:///org/sonar/api/web/Filter/isFavouritesOnly()|>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileQuery/typeAttributes()|,<|java+class:///org/sonar/api/scan/filesystem/FileQuery|,|java+method:///org/sonar/api/scan/filesystem/FileQuery/typeAttributes()|>>,
    <|java+method:///org/sonar/colorizer/HtmlOptions/setGenerateTable(boolean)|,<|java+class:///org/sonar/colorizer/HtmlOptions|,|java+method:///org/sonar/colorizer/HtmlOptions/setGenerateTable(boolean)|>>,
    <|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/getBinaries()|,<|java+class:///org/sonar/api/batch/bootstrap/ProjectDefinition|,|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/getBinaries()|>>,
    <|java+constructor:///org/sonar/graph/CycleDetector/CycleDetector(org.sonar.graph.DirectedGraphAccessor,java.util.Collection,java.util.Set)|,<|java+class:///org/sonar/graph/CycleDetector|,|java+constructor:///org/sonar/graph/CycleDetector/CycleDetector(org.sonar.graph.DirectedGraphAccessor,java.util.Collection,java.util.Set)|>>,
    <|java+method:///org/sonar/graph/DsmScanner/splitLine(java.lang.String)|,<|java+class:///org/sonar/graph/DsmScanner|,|java+method:///org/sonar/graph/DsmScanner/splitLine(java.lang.String)|>>,
    <|java+method:///org/sonar/colorizer/KeywordsTokenizer/consume(org.sonar.channel.CodeReader,org.sonar.colorizer.HtmlCodeBuilder)|,<|java+class:///org/sonar/colorizer/KeywordsTokenizer|,|java+method:///org/sonar/colorizer/KeywordsTokenizer/consume(org.sonar.channel.CodeReader,org.sonar.colorizer.HtmlCodeBuilder)|>>,
    <|java+constructor:///org/sonar/api/resources/File/File(java.lang.String,java.lang.String)|,<|java+class:///org/sonar/api/resources/File|,|java+constructor:///org/sonar/api/resources/File/File(java.lang.String,java.lang.String)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/setNonBlankLines(int)|,<|java+class:///org/sonar/api/batch/fs/internal/DefaultInputFile|,|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/setNonBlankLines(int)|>>,
    <|java+method:///org/sonar/colorizer/MultilinesDocTokenizer/consume(org.sonar.channel.CodeReader,org.sonar.colorizer.HtmlCodeBuilder)|,<|java+class:///org/sonar/colorizer/MultilinesDocTokenizer|,|java+method:///org/sonar/colorizer/MultilinesDocTokenizer/consume(org.sonar.channel.CodeReader,org.sonar.colorizer.HtmlCodeBuilder)|>>,
    <|java+method:///org/sonar/colorizer/JavaConstantTokenizer/isJavaConstantStart(int)|,<|java+class:///org/sonar/colorizer/JavaConstantTokenizer|,|java+method:///org/sonar/colorizer/JavaConstantTokenizer/isJavaConstantStart(int)|>>,
    <|java+method:///org/sonar/graph/DsmPrinter/print()|,<|java+class:///org/sonar/graph/DsmPrinter|,|java+method:///org/sonar/graph/DsmPrinter/print()|>>,
    <|java+method:///org/sonar/colorizer/OnlySyntaxHtmlOptions/setTableId(java.lang.String)|,<|java+class:///org/sonar/colorizer/OnlySyntaxHtmlOptions|,|java+method:///org/sonar/colorizer/OnlySyntaxHtmlOptions/setTableId(java.lang.String)|>>,
    <|java+method:///org/sonar/api/batch/AbstractSourceImporter/shouldExecuteOnProject(org.sonar.api.resources.Project)|,<|java+class:///org/sonar/api/batch/AbstractSourceImporter|,|java+method:///org/sonar/api/batch/AbstractSourceImporter/shouldExecuteOnProject(org.sonar.api.resources.Project)|>>,
    <|java+method:///org/sonar/api/resources/Project/getAnalysisVersion()|,<|java+class:///org/sonar/api/resources/Project|,|java+method:///org/sonar/api/resources/Project/getAnalysisVersion()|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$LineOffsetCounter/newLine()|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata$LineOffsetCounter|,|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$LineOffsetCounter/newLine()|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$FileHashComputer/handleIgnoreEoL(char)|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata$FileHashComputer|,|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$FileHashComputer/handleIgnoreEoL(char)|>>,
    <|java+method:///org/sonar/graph/FeedbackEdge/hashCode()|,<|java+class:///org/sonar/graph/FeedbackEdge|,|java+method:///org/sonar/graph/FeedbackEdge/hashCode()|>>,
    <|java+constructor:///org/sonar/api/batch/sensor/issue/internal/DefaultIssue$ToFlow/DefaultIssue$ToFlow(org.sonar.api.batch.sensor.issue.internal.DefaultIssue$1)|,<|java+class:///org/sonar/api/batch/sensor/issue/internal/DefaultIssue$ToFlow|,|java+constructor:///org/sonar/api/batch/sensor/issue/internal/DefaultIssue$ToFlow/DefaultIssue$ToFlow(org.sonar.api.batch.sensor.issue.internal.DefaultIssue$1)|>>,
    <|java+method:///org/sonar/graph/CycleDetector/run()|,<|java+class:///org/sonar/graph/CycleDetector|,|java+method:///org/sonar/graph/CycleDetector/run()|>>,
    <|java+method:///org/sonar/api/server/authentication/UnauthorizedException/getPath()|,<|java+class:///org/sonar/api/server/authentication/UnauthorizedException|,|java+method:///org/sonar/api/server/authentication/UnauthorizedException/getPath()|>>,
    <|java+constructor:///org/sonar/api/resources/JavaFile/JavaFile(java.lang.String,java.lang.String)|,<|java+class:///org/sonar/api/resources/JavaFile|,|java+constructor:///org/sonar/api/resources/JavaFile/JavaFile(java.lang.String,java.lang.String)|>>,
    <|java+constructor:///org/sonar/api/batch/sensor/symbol/internal/DefaultSymbolTable$1/DefaultSymbolTable$1(org.sonar.api.batch.sensor.symbol.internal.DefaultSymbolTable)|,<|java+class:///org/sonar/api/batch/sensor/symbol/internal/DefaultSymbolTable$1|,|java+constructor:///org/sonar/api/batch/sensor/symbol/internal/DefaultSymbolTable$1/DefaultSymbolTable$1(org.sonar.api.batch.sensor.symbol.internal.DefaultSymbolTable)|>>,
    <|java+method:///org/sonar/api/batch/AbstractSourceImporter/onFinished()|,<|java+class:///org/sonar/api/batch/AbstractSourceImporter|,|java+method:///org/sonar/api/batch/AbstractSourceImporter/onFinished()|>>,
    <|java+constructor:///org/sonar/api/resources/ResourceTypes$StringPropertyValuePredicate/ResourceTypes$StringPropertyValuePredicate(java.lang.String,java.lang.String)|,<|java+class:///org/sonar/api/resources/ResourceTypes$StringPropertyValuePredicate|,|java+constructor:///org/sonar/api/resources/ResourceTypes$StringPropertyValuePredicate/ResourceTypes$StringPropertyValuePredicate(java.lang.String,java.lang.String)|>>,
    <|java+method:///org/sonar/api/checks/CheckFactory/getActiveRule(java.lang.Object)|,<|java+class:///org/sonar/api/checks/CheckFactory|,|java+method:///org/sonar/api/checks/CheckFactory/getActiveRule(java.lang.Object)|>>,
    <|java+method:///org/sonar/colorizer/JavaConstantTokenizer$1/match(int)|,<|java+class:///org/sonar/colorizer/JavaConstantTokenizer$1|,|java+method:///org/sonar/colorizer/JavaConstantTokenizer$1/match(int)|>>,
    <|java+method:///org/sonar/api/server/debt/DebtCharacteristic/name()|,<|java+interface:///org/sonar/api/server/debt/DebtCharacteristic|,|java+method:///org/sonar/api/server/debt/DebtCharacteristic/name()|>>,
    <|java+method:///org/sonar/graph/DirectedGraph/getEdge(java.lang.Object,java.lang.Object)|,<|java+class:///org/sonar/graph/DirectedGraph|,|java+method:///org/sonar/graph/DirectedGraph/getEdge(java.lang.Object,java.lang.Object)|>>,
    <|java+method:///org/sonar/colorizer/HtmlCodeBuilder/getVariables()|,<|java+class:///org/sonar/colorizer/HtmlCodeBuilder|,|java+method:///org/sonar/colorizer/HtmlCodeBuilder/getVariables()|>>,
    <|java+constructor:///org/sonar/colorizer/GroovyKeywords/GroovyKeywords()|,<|java+class:///org/sonar/colorizer/GroovyKeywords|,|java+constructor:///org/sonar/colorizer/GroovyKeywords/GroovyKeywords()|>>,
    <|java+method:///org/sonar/api/utils/DateUtils$ThreadSafeDateFormat/getDateFormat()|,<|java+class:///org/sonar/api/utils/DateUtils$ThreadSafeDateFormat|,|java+method:///org/sonar/api/utils/DateUtils$ThreadSafeDateFormat/getDateFormat()|>>,
    <|java+method:///org/sonar/api/issue/IssueHandler$Context/isEndOfLife()|,<|java+interface:///org/sonar/api/issue/IssueHandler$Context|,|java+method:///org/sonar/api/issue/IssueHandler$Context/isEndOfLife()|>>,
    <|java+constructor:///org/sonar/colorizer/GroovyTokenizers/GroovyTokenizers()|,<|java+class:///org/sonar/colorizer/GroovyTokenizers|,|java+constructor:///org/sonar/colorizer/GroovyTokenizers/GroovyTokenizers()|>>,
    <|java+method:///org/sonar/graph/DirectedGraph/addVertex(java.lang.Object)|,<|java+class:///org/sonar/graph/DirectedGraph|,|java+method:///org/sonar/graph/DirectedGraph/addVertex(java.lang.Object)|>>,
    <|java+constructor:///org/sonar/colorizer/JavadocTokenizer/JavadocTokenizer()|,<|java+class:///org/sonar/colorizer/JavadocTokenizer|,|java+constructor:///org/sonar/colorizer/JavadocTokenizer/JavadocTokenizer()|>>,
    <|java+constructor:///org/sonar/colorizer/Renderer/Renderer()|,<|java+class:///org/sonar/colorizer/Renderer|,|java+constructor:///org/sonar/colorizer/Renderer/Renderer()|>>,
    <|java+method:///org/sonar/api/issue/IssueHandler$Context/setMessage(java.lang.String)|,<|java+interface:///org/sonar/api/issue/IssueHandler$Context|,|java+method:///org/sonar/api/issue/IssueHandler$Context/setMessage(java.lang.String)|>>,
    <|java+method:///org/sonar/api/batch/SonarIndex/index(org.sonar.api.resources.Resource,org.sonar.api.resources.Resource)|,<|java+class:///org/sonar/api/batch/SonarIndex|,|java+method:///org/sonar/api/batch/SonarIndex/index(org.sonar.api.resources.Resource,org.sonar.api.resources.Resource)|>>,
    <|java+method:///org/sonar/api/resources/InputFileUtils$DefaultInputFile/toString()|,<|java+class:///org/sonar/api/resources/InputFileUtils$DefaultInputFile|,|java+method:///org/sonar/api/resources/InputFileUtils$DefaultInputFile/toString()|>>,
    <|java+constructor:///org/sonar/colorizer/JavaKeywords/JavaKeywords()|,<|java+class:///org/sonar/colorizer/JavaKeywords|,|java+constructor:///org/sonar/colorizer/JavaKeywords/JavaKeywords()|>>,
    <|java+method:///org/sonar/colorizer/JavaAnnotationTokenizer/consume(org.sonar.channel.CodeReader,java.lang.Object)|,<|java+class:///org/sonar/colorizer/JavaAnnotationTokenizer|,|java+method:///org/sonar/colorizer/JavaAnnotationTokenizer/consume(org.sonar.channel.CodeReader,java.lang.Object)|>>,
    <|java+method:///org/sonar/graph/Dsm/permuteVertice(int,int)|,<|java+class:///org/sonar/graph/Dsm|,|java+method:///org/sonar/graph/Dsm/permuteVertice(int,int)|>>,
    <|java+method:///org/sonar/api/batch/SquidUtils/convertToSquidKeyFormat(org.sonar.api.resources.JavaFile)|,<|java+class:///org/sonar/api/batch/SquidUtils|,|java+method:///org/sonar/api/batch/SquidUtils/convertToSquidKeyFormat(org.sonar.api.resources.JavaFile)|>>,
    <|java+constructor:///org/sonar/colorizer/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)|,<|java+class:///org/sonar/colorizer/StringTokenizer|,|java+constructor:///org/sonar/colorizer/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)|>>,
    <|java+method:///org/sonar/api/utils/log/LogInterceptor/log(org.sonar.api.utils.log.LoggerLevel,java.lang.String,java.lang.Object%5B%5D)|,<|java+class:///org/sonar/api/utils/log/LogInterceptor|,|java+method:///org/sonar/api/utils/log/LogInterceptor/log(org.sonar.api.utils.log.LoggerLevel,java.lang.String,java.lang.Object%5B%5D)|>>,
    <|java+constructor:///org/sonar/colorizer/TokenizerDispatcher/TokenizerDispatcher(java.util.List)|,<|java+class:///org/sonar/colorizer/TokenizerDispatcher|,|java+constructor:///org/sonar/colorizer/TokenizerDispatcher/TokenizerDispatcher(java.util.List)|>>,
    <|java+method:///org/sonar/colorizer/HtmlRenderer/render(java.io.Reader,java.util.List)|,<|java+class:///org/sonar/colorizer/HtmlRenderer|,|java+method:///org/sonar/colorizer/HtmlRenderer/render(java.io.Reader,java.util.List)|>>,
    <|java+method:///org/sonar/api/resources/InputFileUtils$DefaultInputFile/equals(java.lang.Object)|,<|java+class:///org/sonar/api/resources/InputFileUtils$DefaultInputFile|,|java+method:///org/sonar/api/resources/InputFileUtils$DefaultInputFile/equals(java.lang.Object)|>>,
    <|java+method:///org/sonar/duplications/internal/pmd/TokenizerBridge/addNewTokensLine(org.sonar.api.internal.google.common.collect.ImmutableList$Builder,int,int,int,java.lang.StringBuilder)|,<|java+class:///org/sonar/duplications/internal/pmd/TokenizerBridge|,|java+method:///org/sonar/duplications/internal/pmd/TokenizerBridge/addNewTokensLine(org.sonar.api.internal.google.common.collect.ImmutableList$Builder,int,int,int,java.lang.StringBuilder)|>>,
    <|java+method:///org/sonar/api/resources/JavaFile/getLanguage()|,<|java+class:///org/sonar/api/resources/JavaFile|,|java+method:///org/sonar/api/resources/JavaFile/getLanguage()|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/setType(org.sonar.api.batch.fs.InputFile$Type)|,<|java+class:///org/sonar/api/batch/fs/internal/DefaultInputFile|,|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/setType(org.sonar.api.batch.fs.InputFile$Type)|>>,
    <|java+method:///org/sonar/api/batch/AbstractSourceImporter/isEnabled(org.sonar.api.resources.Project)|,<|java+class:///org/sonar/api/batch/AbstractSourceImporter|,|java+method:///org/sonar/api/batch/AbstractSourceImporter/isEnabled(org.sonar.api.resources.Project)|>>,
    <|java+method:///org/sonar/api/server/ws/RailsHandler/addJsonOnlyFormatParam(org.sonar.api.server.ws.WebService$NewAction)|,<|java+class:///org/sonar/api/server/ws/RailsHandler|,|java+method:///org/sonar/api/server/ws/RailsHandler/addJsonOnlyFormatParam(org.sonar.api.server.ws.WebService$NewAction)|>>,
    <|java+constructor:///org/sonar/colorizer/NotThreadSafeTokenizer/NotThreadSafeTokenizer()|,<|java+class:///org/sonar/colorizer/NotThreadSafeTokenizer|,|java+constructor:///org/sonar/colorizer/NotThreadSafeTokenizer/NotThreadSafeTokenizer()|>>,
    <|java+constructor:///org/sonar/colorizer/JavaAnnotationTokenizer/JavaAnnotationTokenizer(java.lang.String,java.lang.String)|,<|java+class:///org/sonar/colorizer/JavaAnnotationTokenizer|,|java+constructor:///org/sonar/colorizer/JavaAnnotationTokenizer/JavaAnnotationTokenizer(java.lang.String,java.lang.String)|>>,
    <|java+method:///org/sonar/colorizer/StringTokenizer/consume(org.sonar.channel.CodeReader,java.lang.Object)|,<|java+class:///org/sonar/colorizer/StringTokenizer|,|java+method:///org/sonar/colorizer/StringTokenizer/consume(org.sonar.channel.CodeReader,java.lang.Object)|>>,
    <|java+method:///org/sonar/graph/EdgeFactory/createEdge(java.lang.Object,java.lang.Object)|,<|java+interface:///org/sonar/graph/EdgeFactory|,|java+method:///org/sonar/graph/EdgeFactory/createEdge(java.lang.Object,java.lang.Object)|>>,
    <|java+method:///org/sonar/graph/MinimumFeedbackEdgeSetSolver/searchFeedbackEdges(int,int,java.util.Set)|,<|java+class:///org/sonar/graph/MinimumFeedbackEdgeSetSolver|,|java+method:///org/sonar/graph/MinimumFeedbackEdgeSetSolver/searchFeedbackEdges(int,int,java.util.Set)|>>,
    <|java+constructor:///org/sonar/colorizer/LiteralTokenizer/LiteralTokenizer()|,<|java+class:///org/sonar/colorizer/LiteralTokenizer|,|java+constructor:///org/sonar/colorizer/LiteralTokenizer/LiteralTokenizer()|>>,
    <|java+method:///org/sonar/api/resources/InputFile/getInputStream()|,<|java+interface:///org/sonar/api/resources/InputFile|,|java+method:///org/sonar/api/resources/InputFile/getInputStream()|>>,
    <|java+constructor:///org/sonar/colorizer/InlineDocTokenizer$1/InlineDocTokenizer$1()|,<|java+class:///org/sonar/colorizer/InlineDocTokenizer$1|,|java+constructor:///org/sonar/colorizer/InlineDocTokenizer$1/InlineDocTokenizer$1()|>>,
    <|java+method:///org/sonar/graph/DsmCell/isFeedbackEdge()|,<|java+class:///org/sonar/graph/DsmCell|,|java+method:///org/sonar/graph/DsmCell/isFeedbackEdge()|>>,
    <|java+constructor:///org/sonar/colorizer/JavaTokenizers/JavaTokenizers()|,<|java+class:///org/sonar/colorizer/JavaTokenizers|,|java+constructor:///org/sonar/colorizer/JavaTokenizers/JavaTokenizers()|>>,
    <|java+method:///org/sonar/api/batch/SonarIndex/addDependency(org.sonar.api.design.Dependency)|,<|java+class:///org/sonar/api/batch/SonarIndex|,|java+method:///org/sonar/api/batch/SonarIndex/addDependency(org.sonar.api.design.Dependency)|>>,
    <|java+method:///org/sonar/api/batch/SonarIndex/index(org.sonar.api.resources.Resource)|,<|java+class:///org/sonar/api/batch/SonarIndex|,|java+method:///org/sonar/api/batch/SonarIndex/index(org.sonar.api.resources.Resource)|>>,
    <|java+method:///org/sonar/colorizer/RegexpTokenizer/consume(org.sonar.channel.CodeReader,org.sonar.colorizer.HtmlCodeBuilder)|,<|java+class:///org/sonar/colorizer/RegexpTokenizer|,|java+method:///org/sonar/colorizer/RegexpTokenizer/consume(org.sonar.channel.CodeReader,org.sonar.colorizer.HtmlCodeBuilder)|>>,
    <|java+constructor:///org/sonar/colorizer/HtmlRenderer/HtmlRenderer()|,<|java+class:///org/sonar/colorizer/HtmlRenderer|,|java+constructor:///org/sonar/colorizer/HtmlRenderer/HtmlRenderer()|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$LineHashComputer/eof()|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata$LineHashComputer|,|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$LineHashComputer/eof()|>>,
    <|java+method:///org/sonar/graph/Dsm/initVertices(java.util.Collection)|,<|java+class:///org/sonar/graph/Dsm|,|java+method:///org/sonar/graph/Dsm/initVertices(java.util.Collection)|>>,
    <|java+constructor:///org/sonar/graph/DsmCell/DsmCell(org.sonar.graph.Edge,boolean)|,<|java+class:///org/sonar/graph/DsmCell|,|java+constructor:///org/sonar/graph/DsmCell/DsmCell(org.sonar.graph.Edge,boolean)|>>,
    <|java+constructor:///org/sonar/colorizer/CodeColorizer/CodeColorizer(org.sonar.colorizer.CodeColorizer$Format)|,<|java+class:///org/sonar/colorizer/CodeColorizer|,|java+constructor:///org/sonar/colorizer/CodeColorizer/CodeColorizer(org.sonar.colorizer.CodeColorizer$Format)|>>,
    <|java+constructor:///org/sonar/graph/StringEdge/StringEdge(java.lang.String,java.lang.String)|,<|java+class:///org/sonar/graph/StringEdge|,|java+constructor:///org/sonar/graph/StringEdge/StringEdge(java.lang.String,java.lang.String)|>>,
    <|java+method:///org/sonar/graph/DirectedGraph/checkEdgeFacory()|,<|java+class:///org/sonar/graph/DirectedGraph|,|java+method:///org/sonar/graph/DirectedGraph/checkEdgeFacory()|>>,
    <|java+method:///org/sonar/colorizer/HtmlOptions/getTableId()|,<|java+class:///org/sonar/colorizer/HtmlOptions|,|java+method:///org/sonar/colorizer/HtmlOptions/getTableId()|>>,
    <|java+method:///org/sonar/api/resources/Qualifiers/isParagraph(org.sonar.api.resources.Resource)|,<|java+class:///org/sonar/api/resources/Qualifiers|,|java+method:///org/sonar/api/resources/Qualifiers/isParagraph(org.sonar.api.resources.Resource)|>>,
    <|java+method:///org/sonar/api/scan/filesystem/ModuleFileSystem/testDirs()|,<|java+interface:///org/sonar/api/scan/filesystem/ModuleFileSystem|,|java+method:///org/sonar/api/scan/filesystem/ModuleFileSystem/testDirs()|>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$1/getDate()|,<|java+class:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$1|,|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$1/getDate()|>>,
    <|java+method:///org/sonar/colorizer/MultilinesDocTokenizer/isCommentStartedOnPreviousLine(org.sonar.colorizer.HtmlCodeBuilder)|,<|java+class:///org/sonar/colorizer/MultilinesDocTokenizer|,|java+method:///org/sonar/colorizer/MultilinesDocTokenizer/isCommentStartedOnPreviousLine(org.sonar.colorizer.HtmlCodeBuilder)|>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileExclusions/sanitize(java.lang.String%5B%5D)|,<|java+class:///org/sonar/api/scan/filesystem/FileExclusions|,|java+method:///org/sonar/api/scan/filesystem/FileExclusions/sanitize(java.lang.String%5B%5D)|>>,
    <|java+method:///org/sonar/graph/FeedbackEdge/compareTo(org.sonar.graph.FeedbackEdge)|,<|java+class:///org/sonar/graph/FeedbackEdge|,|java+method:///org/sonar/graph/FeedbackEdge/compareTo(org.sonar.graph.FeedbackEdge)|>>,
    <|java+method:///org/sonar/api/checks/CheckFactory/getRepositoryKey()|,<|java+class:///org/sonar/api/checks/CheckFactory|,|java+method:///org/sonar/api/checks/CheckFactory/getRepositoryKey()|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/AbstractFilePredicate$1/apply(org.sonar.api.batch.fs.InputFile)|,<|java+class:///org/sonar/api/batch/fs/internal/AbstractFilePredicate$1|,|java+method:///org/sonar/api/batch/fs/internal/AbstractFilePredicate$1/apply(org.sonar.api.batch.fs.InputFile)|>>,
    <|java+method:///org/sonar/api/resources/InputFileUtils/create(java.io.File,java.util.Collection)|,<|java+class:///org/sonar/api/resources/InputFileUtils|,|java+method:///org/sonar/api/resources/InputFileUtils/create(java.io.File,java.util.Collection)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/PathPattern/match(org.sonar.api.batch.fs.InputFile,boolean)|,<|java+class:///org/sonar/api/batch/fs/internal/PathPattern|,|java+method:///org/sonar/api/batch/fs/internal/PathPattern/match(org.sonar.api.batch.fs.InputFile,boolean)|>>,
    <|java+constructor:///org/sonar/api/scan/filesystem/FileQuery/FileQuery()|,<|java+class:///org/sonar/api/scan/filesystem/FileQuery|,|java+constructor:///org/sonar/api/scan/filesystem/FileQuery/FileQuery()|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/DefaultFileSystem$Cache/inputDir(java.lang.String)|,<|java+class:///org/sonar/api/batch/fs/internal/DefaultFileSystem$Cache|,|java+method:///org/sonar/api/batch/fs/internal/DefaultFileSystem$Cache/inputDir(java.lang.String)|>>,
    <|java+constructor:///org/sonar/graph/Dsm/Dsm(org.sonar.graph.DirectedGraphAccessor,java.util.Set)|,<|java+class:///org/sonar/graph/Dsm|,|java+constructor:///org/sonar/graph/Dsm/Dsm(org.sonar.graph.DirectedGraphAccessor,java.util.Set)|>>,
    <|java+method:///org/sonar/api/resources/Project/setAnalysisDate(java.util.Date)|,<|java+class:///org/sonar/api/resources/Project|,|java+method:///org/sonar/api/resources/Project/setAnalysisDate(java.util.Date)|>>,
    <|java+method:///org/sonar/colorizer/GroovyTokenizers/forHtml()|,<|java+class:///org/sonar/colorizer/GroovyTokenizers|,|java+method:///org/sonar/colorizer/GroovyTokenizers/forHtml()|>>,
    <|java+method:///org/sonar/graph/FeedbackCycle/iterator()|,<|java+class:///org/sonar/graph/FeedbackCycle|,|java+method:///org/sonar/graph/FeedbackCycle/iterator()|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$LineCounter/handleAll(char)|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata$LineCounter|,|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$LineCounter/handleAll(char)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$FileHashComputer/newLine()|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata$FileHashComputer|,|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$FileHashComputer/newLine()|>>,
    <|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/getSourceDirs()|,<|java+class:///org/sonar/api/batch/bootstrap/ProjectDefinition|,|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/getSourceDirs()|>>,
    <|java+method:///org/sonar/graph/MinimumFeedbackEdgeSetSolver/getEdges()|,<|java+class:///org/sonar/graph/MinimumFeedbackEdgeSetSolver|,|java+method:///org/sonar/graph/MinimumFeedbackEdgeSetSolver/getEdges()|>>,
    <|java+method:///org/sonar/graph/FeedbackCycle/buildFeedbackCycles(java.util.Set)|,<|java+class:///org/sonar/graph/FeedbackCycle|,|java+method:///org/sonar/graph/FeedbackCycle/buildFeedbackCycles(java.util.Set)|>>,
    <|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/getTestFiles()|,<|java+class:///org/sonar/api/batch/bootstrap/ProjectDefinition|,|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/getTestFiles()|>>,
    <|java+constructor:///org/sonar/api/resources/ResourceTypes$1/ResourceTypes$1()|,<|java+class:///org/sonar/api/resources/ResourceTypes$1|,|java+constructor:///org/sonar/api/resources/ResourceTypes$1/ResourceTypes$1()|>>,
    <|java+method:///org/sonar/api/measures/Measure/isFromCore()|,<|java+class:///org/sonar/api/measures/Measure|,|java+method:///org/sonar/api/measures/Measure/isFromCore()|>>,
    <|java+method:///org/sonar/api/resources/Project$1/getFileSuffixes()|,<|java+class:///org/sonar/api/resources/Project$1|,|java+method:///org/sonar/api/resources/Project$1/getFileSuffixes()|>>,
    <|java+method:///org/sonar/colorizer/HtmlCodeBuilder/append(char)|,<|java+class:///org/sonar/colorizer/HtmlCodeBuilder|,|java+method:///org/sonar/colorizer/HtmlCodeBuilder/append(char)|>>,
    <|java+method:///org/sonar/api/resources/JavaPackage/getQualifier()|,<|java+class:///org/sonar/api/resources/JavaPackage|,|java+method:///org/sonar/api/resources/JavaPackage/getQualifier()|>>,
    <|java+method:///org/sonar/api/resources/Method/hashCode()|,<|java+class:///org/sonar/api/resources/Method|,|java+method:///org/sonar/api/resources/Method/hashCode()|>>,
    <|java+constructor:///org/sonar/api/batch/fs/internal/FileMetadata$LineHashComputer/FileMetadata$LineHashComputer(org.sonar.api.batch.fs.internal.FileMetadata$LineHashConsumer,java.io.File)|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata$LineHashComputer|,|java+constructor:///org/sonar/api/batch/fs/internal/FileMetadata$LineHashComputer/FileMetadata$LineHashComputer(org.sonar.api.batch.fs.internal.FileMetadata$LineHashConsumer,java.io.File)|>>,
    <|java+method:///org/sonar/graph/IncrementalCyclesAndFESSolver/getCycles()|,<|java+class:///org/sonar/graph/IncrementalCyclesAndFESSolver|,|java+method:///org/sonar/graph/IncrementalCyclesAndFESSolver/getCycles()|>>,
    <|java+constructor:///org/sonar/api/config/Settings/Settings()|,<|java+class:///org/sonar/api/config/Settings|,|java+constructor:///org/sonar/api/config/Settings/Settings()|>>,
    <|java+method:///org/sonar/colorizer/KeywordsTokenizer/isKeyword(java.lang.String)|,<|java+class:///org/sonar/colorizer/KeywordsTokenizer|,|java+method:///org/sonar/colorizer/KeywordsTokenizer/isKeyword(java.lang.String)|>>,
    <|java+method:///org/sonar/graph/Dsm/cell(int,int)|,<|java+class:///org/sonar/graph/Dsm|,|java+method:///org/sonar/graph/Dsm/cell(int,int)|>>,
    <|java+method:///org/sonar/colorizer/HtmlDecorator/consume(org.sonar.channel.CodeReader,org.sonar.colorizer.HtmlCodeBuilder)|,<|java+class:///org/sonar/colorizer/HtmlDecorator|,|java+method:///org/sonar/colorizer/HtmlDecorator/consume(org.sonar.channel.CodeReader,org.sonar.colorizer.HtmlCodeBuilder)|>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$1/getProject()|,<|java+class:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$1|,|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$1/getProject()|>>,
    <|java+method:///org/sonar/duplications/detector/suffixtree/SuffixTreeCloneDetectionAlgorithm$1/compare(java.lang.Object,java.lang.Object)|,<|java+class:///org/sonar/duplications/detector/suffixtree/SuffixTreeCloneDetectionAlgorithm$1|,|java+method:///org/sonar/duplications/detector/suffixtree/SuffixTreeCloneDetectionAlgorithm$1/compare(java.lang.Object,java.lang.Object)|>>,
    <|java+method:///org/sonar/api/batch/SonarIndex/isExcluded(org.sonar.api.resources.Resource)|,<|java+class:///org/sonar/api/batch/SonarIndex|,|java+method:///org/sonar/api/batch/SonarIndex/isExcluded(org.sonar.api.resources.Resource)|>>,
    <|java+method:///org/sonar/api/resources/Project/setBranch(java.lang.String)|,<|java+class:///org/sonar/api/resources/Project|,|java+method:///org/sonar/api/resources/Project/setBranch(java.lang.String)|>>,
    <|java+method:///org/sonar/api/resources/File/fromIOFile(java.io.File,java.util.List)|,<|java+class:///org/sonar/api/resources/File|,|java+method:///org/sonar/api/resources/File/fromIOFile(java.io.File,java.util.List)|>>,
    <|java+method:///org/sonar/colorizer/LiteralTokenizer/consume(org.sonar.channel.CodeReader,org.sonar.colorizer.HtmlCodeBuilder)|,<|java+class:///org/sonar/colorizer/LiteralTokenizer|,|java+method:///org/sonar/colorizer/LiteralTokenizer/consume(org.sonar.channel.CodeReader,org.sonar.colorizer.HtmlCodeBuilder)|>>,
    <|java+method:///org/sonar/api/resources/ResourceTypeTree$1/apply(java.lang.Object)|,<|java+class:///org/sonar/api/resources/ResourceTypeTree$1|,|java+method:///org/sonar/api/resources/ResourceTypeTree$1/apply(java.lang.Object)|>>,
    <|java+method:///org/sonar/api/resources/InputFile/getFile()|,<|java+interface:///org/sonar/api/resources/InputFile|,|java+method:///org/sonar/api/resources/InputFile/getFile()|>>,
    <|java+method:///org/sonar/graph/CycleDetector/searchCycles(java.lang.Object,java.util.List,java.util.Set)|,<|java+class:///org/sonar/graph/CycleDetector|,|java+method:///org/sonar/graph/CycleDetector/searchCycles(java.lang.Object,java.util.List,java.util.Set)|>>,
    <|java+constructor:///org/sonar/colorizer/MultilinesDocTokenizer$MultilineEndTokenMatcher/MultilinesDocTokenizer$MultilineEndTokenMatcher(org.sonar.colorizer.MultilinesDocTokenizer,org.sonar.channel.CodeReader,org.sonar.colorizer.HtmlCodeBuilder)|,<|java+class:///org/sonar/colorizer/MultilinesDocTokenizer$MultilineEndTokenMatcher|,|java+constructor:///org/sonar/colorizer/MultilinesDocTokenizer$MultilineEndTokenMatcher/MultilinesDocTokenizer$MultilineEndTokenMatcher(org.sonar.colorizer.MultilinesDocTokenizer,org.sonar.channel.CodeReader,org.sonar.colorizer.HtmlCodeBuilder)|>>,
    <|java+method:///org/sonar/api/utils/log/LogInterceptor/log(org.sonar.api.utils.log.LoggerLevel,java.lang.String,java.lang.Object)|,<|java+class:///org/sonar/api/utils/log/LogInterceptor|,|java+method:///org/sonar/api/utils/log/LogInterceptor/log(org.sonar.api.utils.log.LoggerLevel,java.lang.String,java.lang.Object)|>>,
    <|java+method:///org/sonar/api/server/debt/DebtModel/characteristicByKey(java.lang.String)|,<|java+interface:///org/sonar/api/server/debt/DebtModel|,|java+method:///org/sonar/api/server/debt/DebtModel/characteristicByKey(java.lang.String)|>>,
    <|java+method:///org/sonar/graph/DsmManualSorter/sort(org.sonar.graph.Dsm,java.util.List)|,<|java+class:///org/sonar/graph/DsmManualSorter|,|java+method:///org/sonar/graph/DsmManualSorter/sort(org.sonar.graph.Dsm,java.util.List)|>>,
    <|java+constructor:///org/sonar/api/config/Cipher/Cipher()|,<|java+class:///org/sonar/api/config/Cipher|,|java+constructor:///org/sonar/api/config/Cipher/Cipher()|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/initMetadata(java.lang.String)|,<|java+class:///org/sonar/api/batch/fs/internal/DefaultInputFile|,|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/initMetadata(java.lang.String)|>>,
    <|java+method:///org/sonar/api/rules/ActiveRule$1/apply(org.sonar.api.rules.ActiveRuleParam)|,<|java+class:///org/sonar/api/rules/ActiveRule$1|,|java+method:///org/sonar/api/rules/ActiveRule$1/apply(org.sonar.api.rules.ActiveRuleParam)|>>,
    <|java+method:///org/sonar/duplications/detector/suffixtree/SuffixTreeCloneDetectionAlgorithm$1/compare(org.sonar.duplications.block.Block,org.sonar.duplications.block.Block)|,<|java+class:///org/sonar/duplications/detector/suffixtree/SuffixTreeCloneDetectionAlgorithm$1|,|java+method:///org/sonar/duplications/detector/suffixtree/SuffixTreeCloneDetectionAlgorithm$1/compare(org.sonar.duplications.block.Block,org.sonar.duplications.block.Block)|>>,
    <|java+method:///org/sonar/colorizer/HtmlDecorator/getTagAfter()|,<|java+class:///org/sonar/colorizer/HtmlDecorator|,|java+method:///org/sonar/colorizer/HtmlDecorator/getTagAfter()|>>,
    <|java+method:///org/sonar/colorizer/MultilinesDocTokenizer/access$300(org.sonar.colorizer.MultilinesDocTokenizer,org.sonar.colorizer.HtmlCodeBuilder,java.lang.Boolean)|,<|java+class:///org/sonar/colorizer/MultilinesDocTokenizer|,|java+method:///org/sonar/colorizer/MultilinesDocTokenizer/access$300(org.sonar.colorizer.MultilinesDocTokenizer,org.sonar.colorizer.HtmlCodeBuilder,java.lang.Boolean)|>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$QualityGateBuilder/access$1300(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$QualityGateBuilder)|,<|java+class:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$QualityGateBuilder|,|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$QualityGateBuilder/access$1300(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$QualityGateBuilder)|>>,
    <|java+method:///org/sonar/graph/Dsm/permuteCells(int,int,int,int)|,<|java+class:///org/sonar/graph/Dsm|,|java+method:///org/sonar/graph/Dsm/permuteCells(int,int,int,int)|>>,
    <|java+method:///org/sonar/api/resources/Project/getAnalysisDate()|,<|java+class:///org/sonar/api/resources/Project|,|java+method:///org/sonar/api/resources/Project/getAnalysisDate()|>>,
    <|java+method:///org/sonar/api/resources/JavaPackage/unsupported()|,<|java+class:///org/sonar/api/resources/JavaPackage|,|java+method:///org/sonar/api/resources/JavaPackage/unsupported()|>>,
    <|java+method:///org/sonar/colorizer/HtmlDecorator/getTagBeginOfFile()|,<|java+class:///org/sonar/colorizer/HtmlDecorator|,|java+method:///org/sonar/colorizer/HtmlDecorator/getTagBeginOfFile()|>>,
    <|java+method:///org/sonar/api/batch/SonarIndex/getChildren(org.sonar.api.resources.Resource)|,<|java+class:///org/sonar/api/batch/SonarIndex|,|java+method:///org/sonar/api/batch/SonarIndex/getChildren(org.sonar.api.resources.Resource)|>>,
    <|java+method:///org/sonar/graph/DsmScanner/readRow(int)|,<|java+class:///org/sonar/graph/DsmScanner|,|java+method:///org/sonar/graph/DsmScanner/readRow(int)|>>,
    <|java+method:///org/sonar/api/resources/Method/getLanguage()|,<|java+class:///org/sonar/api/resources/Method|,|java+method:///org/sonar/api/resources/Method/getLanguage()|>>,
    <|java+method:///org/sonar/graph/Dsm/initCells(java.util.Set)|,<|java+class:///org/sonar/graph/Dsm|,|java+method:///org/sonar/graph/Dsm/initCells(java.util.Set)|>>,
    <|java+constructor:///org/sonar/api/batch/fs/internal/FileMetadata$Metadata/FileMetadata$Metadata(int,int,java.lang.String,java.util.List,int,org.sonar.api.batch.fs.internal.FileMetadata$1)|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata$Metadata|,|java+constructor:///org/sonar/api/batch/fs/internal/FileMetadata$Metadata/FileMetadata$Metadata(int,int,java.lang.String,java.util.List,int,org.sonar.api.batch.fs.internal.FileMetadata$1)|>>,
    <|java+method:///org/sonar/graph/DsmScanner/scan()|,<|java+class:///org/sonar/graph/DsmScanner|,|java+method:///org/sonar/graph/DsmScanner/scan()|>>,
    <|java+method:///org/sonar/api/batch/sensor/internal/DefaultSensorDescriptor/properties()|,<|java+class:///org/sonar/api/batch/sensor/internal/DefaultSensorDescriptor|,|java+method:///org/sonar/api/batch/sensor/internal/DefaultSensorDescriptor/properties()|>>,
    <|java+constructor:///org/sonar/colorizer/HtmlOptions/HtmlOptions(boolean,java.lang.String,boolean)|,<|java+class:///org/sonar/colorizer/HtmlOptions|,|java+constructor:///org/sonar/colorizer/HtmlOptions/HtmlOptions(boolean,java.lang.String,boolean)|>>,
    <|java+method:///org/sonar/graph/FeedbackCycle/getCycle()|,<|java+class:///org/sonar/graph/FeedbackCycle|,|java+method:///org/sonar/graph/FeedbackCycle/getCycle()|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/DefaultFileSystem$1/apply(java.lang.Object)|,<|java+class:///org/sonar/api/batch/fs/internal/DefaultFileSystem$1|,|java+method:///org/sonar/api/batch/fs/internal/DefaultFileSystem$1/apply(java.lang.Object)|>>,
    <|java+method:///org/sonar/colorizer/JavaConstantTokenizer/consume(org.sonar.channel.CodeReader,org.sonar.colorizer.HtmlCodeBuilder)|,<|java+class:///org/sonar/colorizer/JavaConstantTokenizer|,|java+method:///org/sonar/colorizer/JavaConstantTokenizer/consume(org.sonar.channel.CodeReader,org.sonar.colorizer.HtmlCodeBuilder)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/DefaultFileSystem/addLanguages(java.lang.String,java.lang.String%5B%5D)|,<|java+class:///org/sonar/api/batch/fs/internal/DefaultFileSystem|,|java+method:///org/sonar/api/batch/fs/internal/DefaultFileSystem/addLanguages(java.lang.String,java.lang.String%5B%5D)|>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileSystemFilter$Context/relativePath()|,<|java+interface:///org/sonar/api/scan/filesystem/FileSystemFilter$Context|,|java+method:///org/sonar/api/scan/filesystem/FileSystemFilter$Context/relativePath()|>>,
    <|java+method:///org/sonar/api/web/Filter/getPageSize()|,<|java+class:///org/sonar/api/web/Filter|,|java+method:///org/sonar/api/web/Filter/getPageSize()|>>,
    <|java+constructor:///org/sonar/api/resources/JavaFile/JavaFile(java.lang.String,java.lang.String,boolean)|,<|java+class:///org/sonar/api/resources/JavaFile|,|java+constructor:///org/sonar/api/resources/JavaFile/JavaFile(java.lang.String,java.lang.String,boolean)|>>,
    <|java+method:///org/sonar/graph/DsmManualSorter/sort()|,<|java+class:///org/sonar/graph/DsmManualSorter|,|java+method:///org/sonar/graph/DsmManualSorter/sort()|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/DefaultFileSystem/setWorkDir(java.io.File)|,<|java+class:///org/sonar/api/batch/fs/internal/DefaultFileSystem|,|java+method:///org/sonar/api/batch/fs/internal/DefaultFileSystem/setWorkDir(java.io.File)|>>,
    <|java+method:///org/sonar/colorizer/LiteralTokenizer$EndCommentMatcher/match(int)|,<|java+class:///org/sonar/colorizer/LiteralTokenizer$EndCommentMatcher|,|java+method:///org/sonar/colorizer/LiteralTokenizer$EndCommentMatcher/match(int)|>>,
    <|java+initializer:///org/sonar/api/web/FilterColumn/FilterColumn$initializer|,<|java+class:///org/sonar/api/web/FilterColumn|,|java+initializer:///org/sonar/api/web/FilterColumn/FilterColumn$initializer|>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileSystemFilter$Context/canonicalPath()|,<|java+interface:///org/sonar/api/scan/filesystem/FileSystemFilter$Context|,|java+method:///org/sonar/api/scan/filesystem/FileSystemFilter$Context/canonicalPath()|>>,
    <|java+method:///org/sonar/api/profiles/RulesProfile$MatchRule/apply(java.lang.Object)|,<|java+class:///org/sonar/api/profiles/RulesProfile$MatchRule|,|java+method:///org/sonar/api/profiles/RulesProfile$MatchRule/apply(java.lang.Object)|>>,
    <|java+constructor:///org/sonar/graph/Dsm/Dsm(org.sonar.graph.DirectedGraphAccessor,java.util.Collection,java.util.Set)|,<|java+class:///org/sonar/graph/Dsm|,|java+constructor:///org/sonar/graph/Dsm/Dsm(org.sonar.graph.DirectedGraphAccessor,java.util.Collection,java.util.Set)|>>,
    <|java+constructor:///org/sonar/api/resources/File/File(org.sonar.api.resources.Language,java.lang.String)|,<|java+class:///org/sonar/api/resources/File|,|java+constructor:///org/sonar/api/resources/File/File(org.sonar.api.resources.Language,java.lang.String)|>>,
    <|java+method:///org/sonar/api/web/CodeColorizerFormat/toString()|,<|java+class:///org/sonar/api/web/CodeColorizerFormat|,|java+method:///org/sonar/api/web/CodeColorizerFormat/toString()|>>,
    <|java+constructor:///org/sonar/api/batch/SquidUtils/SquidUtils()|,<|java+class:///org/sonar/api/batch/SquidUtils|,|java+constructor:///org/sonar/api/batch/SquidUtils/SquidUtils()|>>,
    <|java+method:///org/sonar/graph/DirectedGraphAccessor/getVertices()|,<|java+interface:///org/sonar/graph/DirectedGraphAccessor|,|java+method:///org/sonar/graph/DirectedGraphAccessor/getVertices()|>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileQuery/withInclusions(java.lang.String%5B%5D)|,<|java+class:///org/sonar/api/scan/filesystem/FileQuery|,|java+method:///org/sonar/api/scan/filesystem/FileQuery/withInclusions(java.lang.String%5B%5D)|>>,
    <|java+method:///org/sonar/graph/StringEdge/equals(java.lang.Object)|,<|java+class:///org/sonar/graph/StringEdge|,|java+method:///org/sonar/graph/StringEdge/equals(java.lang.Object)|>>,
    <|java+method:///org/sonar/api/web/CodeColorizerFormat/equals(java.lang.Object)|,<|java+class:///org/sonar/api/web/CodeColorizerFormat|,|java+method:///org/sonar/api/web/CodeColorizerFormat/equals(java.lang.Object)|>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$QualityGateBuilder/access$1400(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$QualityGateBuilder)|,<|java+class:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$QualityGateBuilder|,|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$QualityGateBuilder/access$1400(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$QualityGateBuilder)|>>,
    <|java+method:///org/sonar/api/server/rule/RulesDefinition$NewParam/access$2500(org.sonar.api.server.rule.RulesDefinition$NewParam)|,<|java+class:///org/sonar/api/server/rule/RulesDefinition$NewParam|,|java+method:///org/sonar/api/server/rule/RulesDefinition$NewParam/access$2500(org.sonar.api.server.rule.RulesDefinition$NewParam)|>>,
    <|java+method:///org/sonar/api/resources/ProjectUtils/toIoFiles(java.util.Collection)|,<|java+class:///org/sonar/api/resources/ProjectUtils|,|java+method:///org/sonar/api/resources/ProjectUtils/toIoFiles(java.util.Collection)|>>,
    <|java+method:///org/sonar/api/checks/CheckFactory/createCheck(org.sonar.api.rules.ActiveRule)|,<|java+class:///org/sonar/api/checks/CheckFactory|,|java+method:///org/sonar/api/checks/CheckFactory/createCheck(org.sonar.api.rules.ActiveRule)|>>,
    <|java+constructor:///org/sonar/graph/DsmTopologicalSorter/DsmTopologicalSorter(org.sonar.graph.Dsm)|,<|java+class:///org/sonar/graph/DsmTopologicalSorter|,|java+constructor:///org/sonar/graph/DsmTopologicalSorter/DsmTopologicalSorter(org.sonar.graph.Dsm)|>>,
    <|java+method:///org/sonar/graph/StringEdge/toString()|,<|java+class:///org/sonar/graph/StringEdge|,|java+method:///org/sonar/graph/StringEdge/toString()|>>,
    <|java+method:///org/sonar/graph/DsmPrinter/print(org.sonar.graph.Dsm)|,<|java+class:///org/sonar/graph/DsmPrinter|,|java+method:///org/sonar/graph/DsmPrinter/print(org.sonar.graph.Dsm)|>>,
    <|java+method:///org/sonar/api/security/ResourcePermissions/grantGroupRole(org.sonar.api.resources.Resource,java.lang.String,java.lang.String)|,<|java+interface:///org/sonar/api/security/ResourcePermissions|,|java+method:///org/sonar/api/security/ResourcePermissions/grantGroupRole(org.sonar.api.resources.Resource,java.lang.String,java.lang.String)|>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileQuery$1/apply(java.lang.String)|,<|java+class:///org/sonar/api/scan/filesystem/FileQuery$1|,|java+method:///org/sonar/api/scan/filesystem/FileQuery$1/apply(java.lang.String)|>>,
    <|java+method:///org/sonar/colorizer/HtmlCodeBuilder/setVariable(java.lang.Object,java.lang.Object)|,<|java+class:///org/sonar/colorizer/HtmlCodeBuilder|,|java+method:///org/sonar/colorizer/HtmlCodeBuilder/setVariable(java.lang.Object,java.lang.Object)|>>,
    <|java+method:///org/sonar/api/resources/JavaFile/fromRelativePath(java.lang.String,boolean)|,<|java+class:///org/sonar/api/resources/JavaFile|,|java+method:///org/sonar/api/resources/JavaFile/fromRelativePath(java.lang.String,boolean)|>>,
    <|java+constructor:///org/sonar/api/batch/SonarIndex/SonarIndex()|,<|java+class:///org/sonar/api/batch/SonarIndex|,|java+constructor:///org/sonar/api/batch/SonarIndex/SonarIndex()|>>,
    <|java+method:///org/sonar/graph/DsmScanner/scan(java.io.Reader)|,<|java+class:///org/sonar/graph/DsmScanner|,|java+method:///org/sonar/graph/DsmScanner/scan(java.io.Reader)|>>,
    <|java+method:///org/sonar/api/utils/DateUtils$ThreadSafeDateFormat/access$000(org.sonar.api.utils.DateUtils$ThreadSafeDateFormat)|,<|java+class:///org/sonar/api/utils/DateUtils$ThreadSafeDateFormat|,|java+method:///org/sonar/api/utils/DateUtils$ThreadSafeDateFormat/access$000(org.sonar.api.utils.DateUtils$ThreadSafeDateFormat)|>>,
    <|java+constructor:///org/sonar/api/resources/ResourceTypes$BooleanPropertyValuePredicate/ResourceTypes$BooleanPropertyValuePredicate(java.lang.String,boolean)|,<|java+class:///org/sonar/api/resources/ResourceTypes$BooleanPropertyValuePredicate|,|java+constructor:///org/sonar/api/resources/ResourceTypes$BooleanPropertyValuePredicate/ResourceTypes$BooleanPropertyValuePredicate(java.lang.String,boolean)|>>,
    <|java+method:///org/sonar/api/scan/filesystem/ModuleFileSystem/sourceCharset()|,<|java+interface:///org/sonar/api/scan/filesystem/ModuleFileSystem|,|java+method:///org/sonar/api/scan/filesystem/ModuleFileSystem/sourceCharset()|>>,
    <|java+method:///org/sonar/graph/StringEdge/getFrom()|,<|java+class:///org/sonar/graph/StringEdge|,|java+method:///org/sonar/graph/StringEdge/getFrom()|>>,
    <|java+method:///org/sonar/api/web/FilterColumn/create(java.lang.String,java.lang.String,java.lang.String,boolean)|,<|java+class:///org/sonar/api/web/FilterColumn|,|java+method:///org/sonar/api/web/FilterColumn/create(java.lang.String,java.lang.String,java.lang.String,boolean)|>>,
    <|java+constructor:///org/sonar/graph/DsmPrinter/DsmPrinter(java.io.Writer,org.sonar.graph.Dsm,boolean)|,<|java+class:///org/sonar/graph/DsmPrinter|,|java+constructor:///org/sonar/graph/DsmPrinter/DsmPrinter(java.io.Writer,org.sonar.graph.Dsm,boolean)|>>,
    <|java+initializer:///org/sonar/colorizer/InlineDocTokenizer/InlineDocTokenizer$initializer|,<|java+class:///org/sonar/colorizer/InlineDocTokenizer|,|java+initializer:///org/sonar/colorizer/InlineDocTokenizer/InlineDocTokenizer$initializer|>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$QualityGateBuilder/access$1500(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$QualityGateBuilder)|,<|java+class:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$QualityGateBuilder|,|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$QualityGateBuilder/access$1500(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$QualityGateBuilder)|>>,
    <|java+method:///org/sonar/graph/FeedbackEdge/compareTo(java.lang.Object)|,<|java+class:///org/sonar/graph/FeedbackEdge|,|java+method:///org/sonar/graph/FeedbackEdge/compareTo(java.lang.Object)|>>,
    <|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/addSourceDirs(java.lang.String%5B%5D)|,<|java+class:///org/sonar/api/batch/bootstrap/ProjectDefinition|,|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/addSourceDirs(java.lang.String%5B%5D)|>>,
    <|java+method:///org/sonar/api/batch/sensor/cpd/internal/DefaultCpdTokens/addNewTokensLine(org.sonar.api.internal.google.common.collect.ImmutableList$Builder,int,int,int,java.lang.StringBuilder)|,<|java+class:///org/sonar/api/batch/sensor/cpd/internal/DefaultCpdTokens|,|java+method:///org/sonar/api/batch/sensor/cpd/internal/DefaultCpdTokens/addNewTokensLine(org.sonar.api.internal.google.common.collect.ImmutableList$Builder,int,int,int,java.lang.StringBuilder)|>>,
    <|java+constructor:///org/sonar/graph/MinimumFeedbackEdgeSetSolver/MinimumFeedbackEdgeSetSolver(java.util.Set,int,int)|,<|java+class:///org/sonar/graph/MinimumFeedbackEdgeSetSolver|,|java+constructor:///org/sonar/graph/MinimumFeedbackEdgeSetSolver/MinimumFeedbackEdgeSetSolver(java.util.Set,int,int)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/setModuleBaseDir(java.nio.file.Path)|,<|java+class:///org/sonar/api/batch/fs/internal/DefaultInputFile|,|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/setModuleBaseDir(java.nio.file.Path)|>>,
    <|java+method:///org/sonar/colorizer/HtmlOptions/isGenerateHtmlHeader()|,<|java+class:///org/sonar/colorizer/HtmlOptions|,|java+method:///org/sonar/colorizer/HtmlOptions/isGenerateHtmlHeader()|>>,
    <|java+initializer:///org/sonar/colorizer/JavaTokenizers/JavaTokenizers$initializer|,<|java+class:///org/sonar/colorizer/JavaTokenizers|,|java+initializer:///org/sonar/colorizer/JavaTokenizers/JavaTokenizers$initializer|>>,
    <|java+method:///org/sonar/api/resources/JavaPackage/isDefault()|,<|java+class:///org/sonar/api/resources/JavaPackage|,|java+method:///org/sonar/api/resources/JavaPackage/isDefault()|>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileQuery/inclusions()|,<|java+class:///org/sonar/api/scan/filesystem/FileQuery|,|java+method:///org/sonar/api/scan/filesystem/FileQuery/inclusions()|>>,
    <|java+constructor:///org/sonar/duplications/detector/suffixtree/SuffixTreeCloneDetectionAlgorithm$1/SuffixTreeCloneDetectionAlgorithm$1()|,<|java+class:///org/sonar/duplications/detector/suffixtree/SuffixTreeCloneDetectionAlgorithm$1|,|java+constructor:///org/sonar/duplications/detector/suffixtree/SuffixTreeCloneDetectionAlgorithm$1/SuffixTreeCloneDetectionAlgorithm$1()|>>,
    <|java+initializer:///org/sonar/colorizer/GroovyKeywords/GroovyKeywords$initializer|,<|java+class:///org/sonar/colorizer/GroovyKeywords|,|java+initializer:///org/sonar/colorizer/GroovyKeywords/GroovyKeywords$initializer|>>,
    <|java+constructor:///org/sonar/api/batch/fs/internal/DefaultFileSystem/DefaultFileSystem(java.io.File,org.sonar.api.batch.fs.internal.DefaultFileSystem$Cache)|,<|java+class:///org/sonar/api/batch/fs/internal/DefaultFileSystem|,|java+constructor:///org/sonar/api/batch/fs/internal/DefaultFileSystem/DefaultFileSystem(java.io.File,org.sonar.api.batch.fs.internal.DefaultFileSystem$Cache)|>>,
    <|java+constructor:///org/sonar/api/resources/File/File(org.sonar.api.resources.Language,java.lang.String,java.lang.String)|,<|java+class:///org/sonar/api/resources/File|,|java+constructor:///org/sonar/api/resources/File/File(org.sonar.api.resources.Language,java.lang.String,java.lang.String)|>>,
    <|java+method:///org/sonar/graph/Dsm/permuteRows(int,int)|,<|java+class:///org/sonar/graph/Dsm|,|java+method:///org/sonar/graph/Dsm/permuteRows(int,int)|>>,
    <|java+method:///org/sonar/api/server/ws/WebService$SelectionMode$1/apply(java.lang.Object)|,<|java+class:///org/sonar/api/server/ws/WebService$SelectionMode$1|,|java+method:///org/sonar/api/server/ws/WebService$SelectionMode$1/apply(java.lang.Object)|>>,
    <|java+method:///org/sonar/api/scan/filesystem/ModuleFileSystem/workingDir()|,<|java+interface:///org/sonar/api/scan/filesystem/ModuleFileSystem|,|java+method:///org/sonar/api/scan/filesystem/ModuleFileSystem/workingDir()|>>,
    <|java+initializer:///org/sonar/colorizer/JavaKeywords/JavaKeywords$initializer|,<|java+class:///org/sonar/colorizer/JavaKeywords|,|java+initializer:///org/sonar/colorizer/JavaKeywords/JavaKeywords$initializer|>>,
    <|java+method:///org/sonar/colorizer/KeywordsTokenizer/clone()|,<|java+class:///org/sonar/colorizer/KeywordsTokenizer|,|java+method:///org/sonar/colorizer/KeywordsTokenizer/clone()|>>,
    <|java+method:///org/sonar/api/resources/Method/getScope()|,<|java+class:///org/sonar/api/resources/Method|,|java+method:///org/sonar/api/resources/Method/getScope()|>>,
    <|java+constructor:///org/sonar/graph/IncrementalCyclesAndFESSolver/IncrementalCyclesAndFESSolver(org.sonar.graph.DirectedGraphAccessor,java.util.Collection,int,int)|,<|java+class:///org/sonar/graph/IncrementalCyclesAndFESSolver|,|java+constructor:///org/sonar/graph/IncrementalCyclesAndFESSolver/IncrementalCyclesAndFESSolver(org.sonar.graph.DirectedGraphAccessor,java.util.Collection,int,int)|>>,
    <|java+method:///org/sonar/api/resources/File/fromIOFile(java.io.File,org.sonar.api.resources.Project)|,<|java+class:///org/sonar/api/resources/File|,|java+method:///org/sonar/api/resources/File/fromIOFile(java.io.File,org.sonar.api.resources.Project)|>>,
    <|java+constructor:///org/sonar/api/resources/Method/Method(java.lang.String,java.lang.String,org.sonar.api.resources.Language)|,<|java+class:///org/sonar/api/resources/Method|,|java+constructor:///org/sonar/api/resources/Method/Method(java.lang.String,java.lang.String,org.sonar.api.resources.Language)|>>,
    <|java+method:///org/sonar/colorizer/JavaKeywords/get()|,<|java+class:///org/sonar/colorizer/JavaKeywords|,|java+method:///org/sonar/colorizer/JavaKeywords/get()|>>,
    <|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/addBinaryDir(java.io.File)|,<|java+class:///org/sonar/api/batch/bootstrap/ProjectDefinition|,|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/addBinaryDir(java.io.File)|>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileQuery/attributes()|,<|java+class:///org/sonar/api/scan/filesystem/FileQuery|,|java+method:///org/sonar/api/scan/filesystem/FileQuery/attributes()|>>,
    <|java+constructor:///org/sonar/graph/CycleDetector/CycleDetector(org.sonar.graph.DirectedGraphAccessor,java.util.Set)|,<|java+class:///org/sonar/graph/CycleDetector|,|java+constructor:///org/sonar/graph/CycleDetector/CycleDetector(org.sonar.graph.DirectedGraphAccessor,java.util.Set)|>>,
    <|java+method:///org/sonar/graph/DsmPrinter/printRow(int)|,<|java+class:///org/sonar/graph/DsmPrinter|,|java+method:///org/sonar/graph/DsmPrinter/printRow(int)|>>,
    <|java+method:///org/sonar/colorizer/RegexpTokenizer/clone()|,<|java+class:///org/sonar/colorizer/RegexpTokenizer|,|java+method:///org/sonar/colorizer/RegexpTokenizer/clone()|>>,
    <|java+constructor:///org/sonar/colorizer/CppDocTokenizer/CppDocTokenizer()|,<|java+class:///org/sonar/colorizer/CppDocTokenizer|,|java+constructor:///org/sonar/colorizer/CppDocTokenizer/CppDocTokenizer()|>>,
    <|java+method:///org/sonar/api/measures/Metric$Level$1/apply(java.lang.Object)|,<|java+class:///org/sonar/api/measures/Metric$Level$1|,|java+method:///org/sonar/api/measures/Metric$Level$1/apply(java.lang.Object)|>>,
    <|java+method:///org/sonar/graph/FeedbackEdge/getWeight()|,<|java+class:///org/sonar/graph/FeedbackEdge|,|java+method:///org/sonar/graph/FeedbackEdge/getWeight()|>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileQuery/onMain()|,<|java+class:///org/sonar/api/scan/filesystem/FileQuery|,|java+method:///org/sonar/api/scan/filesystem/FileQuery/onMain()|>>,
    <|java+method:///org/sonar/api/batch/AbstractSourceImporter/createResource(java.io.File,java.util.List,boolean)|,<|java+class:///org/sonar/api/batch/AbstractSourceImporter|,|java+method:///org/sonar/api/batch/AbstractSourceImporter/createResource(java.io.File,java.util.List,boolean)|>>,
    <|java+method:///org/sonar/api/web/Filter/getColumns()|,<|java+class:///org/sonar/api/web/Filter|,|java+method:///org/sonar/api/web/Filter/getColumns()|>>,
    <|java+method:///org/sonar/graph/MinimumFeedbackEdgeSetSolver/run()|,<|java+class:///org/sonar/graph/MinimumFeedbackEdgeSetSolver|,|java+method:///org/sonar/graph/MinimumFeedbackEdgeSetSolver/run()|>>,
    <|java+method:///org/sonar/graph/CycleDetector/isAcyclicGraph()|,<|java+class:///org/sonar/graph/CycleDetector|,|java+method:///org/sonar/graph/CycleDetector/isAcyclicGraph()|>>,
    <|java+method:///org/sonar/graph/CycleDetector/detectCyclesWithUpperLimit(int)|,<|java+class:///org/sonar/graph/CycleDetector|,|java+method:///org/sonar/graph/CycleDetector/detectCyclesWithUpperLimit(int)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$CharHandler/eof()|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata$CharHandler|,|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$CharHandler/eof()|>>,
    <|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/addSourceFiles(java.lang.String%5B%5D)|,<|java+class:///org/sonar/api/batch/bootstrap/ProjectDefinition|,|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/addSourceFiles(java.lang.String%5B%5D)|>>,
    <|java+method:///org/sonar/api/issue/IssueHandler$Context/setAttribute(java.lang.String,java.lang.String)|,<|java+interface:///org/sonar/api/issue/IssueHandler$Context|,|java+method:///org/sonar/api/issue/IssueHandler$Context/setAttribute(java.lang.String,java.lang.String)|>>,
    <|java+method:///org/sonar/api/batch/SensorContext/index(org.sonar.api.resources.Resource)|,<|java+interface:///org/sonar/api/batch/SensorContext|,|java+method:///org/sonar/api/batch/SensorContext/index(org.sonar.api.resources.Resource)|>>,
    <|java+method:///org/sonar/api/resources/Project/isLatestAnalysis()|,<|java+class:///org/sonar/api/resources/Project|,|java+method:///org/sonar/api/resources/Project/isLatestAnalysis()|>>,
    <|java+method:///org/sonar/api/batch/sensor/highlighting/internal/DefaultHighlighting$1/compare(java.lang.Object,java.lang.Object)|,<|java+class:///org/sonar/api/batch/sensor/highlighting/internal/DefaultHighlighting$1|,|java+method:///org/sonar/api/batch/sensor/highlighting/internal/DefaultHighlighting$1/compare(java.lang.Object,java.lang.Object)|>>,
    <|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/setSourceDirs(java.lang.String%5B%5D)|,<|java+class:///org/sonar/api/batch/bootstrap/ProjectDefinition|,|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/setSourceDirs(java.lang.String%5B%5D)|>>,
    <|java+method:///org/sonar/api/ce/measure/test/TestMeasureComputerDefinition$MatchMetricKey/apply(java.lang.String)|,<|java+class:///org/sonar/api/ce/measure/test/TestMeasureComputerDefinition$MatchMetricKey|,|java+method:///org/sonar/api/ce/measure/test/TestMeasureComputerDefinition$MatchMetricKey/apply(java.lang.String)|>>,
    <|java+constructor:///org/sonar/api/resources/Directory/Directory(java.lang.String)|,<|java+class:///org/sonar/api/resources/Directory|,|java+constructor:///org/sonar/api/resources/Directory/Directory(java.lang.String)|>>,
    <|java+method:///org/sonar/graph/Dsm/getDimension()|,<|java+class:///org/sonar/graph/Dsm|,|java+method:///org/sonar/graph/Dsm/getDimension()|>>,
    <|java+constructor:///org/sonar/api/batch/fs/internal/FileMetadata$Metadata/FileMetadata$Metadata(int,int,java.lang.String,java.util.List,int)|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata$Metadata|,|java+constructor:///org/sonar/api/batch/fs/internal/FileMetadata$Metadata/FileMetadata$Metadata(int,int,java.lang.String,java.util.List,int)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/getFile()|,<|java+class:///org/sonar/api/batch/fs/internal/DefaultInputFile|,|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/getFile()|>>,
    <|java+method:///org/sonar/colorizer/InlineDocTokenizer/consume(org.sonar.channel.CodeReader,java.lang.Object)|,<|java+class:///org/sonar/colorizer/InlineDocTokenizer|,|java+method:///org/sonar/colorizer/InlineDocTokenizer/consume(org.sonar.channel.CodeReader,java.lang.Object)|>>,
    <|java+method:///org/sonar/graph/DsmTopologicalSorter/pushToRightVerticesWithoutOutgointEdges()|,<|java+class:///org/sonar/graph/DsmTopologicalSorter|,|java+method:///org/sonar/graph/DsmTopologicalSorter/pushToRightVerticesWithoutOutgointEdges()|>>,
    <|java+method:///org/sonar/api/resources/JavaFile/unsupported()|,<|java+class:///org/sonar/api/resources/JavaFile|,|java+method:///org/sonar/api/resources/JavaFile/unsupported()|>>,
    <|java+method:///org/sonar/colorizer/HtmlOptions/setGenerateHtmlHeader(boolean)|,<|java+class:///org/sonar/colorizer/HtmlOptions|,|java+method:///org/sonar/colorizer/HtmlOptions/setGenerateHtmlHeader(boolean)|>>,
    <|java+method:///org/sonar/api/resources/JavaFile/fromIOFile(java.io.File,org.sonar.api.resources.Project,boolean)|,<|java+class:///org/sonar/api/resources/JavaFile|,|java+method:///org/sonar/api/resources/JavaFile/fromIOFile(java.io.File,org.sonar.api.resources.Project,boolean)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$LineOffsetCounter/eof()|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata$LineOffsetCounter|,|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$LineOffsetCounter/eof()|>>,
    <|java+constructor:///org/sonar/api/checks/CheckFactory/CheckFactory(org.sonar.api.profiles.RulesProfile,java.lang.String)|,<|java+class:///org/sonar/api/checks/CheckFactory|,|java+constructor:///org/sonar/api/checks/CheckFactory/CheckFactory(org.sonar.api.profiles.RulesProfile,java.lang.String)|>>,
    <|java+method:///org/sonar/duplications/internal/pmd/TokenizerBridge/chunk(java.lang.String,java.io.File)|,<|java+class:///org/sonar/duplications/internal/pmd/TokenizerBridge|,|java+method:///org/sonar/duplications/internal/pmd/TokenizerBridge/chunk(java.lang.String,java.io.File)|>>,
    <|java+method:///org/sonar/api/resources/Project/createFromMavenIds(java.lang.String,java.lang.String,java.lang.String)|,<|java+class:///org/sonar/api/resources/Project|,|java+method:///org/sonar/api/resources/Project/createFromMavenIds(java.lang.String,java.lang.String,java.lang.String)|>>,
    <|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/addLibrary(java.lang.String)|,<|java+class:///org/sonar/api/batch/bootstrap/ProjectDefinition|,|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/addLibrary(java.lang.String)|>>,
    <|java+method:///org/sonar/graph/DirectedGraph/createStringDirectedGraph()|,<|java+class:///org/sonar/graph/DirectedGraph|,|java+method:///org/sonar/graph/DirectedGraph/createStringDirectedGraph()|>>,
    <|java+constructor:///org/sonar/graph/StringEdgeFactory/StringEdgeFactory()|,<|java+class:///org/sonar/graph/StringEdgeFactory|,|java+constructor:///org/sonar/graph/StringEdgeFactory/StringEdgeFactory()|>>,
    <|java+method:///org/sonar/api/batch/SonarIndex/addMeasure(org.sonar.api.resources.Resource,org.sonar.api.measures.Measure)|,<|java+class:///org/sonar/api/batch/SonarIndex|,|java+method:///org/sonar/api/batch/SonarIndex/addMeasure(org.sonar.api.resources.Resource,org.sonar.api.measures.Measure)|>>,
    <|java+method:///org/sonar/api/resources/File/relativePathFromSourceDir()|,<|java+class:///org/sonar/api/resources/File|,|java+method:///org/sonar/api/resources/File/relativePathFromSourceDir()|>>,
    <|java+method:///org/sonar/graph/IncrementalCyclesAndFESSolver/getSearchCyclesCalls()|,<|java+class:///org/sonar/graph/IncrementalCyclesAndFESSolver|,|java+method:///org/sonar/graph/IncrementalCyclesAndFESSolver/getSearchCyclesCalls()|>>,
    <|java+method:///org/sonar/colorizer/HtmlCodeBuilder/append(java.lang.CharSequence,int,int)|,<|java+class:///org/sonar/colorizer/HtmlCodeBuilder|,|java+method:///org/sonar/colorizer/HtmlCodeBuilder/append(java.lang.CharSequence,int,int)|>>,
    <|java+method:///org/sonar/api/config/Settings/addSystemProperties()|,<|java+class:///org/sonar/api/config/Settings|,|java+method:///org/sonar/api/config/Settings/addSystemProperties()|>>,
    <|java+method:///org/sonar/graph/IncrementalCyclesAndFESSolver/getFeedbackEdgeSet()|,<|java+class:///org/sonar/graph/IncrementalCyclesAndFESSolver|,|java+method:///org/sonar/graph/IncrementalCyclesAndFESSolver/getFeedbackEdgeSet()|>>,
    <|java+method:///org/sonar/graph/DsmTopologicalSorter/pushToLeftVerticesWithoutIncomingEdges()|,<|java+class:///org/sonar/graph/DsmTopologicalSorter|,|java+method:///org/sonar/graph/DsmTopologicalSorter/pushToLeftVerticesWithoutIncomingEdges()|>>,
    <|java+constructor:///org/sonar/api/utils/command/CommandExecutor$1/CommandExecutor$1(org.sonar.api.utils.command.CommandExecutor,java.lang.Process)|,<|java+class:///org/sonar/api/utils/command/CommandExecutor$1|,|java+constructor:///org/sonar/api/utils/command/CommandExecutor$1/CommandExecutor$1(org.sonar.api.utils.command.CommandExecutor,java.lang.Process)|>>,
    <|java+method:///org/sonar/api/resources/Java/getFileSuffixes()|,<|java+class:///org/sonar/api/resources/Java|,|java+method:///org/sonar/api/resources/Java/getFileSuffixes()|>>,
    <|java+method:///org/sonar/api/checks/AnnotationCheckFactory/configureFields(org.sonar.api.rules.ActiveRule,java.lang.Object)|,<|java+class:///org/sonar/api/checks/AnnotationCheckFactory|,|java+method:///org/sonar/api/checks/AnnotationCheckFactory/configureFields(org.sonar.api.rules.ActiveRule,java.lang.Object)|>>,
    <|java+method:///org/sonar/api/issue/IssueHandler$Context/setEffortToFix(java.lang.Double)|,<|java+interface:///org/sonar/api/issue/IssueHandler$Context|,|java+method:///org/sonar/api/issue/IssueHandler$Context/setEffortToFix(java.lang.Double)|>>,
    <|java+method:///org/sonar/graph/Dsm/getNumberOfIncomingEdges(int,int,int)|,<|java+class:///org/sonar/graph/Dsm|,|java+method:///org/sonar/graph/Dsm/getNumberOfIncomingEdges(int,int,int)|>>,
    <|java+method:///org/sonar/api/resources/InputFileUtils/create(java.io.File,java.io.File)|,<|java+class:///org/sonar/api/resources/InputFileUtils|,|java+method:///org/sonar/api/resources/InputFileUtils/create(java.io.File,java.io.File)|>>,
    <|java+method:///org/sonar/api/server/rule/RulesDefinition$NewParam/access$2800(org.sonar.api.server.rule.RulesDefinition$NewParam)|,<|java+class:///org/sonar/api/server/rule/RulesDefinition$NewParam|,|java+method:///org/sonar/api/server/rule/RulesDefinition$NewParam/access$2800(org.sonar.api.server.rule.RulesDefinition$NewParam)|>>,
    <|java+method:///org/sonar/api/server/debt/DebtCharacteristic/key()|,<|java+interface:///org/sonar/api/server/debt/DebtCharacteristic|,|java+method:///org/sonar/api/server/debt/DebtCharacteristic/key()|>>,
    <|java+method:///org/sonar/api/utils/DateUtils$ThreadSafeDateFormat/writeObject(java.io.ObjectOutputStream)|,<|java+class:///org/sonar/api/utils/DateUtils$ThreadSafeDateFormat|,|java+method:///org/sonar/api/utils/DateUtils$ThreadSafeDateFormat/writeObject(java.io.ObjectOutputStream)|>>,
    <|java+constructor:///org/sonar/colorizer/HtmlDecorator/HtmlDecorator(org.sonar.colorizer.HtmlOptions)|,<|java+class:///org/sonar/colorizer/HtmlDecorator|,|java+constructor:///org/sonar/colorizer/HtmlDecorator/HtmlDecorator(org.sonar.colorizer.HtmlOptions)|>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$ConditionBuilder/access$1700(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$ConditionBuilder)|,<|java+class:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$ConditionBuilder|,|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$ConditionBuilder/access$1700(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$ConditionBuilder)|>>,
    <|java+constructor:///org/sonar/graph/DirectedGraph/DirectedGraph(org.sonar.graph.EdgeFactory)|,<|java+class:///org/sonar/graph/DirectedGraph|,|java+constructor:///org/sonar/graph/DirectedGraph/DirectedGraph(org.sonar.graph.EdgeFactory)|>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileQuery/types()|,<|java+class:///org/sonar/api/scan/filesystem/FileQuery|,|java+method:///org/sonar/api/scan/filesystem/FileQuery/types()|>>,
    <|java+method:///org/sonar/graph/CycleDetector/detectCyclesWithMaxSearchDepth(int)|,<|java+class:///org/sonar/graph/CycleDetector|,|java+method:///org/sonar/graph/CycleDetector/detectCyclesWithMaxSearchDepth(int)|>>,
    <|java+method:///org/sonar/api/server/rule/RulesDefinition$NewParam/access$2900(org.sonar.api.server.rule.RulesDefinition$NewParam)|,<|java+class:///org/sonar/api/server/rule/RulesDefinition$NewParam|,|java+method:///org/sonar/api/server/rule/RulesDefinition$NewParam/access$2900(org.sonar.api.server.rule.RulesDefinition$NewParam)|>>,
    <|java+method:///org/sonar/graph/DsmPrinter/print(org.sonar.graph.Dsm,boolean)|,<|java+class:///org/sonar/graph/DsmPrinter|,|java+method:///org/sonar/graph/DsmPrinter/print(org.sonar.graph.Dsm,boolean)|>>,
    <|java+method:///org/sonar/api/resources/JavaFile/getScope()|,<|java+class:///org/sonar/api/resources/JavaFile|,|java+method:///org/sonar/api/resources/JavaFile/getScope()|>>,
    <|java+method:///org/sonar/api/batch/SonarIndex/getMeasures(org.sonar.api.resources.Resource,org.sonar.api.measures.MeasuresFilter)|,<|java+class:///org/sonar/api/batch/SonarIndex|,|java+method:///org/sonar/api/batch/SonarIndex/getMeasures(org.sonar.api.resources.Resource,org.sonar.api.measures.MeasuresFilter)|>>,
    <|java+method:///org/sonar/api/scan/event/ProjectScanHandler$ProjectScanEvent/isEnd()|,<|java+interface:///org/sonar/api/scan/event/ProjectScanHandler$ProjectScanEvent|,|java+method:///org/sonar/api/scan/event/ProjectScanHandler$ProjectScanEvent/isEnd()|>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$ConditionBuilder/access$1800(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$ConditionBuilder)|,<|java+class:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$ConditionBuilder|,|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$ConditionBuilder/access$1800(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$ConditionBuilder)|>>,
    <|java+method:///org/sonar/graph/DirectedGraphAccessor/getOutgoingEdges(java.lang.Object)|,<|java+interface:///org/sonar/graph/DirectedGraphAccessor|,|java+method:///org/sonar/graph/DirectedGraphAccessor/getOutgoingEdges(java.lang.Object)|>>,
    <|java+constructor:///org/sonar/colorizer/JavaAnnotationTokenizer$1/JavaAnnotationTokenizer$1()|,<|java+class:///org/sonar/colorizer/JavaAnnotationTokenizer$1|,|java+constructor:///org/sonar/colorizer/JavaAnnotationTokenizer$1/JavaAnnotationTokenizer$1()|>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileQuery/onSource()|,<|java+class:///org/sonar/api/scan/filesystem/FileQuery|,|java+method:///org/sonar/api/scan/filesystem/FileQuery/onSource()|>>,
    <|java+constructor:///org/sonar/graph/MinimumFeedbackEdgeSetSolver/MinimumFeedbackEdgeSetSolver(java.util.Set,int)|,<|java+class:///org/sonar/graph/MinimumFeedbackEdgeSetSolver|,|java+constructor:///org/sonar/graph/MinimumFeedbackEdgeSetSolver/MinimumFeedbackEdgeSetSolver(java.util.Set,int)|>>,
    <|java+constructor:///org/sonar/colorizer/HtmlOptions/HtmlOptions()|,<|java+class:///org/sonar/colorizer/HtmlOptions|,|java+constructor:///org/sonar/colorizer/HtmlOptions/HtmlOptions()|>>,
    <|java+method:///org/sonar/api/resources/Project/setAnalysisType(org.sonar.api.resources.Project$AnalysisType)|,<|java+class:///org/sonar/api/resources/Project|,|java+method:///org/sonar/api/resources/Project/setAnalysisType(org.sonar.api.resources.Project$AnalysisType)|>>,
    <|java+constructor:///org/sonar/colorizer/CDocTokenizer/CDocTokenizer(java.lang.String,java.lang.String)|,<|java+class:///org/sonar/colorizer/CDocTokenizer|,|java+constructor:///org/sonar/colorizer/CDocTokenizer/CDocTokenizer(java.lang.String,java.lang.String)|>>,
    <|java+method:///org/sonar/api/resources/InputFileUtils$DefaultInputFile/getInputStream()|,<|java+class:///org/sonar/api/resources/InputFileUtils$DefaultInputFile|,|java+method:///org/sonar/api/resources/InputFileUtils$DefaultInputFile/getInputStream()|>>,
    <|java+constructor:///org/sonar/colorizer/CppDocTokenizer/CppDocTokenizer(java.lang.String,java.lang.String)|,<|java+class:///org/sonar/colorizer/CppDocTokenizer|,|java+constructor:///org/sonar/colorizer/CppDocTokenizer/CppDocTokenizer(java.lang.String,java.lang.String)|>>,
    <|java+initializer:///org/sonar/api/resources/Project/Project$initializer|,<|java+class:///org/sonar/api/resources/Project|,|java+initializer:///org/sonar/api/resources/Project/Project$initializer|>>,
    <|java+method:///org/sonar/api/resources/JavaFile/fromIOFile(java.io.File,java.util.List,boolean)|,<|java+class:///org/sonar/api/resources/JavaFile|,|java+method:///org/sonar/api/resources/JavaFile/fromIOFile(java.io.File,java.util.List,boolean)|>>,
    <|java+constructor:///org/sonar/colorizer/HtmlCodeBuilder/HtmlCodeBuilder()|,<|java+class:///org/sonar/colorizer/HtmlCodeBuilder|,|java+constructor:///org/sonar/colorizer/HtmlCodeBuilder/HtmlCodeBuilder()|>>,
    <|java+method:///org/sonar/api/scan/filesystem/ModuleFileSystem/buildDir()|,<|java+interface:///org/sonar/api/scan/filesystem/ModuleFileSystem|,|java+method:///org/sonar/api/scan/filesystem/ModuleFileSystem/buildDir()|>>,
    <|java+method:///org/sonar/colorizer/HtmlCodeBuilder/getColorizedCode()|,<|java+class:///org/sonar/colorizer/HtmlCodeBuilder|,|java+method:///org/sonar/colorizer/HtmlCodeBuilder/getColorizedCode()|>>,
    <|java+method:///org/sonar/api/resources/ResourceTypes$BooleanPropertyValuePredicate/apply(org.sonar.api.resources.ResourceType)|,<|java+class:///org/sonar/api/resources/ResourceTypes$BooleanPropertyValuePredicate|,|java+method:///org/sonar/api/resources/ResourceTypes$BooleanPropertyValuePredicate/apply(org.sonar.api.resources.ResourceType)|>>,
    <|java+method:///org/sonar/api/utils/DateUtils$ThreadSafeDateFormat$1/get()|,<|java+class:///org/sonar/api/utils/DateUtils$ThreadSafeDateFormat$1|,|java+method:///org/sonar/api/utils/DateUtils$ThreadSafeDateFormat$1/get()|>>,
    <|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/isDirectory(java.lang.String)|,<|java+class:///org/sonar/api/batch/bootstrap/ProjectDefinition|,|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/isDirectory(java.lang.String)|>>,
    <|java+method:///org/sonar/api/batch/sensor/issue/internal/DefaultIssue$ToFlow/apply(java.lang.Object)|,<|java+class:///org/sonar/api/batch/sensor/issue/internal/DefaultIssue$ToFlow|,|java+method:///org/sonar/api/batch/sensor/issue/internal/DefaultIssue$ToFlow/apply(java.lang.Object)|>>,
    <|java+method:///org/sonar/graph/Cycle/hashCode()|,<|java+class:///org/sonar/graph/Cycle|,|java+method:///org/sonar/graph/Cycle/hashCode()|>>,
    <|java+constructor:///org/sonar/api/batch/sensor/issue/internal/DefaultIssue$ToFlow/DefaultIssue$ToFlow()|,<|java+class:///org/sonar/api/batch/sensor/issue/internal/DefaultIssue$ToFlow|,|java+constructor:///org/sonar/api/batch/sensor/issue/internal/DefaultIssue$ToFlow/DefaultIssue$ToFlow()|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/setLanguage(java.lang.String)|,<|java+class:///org/sonar/api/batch/fs/internal/DefaultInputFile|,|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/setLanguage(java.lang.String)|>>,
    <|java+constructor:///org/sonar/colorizer/HtmlRenderer/HtmlRenderer(org.sonar.colorizer.HtmlOptions)|,<|java+class:///org/sonar/colorizer/HtmlRenderer|,|java+constructor:///org/sonar/colorizer/HtmlRenderer/HtmlRenderer(org.sonar.colorizer.HtmlOptions)|>>,
    <|java+initializer:///org/sonar/colorizer/JavaConstantTokenizer/JavaConstantTokenizer$initializer|,<|java+class:///org/sonar/colorizer/JavaConstantTokenizer|,|java+initializer:///org/sonar/colorizer/JavaConstantTokenizer/JavaConstantTokenizer$initializer|>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileQuery/filters()|,<|java+class:///org/sonar/api/scan/filesystem/FileQuery|,|java+method:///org/sonar/api/scan/filesystem/FileQuery/filters()|>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileQuery/languages()|,<|java+class:///org/sonar/api/scan/filesystem/FileQuery|,|java+method:///org/sonar/api/scan/filesystem/FileQuery/languages()|>>,
    <|java+method:///org/sonar/api/resources/ResourceUtils/isPackage(org.sonar.api.resources.Resource)|,<|java+class:///org/sonar/api/resources/ResourceUtils|,|java+method:///org/sonar/api/resources/ResourceUtils/isPackage(org.sonar.api.resources.Resource)|>>,
    <|java+method:///org/sonar/api/config/Settings/addEnvironmentVariables()|,<|java+class:///org/sonar/api/config/Settings|,|java+method:///org/sonar/api/config/Settings/addEnvironmentVariables()|>>,
    <|java+method:///org/sonar/api/security/ResourcePermissions/grantDefaultRoles(org.sonar.api.resources.Resource)|,<|java+interface:///org/sonar/api/security/ResourcePermissions|,|java+method:///org/sonar/api/security/ResourcePermissions/grantDefaultRoles(org.sonar.api.resources.Resource)|>>,
    <|java+constructor:///org/sonar/api/batch/sensor/issue/internal/DefaultIssue$ToFlow$1/DefaultIssue$ToFlow$1(org.sonar.api.batch.sensor.issue.internal.DefaultIssue$ToFlow,java.util.List)|,<|java+class:///org/sonar/api/batch/sensor/issue/internal/DefaultIssue$ToFlow$1|,|java+constructor:///org/sonar/api/batch/sensor/issue/internal/DefaultIssue$ToFlow$1/DefaultIssue$ToFlow$1(org.sonar.api.batch.sensor.issue.internal.DefaultIssue$ToFlow,java.util.List)|>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$ConditionBuilder/access$1900(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$ConditionBuilder)|,<|java+class:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$ConditionBuilder|,|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$ConditionBuilder/access$1900(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$ConditionBuilder)|>>,
    <|java+constructor:///org/sonar/api/checks/AnnotationCheckFactory/AnnotationCheckFactory(org.sonar.api.profiles.RulesProfile,java.lang.String,java.util.Collection)|,<|java+class:///org/sonar/api/checks/AnnotationCheckFactory|,|java+constructor:///org/sonar/api/checks/AnnotationCheckFactory/AnnotationCheckFactory(org.sonar.api.profiles.RulesProfile,java.lang.String,java.util.Collection)|>>,
    <|java+method:///org/sonar/api/web/CodeColorizerFormat/getLanguageKey()|,<|java+class:///org/sonar/api/web/CodeColorizerFormat|,|java+method:///org/sonar/api/web/CodeColorizerFormat/getLanguageKey()|>>,
    <|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/addTestDirs(java.io.File%5B%5D)|,<|java+class:///org/sonar/api/batch/bootstrap/ProjectDefinition|,|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/addTestDirs(java.io.File%5B%5D)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$FileHashComputer/eof()|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata$FileHashComputer|,|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$FileHashComputer/eof()|>>,
    <|java+method:///org/sonar/api/resources/JavaFile/isUnitTest()|,<|java+class:///org/sonar/api/resources/JavaFile|,|java+method:///org/sonar/api/resources/JavaFile/isUnitTest()|>>,
    <|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/setTestDirs(java.io.File%5B%5D)|,<|java+class:///org/sonar/api/batch/bootstrap/ProjectDefinition|,|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/setTestDirs(java.io.File%5B%5D)|>>,
    <|java+constructor:///org/sonar/api/resources/File/File(java.lang.String)|,<|java+class:///org/sonar/api/resources/File|,|java+constructor:///org/sonar/api/resources/File/File(java.lang.String)|>>,
    <|java+method:///org/sonar/api/issue/IssueHandler$Context/assign(java.lang.String)|,<|java+interface:///org/sonar/api/issue/IssueHandler$Context|,|java+method:///org/sonar/api/issue/IssueHandler$Context/assign(java.lang.String)|>>,
    <|java+constructor:///org/sonar/colorizer/OnlySyntaxHtmlOptions/OnlySyntaxHtmlOptions()|,<|java+class:///org/sonar/colorizer/OnlySyntaxHtmlOptions|,|java+constructor:///org/sonar/colorizer/OnlySyntaxHtmlOptions/OnlySyntaxHtmlOptions()|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/initMetadata(org.sonar.api.batch.fs.internal.FileMetadata$Metadata)|,<|java+class:///org/sonar/api/batch/fs/internal/DefaultInputFile|,|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/initMetadata(org.sonar.api.batch.fs.internal.FileMetadata$Metadata)|>>,
    <|java+method:///org/sonar/colorizer/MultilinesDocTokenizer/access$200(org.sonar.colorizer.MultilinesDocTokenizer,org.sonar.colorizer.HtmlCodeBuilder)|,<|java+class:///org/sonar/colorizer/MultilinesDocTokenizer|,|java+method:///org/sonar/colorizer/MultilinesDocTokenizer/access$200(org.sonar.colorizer.MultilinesDocTokenizer,org.sonar.colorizer.HtmlCodeBuilder)|>>,
    <|java+method:///org/sonar/api/resources/Project/getLanguageKey()|,<|java+class:///org/sonar/api/resources/Project|,|java+method:///org/sonar/api/resources/Project/getLanguageKey()|>>,
    <|java+constructor:///org/sonar/api/resources/JavaFile/JavaFile(java.lang.String)|,<|java+class:///org/sonar/api/resources/JavaFile|,|java+constructor:///org/sonar/api/resources/JavaFile/JavaFile(java.lang.String)|>>,
    <|java+constructor:///org/sonar/colorizer/JavaConstantTokenizer/JavaConstantTokenizer(java.lang.String,java.lang.String)|,<|java+class:///org/sonar/colorizer/JavaConstantTokenizer|,|java+constructor:///org/sonar/colorizer/JavaConstantTokenizer/JavaConstantTokenizer(java.lang.String,java.lang.String)|>>,
    <|java+method:///org/sonar/api/resources/Qualifiers/isMethod(org.sonar.api.resources.Resource)|,<|java+class:///org/sonar/api/resources/Qualifiers|,|java+method:///org/sonar/api/resources/Qualifiers/isMethod(org.sonar.api.resources.Resource)|>>,
    <|java+method:///org/sonar/graph/Dsm/checkIndicesBoudaries(int%5B%5D)|,<|java+class:///org/sonar/graph/Dsm|,|java+method:///org/sonar/graph/Dsm/checkIndicesBoudaries(int%5B%5D)|>>,
    <|java+method:///org/sonar/api/resources/ResourceTypes/getAll(org.sonar.api.internal.google.common.base.Predicate)|,<|java+class:///org/sonar/api/resources/ResourceTypes|,|java+method:///org/sonar/api/resources/ResourceTypes/getAll(org.sonar.api.internal.google.common.base.Predicate)|>>,
    <|java+method:///org/sonar/api/scan/filesystem/ModuleFileSystem/sourceDirs()|,<|java+interface:///org/sonar/api/scan/filesystem/ModuleFileSystem|,|java+method:///org/sonar/api/scan/filesystem/ModuleFileSystem/sourceDirs()|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/DefaultFileSystem/add(org.sonar.api.batch.fs.internal.DefaultInputFile)|,<|java+class:///org/sonar/api/batch/fs/internal/DefaultFileSystem|,|java+method:///org/sonar/api/batch/fs/internal/DefaultFileSystem/add(org.sonar.api.batch.fs.internal.DefaultInputFile)|>>,
    <|java+method:///org/sonar/graph/FeedbackEdge/getOccurences()|,<|java+class:///org/sonar/graph/FeedbackEdge|,|java+method:///org/sonar/graph/FeedbackEdge/getOccurences()|>>,
    <|java+method:///org/sonar/colorizer/HtmlCodeBuilder/toString()|,<|java+class:///org/sonar/colorizer/HtmlCodeBuilder|,|java+method:///org/sonar/colorizer/HtmlCodeBuilder/toString()|>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileSystemFilter/accept(java.io.File,org.sonar.api.scan.filesystem.FileSystemFilter$Context)|,<|java+interface:///org/sonar/api/scan/filesystem/FileSystemFilter|,|java+method:///org/sonar/api/scan/filesystem/FileSystemFilter/accept(java.io.File,org.sonar.api.scan.filesystem.FileSystemFilter$Context)|>>,
    <|java+method:///org/sonar/api/batch/sensor/symbol/internal/DefaultSymbolTable$1/compare(java.lang.Object,java.lang.Object)|,<|java+class:///org/sonar/api/batch/sensor/symbol/internal/DefaultSymbolTable$1|,|java+method:///org/sonar/api/batch/sensor/symbol/internal/DefaultSymbolTable$1/compare(java.lang.Object,java.lang.Object)|>>,
    <|java+method:///org/sonar/api/user/RubyUserService/findByLogin(java.lang.String)|,<|java+interface:///org/sonar/api/user/RubyUserService|,|java+method:///org/sonar/api/user/RubyUserService/findByLogin(java.lang.String)|>>,
    <|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/access$1200(org.sonar.api.server.rule.RulesDefinition$NewRule)|,<|java+class:///org/sonar/api/server/rule/RulesDefinition$NewRule|,|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/access$1200(org.sonar.api.server.rule.RulesDefinition$NewRule)|>>,
    <|java+constructor:///org/sonar/api/resources/ResourceTypes$PropertyKeyPredicate/ResourceTypes$PropertyKeyPredicate(java.lang.String)|,<|java+class:///org/sonar/api/resources/ResourceTypes$PropertyKeyPredicate|,|java+constructor:///org/sonar/api/resources/ResourceTypes$PropertyKeyPredicate/ResourceTypes$PropertyKeyPredicate(java.lang.String)|>>,
    <|java+method:///org/sonar/colorizer/JavaAnnotationTokenizer$1/match(int)|,<|java+class:///org/sonar/colorizer/JavaAnnotationTokenizer$1|,|java+method:///org/sonar/colorizer/JavaAnnotationTokenizer$1/match(int)|>>,
    <|java+method:///org/sonar/api/batch/SquidUtils/convertJavaFileKeyFromSquidFormat(java.lang.String)|,<|java+class:///org/sonar/api/batch/SquidUtils|,|java+method:///org/sonar/api/batch/SquidUtils/convertJavaFileKeyFromSquidFormat(java.lang.String)|>>,
    <|java+method:///org/sonar/api/batch/SquidUtils/convertJavaPackageKeyFromSquidFormat(java.lang.String)|,<|java+class:///org/sonar/api/batch/SquidUtils|,|java+method:///org/sonar/api/batch/SquidUtils/convertJavaPackageKeyFromSquidFormat(java.lang.String)|>>,
    <|java+method:///org/sonar/api/batch/sensor/symbol/internal/DefaultSymbolTable$1/compare(org.sonar.api.batch.fs.TextRange,org.sonar.api.batch.fs.TextRange)|,<|java+class:///org/sonar/api/batch/sensor/symbol/internal/DefaultSymbolTable$1|,|java+method:///org/sonar/api/batch/sensor/symbol/internal/DefaultSymbolTable$1/compare(org.sonar.api.batch.fs.TextRange,org.sonar.api.batch.fs.TextRange)|>>,
    <|java+method:///org/sonar/graph/DirectedGraph/addVertices(java.util.Collection)|,<|java+class:///org/sonar/graph/DirectedGraph|,|java+method:///org/sonar/graph/DirectedGraph/addVertices(java.util.Collection)|>>,
    <|java+method:///org/sonar/api/config/PropertyDefinition/validateFloat(java.lang.String)|,<|java+class:///org/sonar/api/config/PropertyDefinition|,|java+method:///org/sonar/api/config/PropertyDefinition/validateFloat(java.lang.String)|>>,
    <|java+method:///org/sonar/graph/DsmScanner/extractWeight(java.lang.String)|,<|java+class:///org/sonar/graph/DsmScanner|,|java+method:///org/sonar/graph/DsmScanner/extractWeight(java.lang.String)|>>,
    <|java+method:///org/sonar/graph/IncrementalCyclesAndFESSolver/getIterations()|,<|java+class:///org/sonar/graph/IncrementalCyclesAndFESSolver|,|java+method:///org/sonar/graph/IncrementalCyclesAndFESSolver/getIterations()|>>,
    <|java+method:///org/sonar/api/resources/Qualifiers/isClass(org.sonar.api.resources.Resource)|,<|java+class:///org/sonar/api/resources/Qualifiers|,|java+method:///org/sonar/api/resources/Qualifiers/isClass(org.sonar.api.resources.Resource)|>>,
    <|java+method:///org/sonar/api/batch/AbstractSourceImporter/parseDirs(org.sonar.api.batch.SensorContext,java.util.List,java.util.List,boolean,java.nio.charset.Charset)|,<|java+class:///org/sonar/api/batch/AbstractSourceImporter|,|java+method:///org/sonar/api/batch/AbstractSourceImporter/parseDirs(org.sonar.api.batch.SensorContext,java.util.List,java.util.List,boolean,java.nio.charset.Charset)|>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$1/toString()|,<|java+class:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$1|,|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$1/toString()|>>,
    <|java+method:///org/sonar/api/utils/log/LogInterceptor/log(org.sonar.api.utils.log.LoggerLevel,java.lang.String)|,<|java+class:///org/sonar/api/utils/log/LogInterceptor|,|java+method:///org/sonar/api/utils/log/LogInterceptor/log(org.sonar.api.utils.log.LoggerLevel,java.lang.String)|>>,
    <|java+method:///org/sonar/graph/FeedbackEdge/getEdge()|,<|java+class:///org/sonar/graph/FeedbackEdge|,|java+method:///org/sonar/graph/FeedbackEdge/getEdge()|>>,
    <|java+method:///org/sonar/graph/DsmManualSorter/sort(org.sonar.graph.Dsm,java.lang.Object%5B%5D)|,<|java+class:///org/sonar/graph/DsmManualSorter|,|java+method:///org/sonar/graph/DsmManualSorter/sort(org.sonar.graph.Dsm,java.lang.Object%5B%5D)|>>,
    <|java+method:///org/sonar/api/utils/log/LogInterceptor/log(org.sonar.api.utils.log.LoggerLevel,java.lang.String,java.lang.Object,java.lang.Object)|,<|java+class:///org/sonar/api/utils/log/LogInterceptor|,|java+method:///org/sonar/api/utils/log/LogInterceptor/log(org.sonar.api.utils.log.LoggerLevel,java.lang.String,java.lang.Object,java.lang.Object)|>>,
    <|java+method:///org/sonar/api/resources/Project/setName(java.lang.String)|,<|java+class:///org/sonar/api/resources/Project|,|java+method:///org/sonar/api/resources/Project/setName(java.lang.String)|>>,
    <|java+constructor:///org/sonar/graph/IncrementalCyclesAndFESSolver/IncrementalCyclesAndFESSolver(org.sonar.graph.DirectedGraphAccessor,java.util.Collection)|,<|java+class:///org/sonar/graph/IncrementalCyclesAndFESSolver|,|java+constructor:///org/sonar/graph/IncrementalCyclesAndFESSolver/IncrementalCyclesAndFESSolver(org.sonar.graph.DirectedGraphAccessor,java.util.Collection)|>>,
    <|java+method:///org/sonar/api/resources/JavaPackage/getLongName()|,<|java+class:///org/sonar/api/resources/JavaPackage|,|java+method:///org/sonar/api/resources/JavaPackage/getLongName()|>>,
    <|java+method:///org/sonar/api/measures/Measure/setFromCore(boolean)|,<|java+class:///org/sonar/api/measures/Measure|,|java+method:///org/sonar/api/measures/Measure/setFromCore(boolean)|>>,
    <|java+method:///org/sonar/api/server/ws/WebService$NewAction/createParam(java.lang.String,java.lang.String)|,<|java+class:///org/sonar/api/server/ws/WebService$NewAction|,|java+method:///org/sonar/api/server/ws/WebService$NewAction/createParam(java.lang.String,java.lang.String)|>>,
    <|java+constructor:///org/sonar/graph/MinimumFeedbackEdgeSetSolver/MinimumFeedbackEdgeSetSolver(java.util.Set)|,<|java+class:///org/sonar/graph/MinimumFeedbackEdgeSetSolver|,|java+constructor:///org/sonar/graph/MinimumFeedbackEdgeSetSolver/MinimumFeedbackEdgeSetSolver(java.util.Set)|>>,
    <|java+method:///org/sonar/api/utils/log/LogInterceptor/log(org.sonar.api.utils.log.LoggerLevel,java.lang.String,java.lang.Throwable)|,<|java+class:///org/sonar/api/utils/log/LogInterceptor|,|java+method:///org/sonar/api/utils/log/LogInterceptor/log(org.sonar.api.utils.log.LoggerLevel,java.lang.String,java.lang.Throwable)|>>,
    <|java+method:///org/sonar/api/config/Cipher/encrypt(java.lang.String)|,<|java+class:///org/sonar/api/config/Cipher|,|java+method:///org/sonar/api/config/Cipher/encrypt(java.lang.String)|>>,
    <|java+method:///org/sonar/api/config/PropertyDefinition/validateInteger(java.lang.String)|,<|java+class:///org/sonar/api/config/PropertyDefinition|,|java+method:///org/sonar/api/config/PropertyDefinition/validateInteger(java.lang.String)|>>,
    <|java+constructor:///org/sonar/colorizer/CodeColorizer/CodeColorizer(java.util.List)|,<|java+class:///org/sonar/colorizer/CodeColorizer|,|java+constructor:///org/sonar/colorizer/CodeColorizer/CodeColorizer(java.util.List)|>>,
    <|java+method:///org/sonar/api/resources/JavaPackage/getScope()|,<|java+class:///org/sonar/api/resources/JavaPackage|,|java+method:///org/sonar/api/resources/JavaPackage/getScope()|>>,
    <|java+method:///org/sonar/api/web/Filter/setDisplayAs(java.lang.String)|,<|java+class:///org/sonar/api/web/Filter|,|java+method:///org/sonar/api/web/Filter/setDisplayAs(java.lang.String)|>>,
    <|java+constructor:///org/sonar/graph/DsmManualSorter/DsmManualSorter(org.sonar.graph.Dsm,java.util.List)|,<|java+class:///org/sonar/graph/DsmManualSorter|,|java+constructor:///org/sonar/graph/DsmManualSorter/DsmManualSorter(org.sonar.graph.Dsm,java.util.List)|>>,
    <|java+method:///org/sonar/colorizer/TokenizerDispatcher/cloneNotThreadSafeTokenizers()|,<|java+class:///org/sonar/colorizer/TokenizerDispatcher|,|java+method:///org/sonar/colorizer/TokenizerDispatcher/cloneNotThreadSafeTokenizers()|>>,
    <|java+method:///org/sonar/colorizer/CaseInsensitiveKeywordsTokenizer/clone()|,<|java+class:///org/sonar/colorizer/CaseInsensitiveKeywordsTokenizer|,|java+method:///org/sonar/colorizer/CaseInsensitiveKeywordsTokenizer/clone()|>>,
    <|java+method:///org/sonar/graph/StringEdgeFactory/createEdge(java.lang.Object,java.lang.Object,int)|,<|java+class:///org/sonar/graph/StringEdgeFactory|,|java+method:///org/sonar/graph/StringEdgeFactory/createEdge(java.lang.Object,java.lang.Object,int)|>>,
    <|java+method:///org/sonar/api/resources/ResourceType$Builder/access$400(org.sonar.api.resources.ResourceType$Builder)|,<|java+class:///org/sonar/api/resources/ResourceType$Builder|,|java+method:///org/sonar/api/resources/ResourceType$Builder/access$400(org.sonar.api.resources.ResourceType$Builder)|>>,
    <|java+method:///org/sonar/api/server/ws/RailsHandler/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|,<|java+class:///org/sonar/api/server/ws/RailsHandler|,|java+method:///org/sonar/api/server/ws/RailsHandler/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|>>,
    <|java+method:///org/sonar/api/rules/ActiveRule$1/apply(java.lang.Object)|,<|java+class:///org/sonar/api/rules/ActiveRule$1|,|java+method:///org/sonar/api/rules/ActiveRule$1/apply(java.lang.Object)|>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileSystemFilter$Context/type()|,<|java+interface:///org/sonar/api/scan/filesystem/FileSystemFilter$Context|,|java+method:///org/sonar/api/scan/filesystem/FileSystemFilter$Context/type()|>>,
    <|java+constructor:///org/sonar/api/batch/fs/internal/AbstractFilePredicate$1/AbstractFilePredicate$1(org.sonar.api.batch.fs.internal.AbstractFilePredicate)|,<|java+class:///org/sonar/api/batch/fs/internal/AbstractFilePredicate$1|,|java+constructor:///org/sonar/api/batch/fs/internal/AbstractFilePredicate$1/AbstractFilePredicate$1(org.sonar.api.batch.fs.internal.AbstractFilePredicate)|>>,
    <|java+method:///org/sonar/colorizer/JavaConstantTokenizer/hasNextToken(org.sonar.channel.CodeReader)|,<|java+class:///org/sonar/colorizer/JavaConstantTokenizer|,|java+method:///org/sonar/colorizer/JavaConstantTokenizer/hasNextToken(org.sonar.channel.CodeReader)|>>,
    <|java+method:///org/sonar/api/resources/ResourceTypes$2/apply(java.lang.String)|,<|java+class:///org/sonar/api/resources/ResourceTypes$2|,|java+method:///org/sonar/api/resources/ResourceTypes$2/apply(java.lang.String)|>>,
    <|java+method:///org/sonar/graph/StringEdgeFactory/createEdge(java.lang.String,java.lang.String,int)|,<|java+class:///org/sonar/graph/StringEdgeFactory|,|java+method:///org/sonar/graph/StringEdgeFactory/createEdge(java.lang.String,java.lang.String,int)|>>,
    <|java+method:///org/sonar/api/resources/ResourceTypes$StringPropertyValuePredicate/apply(org.sonar.api.resources.ResourceType)|,<|java+class:///org/sonar/api/resources/ResourceTypes$StringPropertyValuePredicate|,|java+method:///org/sonar/api/resources/ResourceTypes$StringPropertyValuePredicate/apply(org.sonar.api.resources.ResourceType)|>>,
    <|java+method:///org/sonar/graph/Dsm/getNumberOfOutgoingEdges(int,int,int)|,<|java+class:///org/sonar/graph/Dsm|,|java+method:///org/sonar/graph/Dsm/getNumberOfOutgoingEdges(int,int,int)|>>,
    <|java+method:///org/sonar/api/batch/sensor/internal/SensorContextTester/coveredConditions(java.lang.String,org.sonar.api.batch.sensor.coverage.CoverageType,int)|,<|java+class:///org/sonar/api/batch/sensor/internal/SensorContextTester|,|java+method:///org/sonar/api/batch/sensor/internal/SensorContextTester/coveredConditions(java.lang.String,org.sonar.api.batch.sensor.coverage.CoverageType,int)|>>,
    <|java+method:///org/sonar/api/checks/AnnotationCheckFactory/getRuleKey(java.lang.Object)|,<|java+class:///org/sonar/api/checks/AnnotationCheckFactory|,|java+method:///org/sonar/api/checks/AnnotationCheckFactory/getRuleKey(java.lang.Object)|>>,
    <|java+method:///org/sonar/colorizer/HtmlCodeBuilder/append(java.lang.CharSequence)|,<|java+class:///org/sonar/colorizer/HtmlCodeBuilder|,|java+method:///org/sonar/colorizer/HtmlCodeBuilder/append(java.lang.CharSequence)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/PathPattern$AbsolutePathPattern/match(org.sonar.api.batch.fs.InputFile)|,<|java+class:///org/sonar/api/batch/fs/internal/PathPattern$AbsolutePathPattern|,|java+method:///org/sonar/api/batch/fs/internal/PathPattern$AbsolutePathPattern/match(org.sonar.api.batch.fs.InputFile)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$CharHandler/handleAll(char)|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata$CharHandler|,|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$CharHandler/handleAll(char)|>>,
    <|java+method:///org/sonar/api/web/FilterColumn/getFamily()|,<|java+class:///org/sonar/api/web/FilterColumn|,|java+method:///org/sonar/api/web/FilterColumn/getFamily()|>>,
    <|java+method:///org/sonar/api/web/Filter/add(org.sonar.api.web.FilterColumn)|,<|java+class:///org/sonar/api/web/Filter|,|java+method:///org/sonar/api/web/Filter/add(org.sonar.api.web.FilterColumn)|>>,
    <|java+method:///org/sonar/colorizer/NotThreadSafeTokenizer/clone()|,<|java+class:///org/sonar/colorizer/NotThreadSafeTokenizer|,|java+method:///org/sonar/colorizer/NotThreadSafeTokenizer/clone()|>>,
    <|java+method:///org/sonar/graph/DsmPrinter/printColumnHeaders()|,<|java+class:///org/sonar/graph/DsmPrinter|,|java+method:///org/sonar/graph/DsmPrinter/printColumnHeaders()|>>,
    <|java+method:///org/sonar/graph/DsmScanner/isFeedbackEdge(java.lang.String)|,<|java+class:///org/sonar/graph/DsmScanner|,|java+method:///org/sonar/graph/DsmScanner/isFeedbackEdge(java.lang.String)|>>,
    <|java+method:///org/sonar/api/resources/Method/getDescription()|,<|java+class:///org/sonar/api/resources/Method|,|java+method:///org/sonar/api/resources/Method/getDescription()|>>,
    <|java+initializer:///org/sonar/colorizer/HtmlOptions/HtmlOptions$initializer|,<|java+class:///org/sonar/colorizer/HtmlOptions|,|java+initializer:///org/sonar/colorizer/HtmlOptions/HtmlOptions$initializer|>>,
    <|java+constructor:///org/sonar/colorizer/KeywordsTokenizer/KeywordsTokenizer(java.lang.String,java.lang.String,java.util.Set,java.lang.String)|,<|java+class:///org/sonar/colorizer/KeywordsTokenizer|,|java+constructor:///org/sonar/colorizer/KeywordsTokenizer/KeywordsTokenizer(java.lang.String,java.lang.String,java.util.Set,java.lang.String)|>>,
    <|java+method:///org/sonar/colorizer/MultilinesDocTokenizer/setCommentStartedOnPreviousLine(org.sonar.colorizer.HtmlCodeBuilder,java.lang.Boolean)|,<|java+class:///org/sonar/colorizer/MultilinesDocTokenizer|,|java+method:///org/sonar/colorizer/MultilinesDocTokenizer/setCommentStartedOnPreviousLine(org.sonar.colorizer.HtmlCodeBuilder,java.lang.Boolean)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata/readMetadata(java.io.File,java.nio.charset.Charset)|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata|,|java+method:///org/sonar/api/batch/fs/internal/FileMetadata/readMetadata(java.io.File,java.nio.charset.Charset)|>>,
    <|java+constructor:///org/sonar/api/rules/ActiveRule$1/ActiveRule$1(org.sonar.api.rules.ActiveRule,org.sonar.api.rules.ActiveRule)|,<|java+class:///org/sonar/api/rules/ActiveRule$1|,|java+constructor:///org/sonar/api/rules/ActiveRule$1/ActiveRule$1(org.sonar.api.rules.ActiveRule,org.sonar.api.rules.ActiveRule)|>>,
    <|java+method:///org/sonar/api/batch/ResourceFilter/isIgnored(org.sonar.api.resources.Resource)|,<|java+interface:///org/sonar/api/batch/ResourceFilter|,|java+method:///org/sonar/api/batch/ResourceFilter/isIgnored(org.sonar.api.resources.Resource)|>>,
    <|java+method:///org/sonar/api/batch/SonarIndex/getMeasure(org.sonar.api.resources.Resource,org.sonar.api.batch.measure.Metric)|,<|java+class:///org/sonar/api/batch/SonarIndex|,|java+method:///org/sonar/api/batch/SonarIndex/getMeasure(org.sonar.api.resources.Resource,org.sonar.api.batch.measure.Metric)|>>,
    <|java+method:///org/sonar/api/resources/Project/setDescription(java.lang.String)|,<|java+class:///org/sonar/api/resources/Project|,|java+method:///org/sonar/api/resources/Project/setDescription(java.lang.String)|>>,
    <|java+method:///org/sonar/graph/DirectedGraphAccessor/getIncomingEdges(java.lang.Object)|,<|java+interface:///org/sonar/graph/DirectedGraphAccessor|,|java+method:///org/sonar/graph/DirectedGraphAccessor/getIncomingEdges(java.lang.Object)|>>,
    <|java+constructor:///org/sonar/graph/DsmScanner/DsmScanner(java.io.Reader)|,<|java+class:///org/sonar/graph/DsmScanner|,|java+constructor:///org/sonar/graph/DsmScanner/DsmScanner(java.io.Reader)|>>,
    <|java+method:///org/sonar/colorizer/OnlySyntaxHtmlOptions/isGenerateTable()|,<|java+class:///org/sonar/colorizer/OnlySyntaxHtmlOptions|,|java+method:///org/sonar/colorizer/OnlySyntaxHtmlOptions/isGenerateTable()|>>,
    <|java+method:///org/sonar/api/batch/SonarIndex/getParent(org.sonar.api.resources.Resource)|,<|java+class:///org/sonar/api/batch/SonarIndex|,|java+method:///org/sonar/api/batch/SonarIndex/getParent(org.sonar.api.resources.Resource)|>>,
    <|java+constructor:///org/sonar/colorizer/LiteralTokenizer/LiteralTokenizer(java.lang.String,java.lang.String)|,<|java+class:///org/sonar/colorizer/LiteralTokenizer|,|java+constructor:///org/sonar/colorizer/LiteralTokenizer/LiteralTokenizer(java.lang.String,java.lang.String)|>>,
    <|java+method:///org/sonar/api/resources/JavaPackage/getParent()|,<|java+class:///org/sonar/api/resources/JavaPackage|,|java+method:///org/sonar/api/resources/JavaPackage/getParent()|>>,
    <|java+constructor:///org/sonar/colorizer/SynhtaxHighlightingException/SynhtaxHighlightingException(java.lang.Throwable)|,<|java+class:///org/sonar/colorizer/SynhtaxHighlightingException|,|java+constructor:///org/sonar/colorizer/SynhtaxHighlightingException/SynhtaxHighlightingException(java.lang.Throwable)|>>,
    <|java+constructor:///org/sonar/colorizer/JavadocTokenizer/JavadocTokenizer(java.lang.String,java.lang.String)|,<|java+class:///org/sonar/colorizer/JavadocTokenizer|,|java+constructor:///org/sonar/colorizer/JavadocTokenizer/JavadocTokenizer(java.lang.String,java.lang.String)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$LineOffsetCounter/handleAll(char)|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata$LineOffsetCounter|,|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$LineOffsetCounter/handleAll(char)|>>,
    <|java+constructor:///org/sonar/api/scan/filesystem/FileQuery$1/FileQuery$1(org.sonar.api.scan.filesystem.FileQuery)|,<|java+class:///org/sonar/api/scan/filesystem/FileQuery$1|,|java+constructor:///org/sonar/api/scan/filesystem/FileQuery$1/FileQuery$1(org.sonar.api.scan.filesystem.FileQuery)|>>,
    <|java+method:///org/sonar/api/resources/Project/setAnalysisVersion(java.lang.String)|,<|java+class:///org/sonar/api/resources/Project|,|java+method:///org/sonar/api/resources/Project/setAnalysisVersion(java.lang.String)|>>,
    <|java+method:///org/sonar/api/scan/event/ProjectScanHandler/onProjectScan(org.sonar.api.scan.event.ProjectScanHandler$ProjectScanEvent)|,<|java+interface:///org/sonar/api/scan/event/ProjectScanHandler|,|java+method:///org/sonar/api/scan/event/ProjectScanHandler/onProjectScan(org.sonar.api.scan.event.ProjectScanHandler$ProjectScanEvent)|>>,
    <|java+method:///org/sonar/api/security/ResourcePermissions/grantUserRole(org.sonar.api.resources.Resource,java.lang.String,java.lang.String)|,<|java+interface:///org/sonar/api/security/ResourcePermissions|,|java+method:///org/sonar/api/security/ResourcePermissions/grantUserRole(org.sonar.api.resources.Resource,java.lang.String,java.lang.String)|>>,
    <|java+constructor:///org/sonar/api/profiles/RulesProfile$MatchRule/RulesProfile$MatchRule(org.sonar.api.rules.Rule)|,<|java+class:///org/sonar/api/profiles/RulesProfile$MatchRule|,|java+constructor:///org/sonar/api/profiles/RulesProfile$MatchRule/RulesProfile$MatchRule(org.sonar.api.rules.Rule)|>>,
    <|java+constructor:///org/sonar/colorizer/StringTokenizer/StringTokenizer()|,<|java+class:///org/sonar/colorizer/StringTokenizer|,|java+constructor:///org/sonar/colorizer/StringTokenizer/StringTokenizer()|>>,
    <|java+method:///org/sonar/api/web/Filter/setPageSize(int)|,<|java+class:///org/sonar/api/web/Filter|,|java+method:///org/sonar/api/web/Filter/setPageSize(int)|>>,
    <|java+constructor:///org/sonar/colorizer/MultilinesDocTokenizer/MultilinesDocTokenizer(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|,<|java+class:///org/sonar/colorizer/MultilinesDocTokenizer|,|java+constructor:///org/sonar/colorizer/MultilinesDocTokenizer/MultilinesDocTokenizer(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|>>,
    <|java+method:///org/sonar/api/security/ResourcePermissions/hasRoles(org.sonar.api.resources.Resource)|,<|java+interface:///org/sonar/api/security/ResourcePermissions|,|java+method:///org/sonar/api/security/ResourcePermissions/hasRoles(org.sonar.api.resources.Resource)|>>,
    <|java+constructor:///org/sonar/api/resources/JavaFile/JavaFile(java.lang.String,boolean)|,<|java+class:///org/sonar/api/resources/JavaFile|,|java+constructor:///org/sonar/api/resources/JavaFile/JavaFile(java.lang.String,boolean)|>>,
    <|java+constructor:///org/sonar/api/batch/fs/internal/FileMetadata$LineCounter/FileMetadata$LineCounter(java.io.File,java.nio.charset.Charset)|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata$LineCounter|,|java+constructor:///org/sonar/api/batch/fs/internal/FileMetadata$LineCounter/FileMetadata$LineCounter(java.io.File,java.nio.charset.Charset)|>>,
    <|java+method:///org/sonar/api/resources/ResourceTypes$PropertyKeyPredicate/apply(org.sonar.api.resources.ResourceType)|,<|java+class:///org/sonar/api/resources/ResourceTypes$PropertyKeyPredicate|,|java+method:///org/sonar/api/resources/ResourceTypes$PropertyKeyPredicate/apply(org.sonar.api.resources.ResourceType)|>>,
    <|java+method:///org/sonar/duplications/internal/pmd/TokenizerBridge/chunk(java.io.File)|,<|java+class:///org/sonar/duplications/internal/pmd/TokenizerBridge|,|java+method:///org/sonar/duplications/internal/pmd/TokenizerBridge/chunk(java.io.File)|>>,
    <|java+method:///org/sonar/api/scan/event/ModuleScanPhaseHandler/onModuleScanPhase(org.sonar.api.scan.event.ModuleScanPhaseHandler$ModuleScanPhaseEvent)|,<|java+interface:///org/sonar/api/scan/event/ModuleScanPhaseHandler|,|java+method:///org/sonar/api/scan/event/ModuleScanPhaseHandler/onModuleScanPhase(org.sonar.api.scan.event.ModuleScanPhaseHandler$ModuleScanPhaseEvent)|>>,
    <|java+method:///org/sonar/graph/Cycle/getEdges()|,<|java+class:///org/sonar/graph/Cycle|,|java+method:///org/sonar/graph/Cycle/getEdges()|>>,
    <|java+method:///org/sonar/api/resources/ResourceTypes$BooleanPropertyValuePredicate/apply(java.lang.Object)|,<|java+class:///org/sonar/api/resources/ResourceTypes$BooleanPropertyValuePredicate|,|java+method:///org/sonar/api/resources/ResourceTypes$BooleanPropertyValuePredicate/apply(java.lang.Object)|>>,
    <|java+constructor:///org/sonar/api/resources/JavaFile/JavaFile()|,<|java+class:///org/sonar/api/resources/JavaFile|,|java+constructor:///org/sonar/api/resources/JavaFile/JavaFile()|>>,
    <|java+method:///org/sonar/colorizer/TokenizerDispatcher/colorize(java.lang.String)|,<|java+class:///org/sonar/colorizer/TokenizerDispatcher|,|java+method:///org/sonar/colorizer/TokenizerDispatcher/colorize(java.lang.String)|>>,
    <|java+method:///org/sonar/api/resources/JavaFile/getLongName()|,<|java+class:///org/sonar/api/resources/JavaFile|,|java+method:///org/sonar/api/resources/JavaFile/getLongName()|>>,
    <|java+method:///org/sonar/api/resources/Project/getAnalysisType()|,<|java+class:///org/sonar/api/resources/Project|,|java+method:///org/sonar/api/resources/Project/getAnalysisType()|>>,
    <|java+method:///org/sonar/colorizer/TokenizerDispatcher/colorize(org.sonar.channel.CodeReader,org.sonar.colorizer.HtmlCodeBuilder)|,<|java+class:///org/sonar/colorizer/TokenizerDispatcher|,|java+method:///org/sonar/colorizer/TokenizerDispatcher/colorize(org.sonar.channel.CodeReader,org.sonar.colorizer.HtmlCodeBuilder)|>>,
    <|java+method:///org/sonar/graph/Cycle/size()|,<|java+class:///org/sonar/graph/Cycle|,|java+method:///org/sonar/graph/Cycle/size()|>>,
    <|java+constructor:///org/sonar/api/resources/Java/Java()|,<|java+class:///org/sonar/api/resources/Java|,|java+constructor:///org/sonar/api/resources/Java/Java()|>>,
    <|java+constructor:///org/sonar/api/resources/ProjectUtils/ProjectUtils()|,<|java+class:///org/sonar/api/resources/ProjectUtils|,|java+constructor:///org/sonar/api/resources/ProjectUtils/ProjectUtils()|>>,
    <|java+method:///org/sonar/api/scan/filesystem/ModuleFileSystem/baseDir()|,<|java+interface:///org/sonar/api/scan/filesystem/ModuleFileSystem|,|java+method:///org/sonar/api/scan/filesystem/ModuleFileSystem/baseDir()|>>,
    <|java+method:///org/sonar/colorizer/CodeColorizer/toHtml(java.io.Reader,org.sonar.colorizer.HtmlOptions)|,<|java+class:///org/sonar/colorizer/CodeColorizer|,|java+method:///org/sonar/colorizer/CodeColorizer/toHtml(java.io.Reader,org.sonar.colorizer.HtmlOptions)|>>,
    <|java+method:///org/sonar/api/web/Filter/setFavouritesOnly(boolean)|,<|java+class:///org/sonar/api/web/Filter|,|java+method:///org/sonar/api/web/Filter/setFavouritesOnly(boolean)|>>,
    <|java+constructor:///org/sonar/api/batch/fs/internal/DefaultInputModule/DefaultInputModule(java.lang.String)|,<|java+class:///org/sonar/api/batch/fs/internal/DefaultInputModule|,|java+constructor:///org/sonar/api/batch/fs/internal/DefaultInputModule/DefaultInputModule(java.lang.String)|>>,
    <|java+method:///org/sonar/graph/StringEdgeFactory/createEdge(java.lang.String,java.lang.String)|,<|java+class:///org/sonar/graph/StringEdgeFactory|,|java+method:///org/sonar/graph/StringEdgeFactory/createEdge(java.lang.String,java.lang.String)|>>,
    <|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/addTestFiles(java.lang.String%5B%5D)|,<|java+class:///org/sonar/api/batch/bootstrap/ProjectDefinition|,|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/addTestFiles(java.lang.String%5B%5D)|>>,
    <|java+method:///org/sonar/graph/DirectedGraph/addEdgeToMap(java.lang.Object,java.lang.Object,org.sonar.graph.Edge,java.util.Map)|,<|java+class:///org/sonar/graph/DirectedGraph|,|java+method:///org/sonar/graph/DirectedGraph/addEdgeToMap(java.lang.Object,java.lang.Object,org.sonar.graph.Edge,java.util.Map)|>>,
    <|java+method:///org/sonar/api/utils/Durations/hoursInDay()|,<|java+class:///org/sonar/api/utils/Durations|,|java+method:///org/sonar/api/utils/Durations/hoursInDay()|>>,
    <|java+method:///org/sonar/api/config/Settings/doOnSetProperty(java.lang.String,java.lang.String)|,<|java+class:///org/sonar/api/config/Settings|,|java+method:///org/sonar/api/config/Settings/doOnSetProperty(java.lang.String,java.lang.String)|>>,
    <|java+method:///org/sonar/api/resources/InputFileUtils$DefaultInputFile/hashCode()|,<|java+class:///org/sonar/api/resources/InputFileUtils$DefaultInputFile|,|java+method:///org/sonar/api/resources/InputFileUtils$DefaultInputFile/hashCode()|>>,
    <|java+method:///org/sonar/graph/DirectedGraph/getOutgoingEdges(java.lang.Object)|,<|java+class:///org/sonar/graph/DirectedGraph|,|java+method:///org/sonar/graph/DirectedGraph/getOutgoingEdges(java.lang.Object)|>>,
    <|java+method:///org/sonar/api/resources/JavaPackage/getName()|,<|java+class:///org/sonar/api/resources/JavaPackage|,|java+method:///org/sonar/api/resources/JavaPackage/getName()|>>,
    <|java+method:///org/sonar/api/scan/event/ProjectScanHandler$ProjectScanEvent/isStart()|,<|java+interface:///org/sonar/api/scan/event/ProjectScanHandler$ProjectScanEvent|,|java+method:///org/sonar/api/scan/event/ProjectScanHandler$ProjectScanEvent/isStart()|>>,
    <|java+method:///org/sonar/api/resources/InputFileUtils$DefaultInputFile/getRelativePath()|,<|java+class:///org/sonar/api/resources/InputFileUtils$DefaultInputFile|,|java+method:///org/sonar/api/resources/InputFileUtils$DefaultInputFile/getRelativePath()|>>,
    <|java+constructor:///org/sonar/api/resources/InputFileUtils/InputFileUtils()|,<|java+class:///org/sonar/api/resources/InputFileUtils|,|java+constructor:///org/sonar/api/resources/InputFileUtils/InputFileUtils()|>>,
    <|java+method:///org/sonar/graph/StringEdgeFactory/createEdge(java.lang.Object,java.lang.Object)|,<|java+class:///org/sonar/graph/StringEdgeFactory|,|java+method:///org/sonar/graph/StringEdgeFactory/createEdge(java.lang.Object,java.lang.Object)|>>,
    <|java+method:///org/sonar/graph/FeedbackEdge/equals(java.lang.Object)|,<|java+class:///org/sonar/graph/FeedbackEdge|,|java+method:///org/sonar/graph/FeedbackEdge/equals(java.lang.Object)|>>,
    <|java+method:///org/sonar/graph/DirectedGraph/getEdges(java.util.Collection)|,<|java+class:///org/sonar/graph/DirectedGraph|,|java+method:///org/sonar/graph/DirectedGraph/getEdges(java.util.Collection)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/AbstractFilePredicate$1/apply(java.lang.Object)|,<|java+class:///org/sonar/api/batch/fs/internal/AbstractFilePredicate$1|,|java+method:///org/sonar/api/batch/fs/internal/AbstractFilePredicate$1/apply(java.lang.Object)|>>,
    <|java+method:///org/sonar/api/web/Filter/add(org.sonar.api.web.Criterion)|,<|java+class:///org/sonar/api/web/Filter|,|java+method:///org/sonar/api/web/Filter/add(org.sonar.api.web.Criterion)|>>,
    <|java+method:///org/sonar/api/server/authentication/UnauthorizedException/encodeMessage(java.lang.String)|,<|java+class:///org/sonar/api/server/authentication/UnauthorizedException|,|java+method:///org/sonar/api/server/authentication/UnauthorizedException/encodeMessage(java.lang.String)|>>,
    <|java+method:///org/sonar/colorizer/InlineDocTokenizer$1/match(int)|,<|java+class:///org/sonar/colorizer/InlineDocTokenizer$1|,|java+method:///org/sonar/colorizer/InlineDocTokenizer$1/match(int)|>>,
    <|java+method:///org/sonar/colorizer/OnlySyntaxHtmlOptions/getTableId()|,<|java+class:///org/sonar/colorizer/OnlySyntaxHtmlOptions|,|java+method:///org/sonar/colorizer/OnlySyntaxHtmlOptions/getTableId()|>>,
    <|java+method:///org/sonar/colorizer/OnlySyntaxHtmlOptions/setGenerateTable(boolean)|,<|java+class:///org/sonar/colorizer/OnlySyntaxHtmlOptions|,|java+method:///org/sonar/colorizer/OnlySyntaxHtmlOptions/setGenerateTable(boolean)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/DefaultFileSystem$Cache/inputFiles()|,<|java+class:///org/sonar/api/batch/fs/internal/DefaultFileSystem$Cache|,|java+method:///org/sonar/api/batch/fs/internal/DefaultFileSystem$Cache/inputFiles()|>>,
    <|java+method:///org/sonar/graph/MinimumFeedbackEdgeSetSolver/addNewEdge(org.sonar.graph.FeedbackEdge,java.util.Set)|,<|java+class:///org/sonar/graph/MinimumFeedbackEdgeSetSolver|,|java+method:///org/sonar/graph/MinimumFeedbackEdgeSetSolver/addNewEdge(org.sonar.graph.FeedbackEdge,java.util.Set)|>>,
    <|java+method:///org/sonar/api/scan/filesystem/ModuleFileSystem/binaryDirs()|,<|java+interface:///org/sonar/api/scan/filesystem/ModuleFileSystem|,|java+method:///org/sonar/api/scan/filesystem/ModuleFileSystem/binaryDirs()|>>,
    <|java+constructor:///org/sonar/api/utils/log/LogInterceptor/LogInterceptor()|,<|java+class:///org/sonar/api/utils/log/LogInterceptor|,|java+constructor:///org/sonar/api/utils/log/LogInterceptor/LogInterceptor()|>>,
    <|java+method:///org/sonar/api/resources/JavaFile/getDescription()|,<|java+class:///org/sonar/api/resources/JavaFile|,|java+method:///org/sonar/api/resources/JavaFile/getDescription()|>>,
    <|java+method:///org/sonar/graph/CycleDetector/init(org.sonar.graph.DirectedGraphAccessor,java.util.Collection,java.util.Set)|,<|java+class:///org/sonar/graph/CycleDetector|,|java+method:///org/sonar/graph/CycleDetector/init(org.sonar.graph.DirectedGraphAccessor,java.util.Collection,java.util.Set)|>>,
    <|java+method:///org/sonar/api/resources/InputFileUtils/getRelativeDirectory(org.sonar.api.resources.InputFile)|,<|java+class:///org/sonar/api/resources/InputFileUtils|,|java+method:///org/sonar/api/resources/InputFileUtils/getRelativeDirectory(org.sonar.api.resources.InputFile)|>>,
    <|java+method:///org/sonar/api/resources/ResourceTypeTree$1/apply(java.lang.String)|,<|java+class:///org/sonar/api/resources/ResourceTypeTree$1|,|java+method:///org/sonar/api/resources/ResourceTypeTree$1/apply(java.lang.String)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$LineCounter/handleIgnoreEoL(char)|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata$LineCounter|,|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$LineCounter/handleIgnoreEoL(char)|>>,
    <|java+method:///org/sonar/api/checks/AnnotationCheckFactory/configureField(java.lang.Object,java.lang.reflect.Field,java.lang.String)|,<|java+class:///org/sonar/api/checks/AnnotationCheckFactory|,|java+method:///org/sonar/api/checks/AnnotationCheckFactory/configureField(java.lang.Object,java.lang.reflect.Field,java.lang.String)|>>,
    <|java+constructor:///org/sonar/colorizer/Tokenizer/Tokenizer()|,<|java+class:///org/sonar/colorizer/Tokenizer|,|java+constructor:///org/sonar/colorizer/Tokenizer/Tokenizer()|>>,
    <|java+method:///org/sonar/api/issue/IssueHandler$Context/setLine(java.lang.Integer)|,<|java+interface:///org/sonar/api/issue/IssueHandler$Context|,|java+method:///org/sonar/api/issue/IssueHandler$Context/setLine(java.lang.Integer)|>>,
    <|java+method:///org/sonar/colorizer/HtmlOptions/setTableId(java.lang.String)|,<|java+class:///org/sonar/colorizer/HtmlOptions|,|java+method:///org/sonar/colorizer/HtmlOptions/setTableId(java.lang.String)|>>,
    <|java+method:///org/sonar/colorizer/HtmlCodeBuilder/getVariable(java.lang.Object,java.lang.Object)|,<|java+class:///org/sonar/colorizer/HtmlCodeBuilder|,|java+method:///org/sonar/colorizer/HtmlCodeBuilder/getVariable(java.lang.Object,java.lang.Object)|>>,
    <|java+method:///org/sonar/api/resources/Project/removeFromParent()|,<|java+class:///org/sonar/api/resources/Project|,|java+method:///org/sonar/api/resources/Project/removeFromParent()|>>,
    <|java+method:///org/sonar/colorizer/CodeColorizer/javaToHtml(java.io.Reader,org.sonar.colorizer.HtmlOptions)|,<|java+class:///org/sonar/colorizer/CodeColorizer|,|java+method:///org/sonar/colorizer/CodeColorizer/javaToHtml(java.io.Reader,org.sonar.colorizer.HtmlOptions)|>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileQuery/on(java.lang.String,java.lang.String%5B%5D)|,<|java+class:///org/sonar/api/scan/filesystem/FileQuery|,|java+method:///org/sonar/api/scan/filesystem/FileQuery/on(java.lang.String,java.lang.String%5B%5D)|>>,
    <|java+method:///org/sonar/api/resources/Method/matchFilePattern(java.lang.String)|,<|java+class:///org/sonar/api/resources/Method|,|java+method:///org/sonar/api/resources/Method/matchFilePattern(java.lang.String)|>>,
    <|java+method:///org/sonar/api/batch/SonarIndex/getProject()|,<|java+class:///org/sonar/api/batch/SonarIndex|,|java+method:///org/sonar/api/batch/SonarIndex/getProject()|>>,
    <|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/resetTestDirs()|,<|java+class:///org/sonar/api/batch/bootstrap/ProjectDefinition|,|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/resetTestDirs()|>>,
    <|java+method:///org/sonar/api/user/RubyUserService/find(java.util.Map)|,<|java+interface:///org/sonar/api/user/RubyUserService|,|java+method:///org/sonar/api/user/RubyUserService/find(java.util.Map)|>>,
    <|java+method:///org/sonar/api/web/RubyRailsWebservice/getTemplate()|,<|java+interface:///org/sonar/api/web/RubyRailsWebservice|,|java+method:///org/sonar/api/web/RubyRailsWebservice/getTemplate()|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/PathPattern$AbsolutePathPattern/match(org.sonar.api.batch.fs.InputFile,boolean)|,<|java+class:///org/sonar/api/batch/fs/internal/PathPattern$AbsolutePathPattern|,|java+method:///org/sonar/api/batch/fs/internal/PathPattern$AbsolutePathPattern/match(org.sonar.api.batch.fs.InputFile,boolean)|>>,
    <|java+constructor:///org/sonar/api/batch/sensor/highlighting/internal/DefaultHighlighting$1/DefaultHighlighting$1(org.sonar.api.batch.sensor.highlighting.internal.DefaultHighlighting)|,<|java+class:///org/sonar/api/batch/sensor/highlighting/internal/DefaultHighlighting$1|,|java+constructor:///org/sonar/api/batch/sensor/highlighting/internal/DefaultHighlighting$1/DefaultHighlighting$1(org.sonar.api.batch.sensor.highlighting.internal.DefaultHighlighting)|>>,
    <|java+method:///org/sonar/colorizer/KeywordsTokenizer/setCaseInsensitive(boolean)|,<|java+class:///org/sonar/colorizer/KeywordsTokenizer|,|java+method:///org/sonar/colorizer/KeywordsTokenizer/setCaseInsensitive(boolean)|>>,
    <|java+method:///org/sonar/api/web/RequiredMeasures/allOf()|,<|java+interface:///org/sonar/api/web/RequiredMeasures|,|java+method:///org/sonar/api/web/RequiredMeasures/allOf()|>>,
    <|java+method:///org/sonar/api/utils/DateUtils$ThreadSafeDateFormat/readObject(java.io.ObjectInputStream)|,<|java+class:///org/sonar/api/utils/DateUtils$ThreadSafeDateFormat|,|java+method:///org/sonar/api/utils/DateUtils$ThreadSafeDateFormat/readObject(java.io.ObjectInputStream)|>>,
    <|java+method:///org/sonar/graph/DirectedGraph/addEdge(java.lang.Object,java.lang.Object,int)|,<|java+class:///org/sonar/graph/DirectedGraph|,|java+method:///org/sonar/graph/DirectedGraph/addEdge(java.lang.Object,java.lang.Object,int)|>>,
    <|java+method:///org/sonar/api/issue/IssueHandler/onIssue(org.sonar.api.issue.IssueHandler$Context)|,<|java+interface:///org/sonar/api/issue/IssueHandler|,|java+method:///org/sonar/api/issue/IssueHandler/onIssue(org.sonar.api.issue.IssueHandler$Context)|>>,
    <|java+constructor:///org/sonar/api/web/CodeColorizerFormat/CodeColorizerFormat(java.lang.String)|,<|java+class:///org/sonar/api/web/CodeColorizerFormat|,|java+constructor:///org/sonar/api/web/CodeColorizerFormat/CodeColorizerFormat(java.lang.String)|>>,
    <|java+method:///org/sonar/colorizer/GroovyKeywords/get()|,<|java+class:///org/sonar/colorizer/GroovyKeywords|,|java+method:///org/sonar/colorizer/GroovyKeywords/get()|>>,
    <|java+constructor:///org/sonar/api/resources/Project$1/Project$1(java.lang.String,java.lang.String)|,<|java+class:///org/sonar/api/resources/Project$1|,|java+constructor:///org/sonar/api/resources/Project$1/Project$1(java.lang.String,java.lang.String)|>>,
    <|java+method:///org/sonar/api/scan/filesystem/ModuleFileSystem/files(org.sonar.api.scan.filesystem.FileQuery)|,<|java+interface:///org/sonar/api/scan/filesystem/ModuleFileSystem|,|java+method:///org/sonar/api/scan/filesystem/ModuleFileSystem/files(org.sonar.api.scan.filesystem.FileQuery)|>>,
    <|java+method:///org/sonar/api/server/ws/WebService$NewParam/access$2000(org.sonar.api.server.ws.WebService$NewParam)|,<|java+class:///org/sonar/api/server/ws/WebService$NewParam|,|java+method:///org/sonar/api/server/ws/WebService$NewParam/access$2000(org.sonar.api.server.ws.WebService$NewParam)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$FileHashComputer/getHash()|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata$FileHashComputer|,|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$FileHashComputer/getHash()|>>,
    <|java+method:///org/sonar/api/config/Settings/clear()|,<|java+class:///org/sonar/api/config/Settings|,|java+method:///org/sonar/api/config/Settings/clear()|>>,
    <|java+method:///org/sonar/api/resources/JavaFile/getParent()|,<|java+class:///org/sonar/api/resources/JavaFile|,|java+method:///org/sonar/api/resources/JavaFile/getParent()|>>,
    <|java+method:///org/sonar/api/issue/IssueHandler$Context/isNew()|,<|java+interface:///org/sonar/api/issue/IssueHandler$Context|,|java+method:///org/sonar/api/issue/IssueHandler$Context/isNew()|>>,
    <|java+constructor:///org/sonar/api/config/Settings/Settings(org.sonar.api.config.Settings)|,<|java+class:///org/sonar/api/config/Settings|,|java+constructor:///org/sonar/api/config/Settings/Settings(org.sonar.api.config.Settings)|>>,
    <|java+method:///org/sonar/api/web/FilterColumn/getKey()|,<|java+class:///org/sonar/api/web/FilterColumn|,|java+method:///org/sonar/api/web/FilterColumn/getKey()|>>,
    <|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/addSourceDirs(java.io.File%5B%5D)|,<|java+class:///org/sonar/api/batch/bootstrap/ProjectDefinition|,|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/addSourceDirs(java.io.File%5B%5D)|>>,
    <|java+method:///org/sonar/colorizer/HtmlOptions/setFirstLineId(int)|,<|java+class:///org/sonar/colorizer/HtmlOptions|,|java+method:///org/sonar/colorizer/HtmlOptions/setFirstLineId(int)|>>,
    <|java+constructor:///org/sonar/api/server/ws/WebService$SelectionMode$1/WebService$SelectionMode$1()|,<|java+class:///org/sonar/api/server/ws/WebService$SelectionMode$1|,|java+constructor:///org/sonar/api/server/ws/WebService$SelectionMode$1/WebService$SelectionMode$1()|>>,
    <|java+method:///org/sonar/api/web/Filter/getCriteria()|,<|java+class:///org/sonar/api/web/Filter|,|java+method:///org/sonar/api/web/Filter/getCriteria()|>>,
    <|java+method:///org/sonar/graph/CycleDetector/getSearchCyclesCalls()|,<|java+class:///org/sonar/graph/CycleDetector|,|java+method:///org/sonar/graph/CycleDetector/getSearchCyclesCalls()|>>,
    <|java+method:///org/sonar/api/server/debt/DebtModel/characteristics()|,<|java+interface:///org/sonar/api/server/debt/DebtModel|,|java+method:///org/sonar/api/server/debt/DebtModel/characteristics()|>>,
    <|java+method:///org/sonar/api/checks/CheckFactory/init()|,<|java+class:///org/sonar/api/checks/CheckFactory|,|java+method:///org/sonar/api/checks/CheckFactory/init()|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata/access$000()|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata|,|java+method:///org/sonar/api/batch/fs/internal/FileMetadata/access$000()|>>,
    <|java+method:///org/sonar/graph/FeedbackEdge/getRelativeWeight()|,<|java+class:///org/sonar/graph/FeedbackEdge|,|java+method:///org/sonar/graph/FeedbackEdge/getRelativeWeight()|>>,
    <|java+method:///org/sonar/api/resources/Method/getLongName()|,<|java+class:///org/sonar/api/resources/Method|,|java+method:///org/sonar/api/resources/Method/getLongName()|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/getFileBaseDir()|,<|java+class:///org/sonar/api/batch/fs/internal/DefaultInputFile|,|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/getFileBaseDir()|>>,
    <|java+method:///org/sonar/graph/StringEdge/getWeight()|,<|java+class:///org/sonar/graph/StringEdge|,|java+method:///org/sonar/graph/StringEdge/getWeight()|>>,
    <|java+constructor:///org/sonar/api/server/ws/RailsHandler/RailsHandler()|,<|java+class:///org/sonar/api/server/ws/RailsHandler|,|java+constructor:///org/sonar/api/server/ws/RailsHandler/RailsHandler()|>>,
    <|java+method:///org/sonar/graph/FeedbackCycle/setTotalOccurrencesOfEdgesInCycle(int)|,<|java+class:///org/sonar/graph/FeedbackCycle|,|java+method:///org/sonar/graph/FeedbackCycle/setTotalOccurrencesOfEdgesInCycle(int)|>>,
    <|java+method:///org/sonar/api/batch/SonarIndex/getResource(org.sonar.api.resources.Resource)|,<|java+class:///org/sonar/api/batch/SonarIndex|,|java+method:///org/sonar/api/batch/SonarIndex/getResource(org.sonar.api.resources.Resource)|>>,
    <|java+method:///org/sonar/api/checks/CheckFactory/getCheck(org.sonar.api.rules.ActiveRule)|,<|java+class:///org/sonar/api/checks/CheckFactory|,|java+method:///org/sonar/api/checks/CheckFactory/getCheck(org.sonar.api.rules.ActiveRule)|>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileQuery/withExclusions(java.lang.String%5B%5D)|,<|java+class:///org/sonar/api/scan/filesystem/FileQuery|,|java+method:///org/sonar/api/scan/filesystem/FileQuery/withExclusions(java.lang.String%5B%5D)|>>,
    <|java+method:///org/sonar/colorizer/InlineDocTokenizer/consume(org.sonar.channel.CodeReader,org.sonar.colorizer.HtmlCodeBuilder)|,<|java+class:///org/sonar/colorizer/InlineDocTokenizer|,|java+method:///org/sonar/colorizer/InlineDocTokenizer/consume(org.sonar.channel.CodeReader,org.sonar.colorizer.HtmlCodeBuilder)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$LineCounter/newLine()|,<|java+class:///org/sonar/api/batch/fs/internal/FileMetadata$LineCounter|,|java+method:///org/sonar/api/batch/fs/internal/FileMetadata$LineCounter/newLine()|>>
  },
  renamed={
    <|java+method:///org/sonar/api/utils/Version/parseSequence(java.lang.String)|,<|java+method:///org/sonar/api/utils/Version/parseSequence(java.lang.String)|,|java+method:///org/sonar/api/utils/Version/parseFieldAsInt(java.lang.String)|>>,
    <|java+constructor:///org/sonar/api/batch/fs/internal/DefaultInputComponent/DefaultInputComponent()|,<|java+constructor:///org/sonar/api/batch/fs/internal/DefaultInputComponent/DefaultInputComponent()|,|java+constructor:///org/sonar/api/batch/fs/internal/DefaultInputComponent/DefaultInputComponent(int)|>>,
    <|java+constructor:///org/sonar/api/utils/Durations/Durations(org.sonar.api.config.Settings,org.sonar.api.i18n.I18n)|,<|java+constructor:///org/sonar/api/utils/Durations/Durations(org.sonar.api.config.Settings,org.sonar.api.i18n.I18n)|,|java+constructor:///org/sonar/api/utils/Durations/Durations()|>>,
    <|java+method:///org/sonar/api/server/rule/RulesDefinition$Context/access$500(org.sonar.api.server.rule.RulesDefinition$Context,org.sonar.api.server.rule.RulesDefinition$NewRepositoryImpl)|,<|java+method:///org/sonar/api/server/rule/RulesDefinition$Context/access$500(org.sonar.api.server.rule.RulesDefinition$Context,org.sonar.api.server.rule.RulesDefinition$NewRepositoryImpl)|,|java+method:///org/sonar/api/server/rule/RulesDefinition$Context/access$600(org.sonar.api.server.rule.RulesDefinition$Context,org.sonar.api.server.rule.RulesDefinition$NewRepositoryImpl)|>>,
    <|java+method:///org/sonar/api/server/ws/WebService$NewAction/addPageSize(int,int)|,<|java+method:///org/sonar/api/server/ws/WebService$NewAction/addPageSize(int,int)|,|java+method:///org/sonar/api/server/ws/WebService$NewAction/createPageSize(int,int)|>>,
    <|java+constructor:///org/sonar/duplications/cpd/FileCodeLoaderWithoutCache/FileCodeLoaderWithoutCache(java.io.File,java.lang.String)|,<|java+constructor:///org/sonar/duplications/cpd/FileCodeLoaderWithoutCache/FileCodeLoaderWithoutCache(java.io.File,java.lang.String)|,|java+constructor:///org/sonar/duplications/cpd/FileCodeLoaderWithoutCache/FileCodeLoaderWithoutCache(java.lang.String,java.io.Reader)|>>,
    <|java+constructor:///org/sonar/api/scan/filesystem/FileExclusions/FileExclusions(org.sonar.api.config.Settings)|,<|java+constructor:///org/sonar/api/scan/filesystem/FileExclusions/FileExclusions(org.sonar.api.config.Settings)|,|java+constructor:///org/sonar/api/scan/filesystem/FileExclusions/FileExclusions(org.sonar.api.config.Configuration)|>>,
    <|java+constructor:///org/sonar/api/Plugin$Context/Plugin$Context(org.sonar.api.utils.Version)|,<|java+constructor:///org/sonar/api/Plugin$Context/Plugin$Context(org.sonar.api.utils.Version)|,|java+constructor:///org/sonar/api/Plugin$Context/Plugin$Context(org.sonar.api.SonarRuntime)|>>,
    <|java+constructor:///org/sonar/api/utils/Version/Version(int,int,int,java.lang.String)|,<|java+constructor:///org/sonar/api/utils/Version/Version(int,int,int,java.lang.String)|,|java+constructor:///org/sonar/api/utils/Version/Version(int,int,int,long,java.lang.String)|>>,
    <|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/newRangeValidPointers(org.sonar.api.batch.fs.TextPointer,org.sonar.api.batch.fs.TextPointer)|,<|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/newRangeValidPointers(org.sonar.api.batch.fs.TextPointer,org.sonar.api.batch.fs.TextPointer)|,|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/newRangeValidPointers(org.sonar.api.batch.fs.TextPointer,org.sonar.api.batch.fs.TextPointer,boolean)|>>,
    <|java+method:///org/sonar/api/config/PropertyDefinition$Result/access$1700(java.lang.String)|,<|java+method:///org/sonar/api/config/PropertyDefinition$Result/access$1700(java.lang.String)|,|java+method:///org/sonar/api/config/PropertyDefinition$Result/access$2000(java.lang.String)|>>,
    <|java+method:///org/sonar/duplications/statement/StatementChunker$Builder/access$100(org.sonar.duplications.statement.StatementChunker$Builder)|,<|java+method:///org/sonar/duplications/statement/StatementChunker$Builder/access$100(org.sonar.duplications.statement.StatementChunker$Builder)|,|java+method:///org/sonar/duplications/statement/StatementChunker$Builder/access$000(org.sonar.duplications.statement.StatementChunker$Builder)|>>,
    <|java+method:///org/sonar/api/utils/Durations/format(java.util.Locale,int,int,int,boolean)|,<|java+method:///org/sonar/api/utils/Durations/format(java.util.Locale,int,int,int,boolean)|,|java+method:///org/sonar/api/utils/Durations/format(int,int,int,boolean)|>>,
    <|java+constructor:///org/sonar/duplications/internal/pmd/TokenizerBridge/TokenizerBridge(net.sourceforge.pmd.cpd.Tokenizer,java.lang.String,int)|,<|java+constructor:///org/sonar/duplications/internal/pmd/TokenizerBridge/TokenizerBridge(net.sourceforge.pmd.cpd.Tokenizer,java.lang.String,int)|,|java+constructor:///org/sonar/duplications/internal/pmd/TokenizerBridge/TokenizerBridge(net.sourceforge.pmd.cpd.Tokenizer,int)|>>,
    <|java+constructor:///org/sonar/api/config/EmailSettings/EmailSettings(org.sonar.api.config.Settings)|,<|java+constructor:///org/sonar/api/config/EmailSettings/EmailSettings(org.sonar.api.config.Settings)|,|java+constructor:///org/sonar/api/config/EmailSettings/EmailSettings(org.sonar.api.config.Configuration)|>>
  },
  changedAccessModifier={
    <|java+constructor:///org/sonar/api/utils/MessageException/MessageException(java.lang.String)|,<private(),protected()>>,
    <|java+constructor:///org/sonar/api/resources/File/File()|,<private(),protected()>>
  },
  moved={},
  changedParamList={},
  changedReturnType={},
  changedFinalModifier={
    <|java+method:///org/sonar/api/resources/Method/equals(java.lang.Object)|,<final(),default()>>,
    <|java+method:///org/sonar/api/checks/CheckFactory/getActiveRule(java.lang.Object)|,<final(),default()>>,
    <|java+method:///org/sonar/api/checks/CheckFactory/getRepositoryKey()|,<final(),default()>>,
    <|java+method:///org/sonar/api/resources/Method/hashCode()|,<final(),default()>>,
    <|java+method:///org/sonar/api/resources/Method/getLanguage()|,<final(),default()>>,
    <|java+method:///org/sonar/api/resources/Method/getScope()|,<final(),default()>>,
    <|java+method:///org/sonar/api/web/CodeColorizerFormat/getLanguageKey()|,<final(),default()>>,
    <|java+method:///org/sonar/api/resources/Method/matchFilePattern(java.lang.String)|,<final(),default()>>,
    <|java+method:///org/sonar/api/checks/CheckFactory/getCheck(org.sonar.api.rules.ActiveRule)|,<final(),default()>>,
    <|java+method:///org/sonar/api/resources/Method/getQualifier()|,<final(),default()>>,
    <|java+method:///org/sonar/api/checks/CheckFactory/getChecks()|,<final(),default()>>,
    <|java+method:///org/sonar/colorizer/TokenizerDispatcher/colorize(java.lang.String)|,<final(),default()>>,
    <|java+method:///org/sonar/colorizer/TokenizerDispatcher/colorize(org.sonar.channel.CodeReader,org.sonar.colorizer.HtmlCodeBuilder)|,<final(),default()>>
  },
  changedStaticModifier={
    <|java+method:///org/sonar/api/utils/DateUtils/parseStartingDateOrDateTime(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/ce/measure/test/TestMeasureComputerDefinition$MeasureComputerDefinitionBuilderImpl/lambda$validateOutputMetricKeys$0(java.util.List,java.lang.String)|,<default(),static()>>,
    <|java+initializer:///org/sonar/colorizer/JavaAnnotationTokenizer/JavaAnnotationTokenizer$initializer|,<static(),default()>>,
    <|java+method:///org/sonar/api/rules/RuleType$ToName/valueOf(java.lang.String)|,<static(),default()>>,
    <|java+method:///org/sonar/api/resources/File/parseKey(java.lang.String)|,<static(),default()>>,
    <|java+method:///org/sonar/api/utils/DateUtils/parseDateOrDateTime(java.lang.String)|,<default(),static()>>,
    <|java+initializer:///org/sonar/api/server/authentication/UserIdentity$ValidateGroupName/UserIdentity$ValidateGroupName$initializer|,<static(),default()>>,
    <|java+method:///org/sonar/api/web/ServletFilter$UrlPattern$Builder/lambda$includes$0(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/batch/SquidUtils/unsupported()|,<static(),default()>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$AnalysisBuilder/access$3300(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$AnalysisBuilder)|,<default(),static()>>,
    <|java+method:///org/sonar/api/server/profile/BuiltInQualityProfilesDefinition$Context/access$300(org.sonar.api.server.profile.BuiltInQualityProfilesDefinition$Context,org.sonar.api.server.profile.BuiltInQualityProfilesDefinition$NewBuiltInQualityProfileImpl)|,<default(),static()>>,
    <|java+initializer:///org/sonar/api/resources/Java/Java$initializer|,<static(),default()>>,
    <|java+method:///org/sonar/colorizer/CodeColorizer$Format/values()|,<static(),default()>>,
    <|java+method:///org/sonar/api/server/ws/RailsHandler/addFormatParam(org.sonar.api.server.ws.WebService$NewAction)|,<static(),default()>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$AnalysisBuilder/access$3200(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$AnalysisBuilder)|,<default(),static()>>,
    <|java+initializer:///org/sonar/api/resources/Project$AnalysisType/Project$AnalysisType$initializer|,<static(),default()>>,
    <|java+method:///org/sonar/api/batch/sensor/internal/SensorContextTester/lambda$conditions$1(int,org.sonar.api.batch.sensor.coverage.internal.DefaultCoverage)|,<default(),static()>>,
    <|java+method:///org/sonar/api/resources/Project/createFromMavenIds(java.lang.String,java.lang.String)|,<static(),default()>>,
    <|java+method:///org/sonar/api/server/ws/internal/ValidatingRequest/validate(java.lang.String,org.sonar.api.server.ws.WebService$Param)|,<static(),default()>>,
    <|java+method:///org/sonar/api/batch/sensor/highlighting/internal/DefaultHighlighting/lambda$doSave$0(org.sonar.api.batch.sensor.highlighting.internal.SyntaxHighlightingRule,org.sonar.api.batch.sensor.highlighting.internal.SyntaxHighlightingRule)|,<default(),static()>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileType/valueOf(java.lang.String)|,<static(),default()>>,
    <|java+method:///org/sonar/api/batch/sensor/issue/internal/DefaultIssue/lambda$flows$1(java.util.List)|,<default(),static()>>,
    <|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/access$800(org.sonar.api.server.rule.RulesDefinition$NewRule)|,<static(),default()>>,
    <|java+method:///org/sonar/duplications/detector/suffixtree/Search/lambda$static$0(org.sonar.duplications.detector.suffixtree.Node,org.sonar.duplications.detector.suffixtree.Node)|,<default(),static()>>,
    <|java+method:///org/sonar/api/utils/ZipUtils/unzip(java.io.InputStream,java.io.File,java.util.function.Predicate)|,<default(),static()>>,
    <|java+method:///org/sonar/api/config/Settings/createForComponent(java.lang.Object)|,<static(),default()>>,
    <|java+method:///org/sonar/api/utils/DateUtils/parseOffsetDateTime(java.lang.String)|,<default(),static()>>,
    <|java+initializer:///org/sonar/api/server/ws/Request$AbsentStringParam/Request$AbsentStringParam$initializer|,<default(),static()>>,
    <|java+initializer:///org/sonar/api/ce/measure/test/TestMeasureComputerDefinition$MetricToKey/TestMeasureComputerDefinition$MetricToKey$initializer|,<static(),default()>>,
    <|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRepositoryImpl/access$800(org.sonar.api.server.rule.RulesDefinition$NewRepositoryImpl)|,<default(),static()>>,
    <|java+method:///org/sonar/api/server/ws/internal/ValidatingRequest/validateValue(java.lang.String,org.sonar.api.server.ws.WebService$Param)|,<default(),static()>>,
    <|java+method:///org/sonar/colorizer/JavaTokenizers/forHtml()|,<static(),default()>>,
    <|java+method:///org/sonar/api/config/PropertyDefinition/validateBoolean(java.lang.String)|,<static(),default()>>,
    <|java+method:///org/sonar/duplications/index/MemoryCloneIndex/lambda$getByResourceId$0(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester/access$700(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester)|,<static(),default()>>,
    <|java+method:///org/sonar/graph/FeedbackCycle/createBagWithAllEdgesOfCycles(java.util.Set)|,<static(),default()>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester/newScannerContextBuilder()|,<default(),static()>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata/read(java.io.Reader,org.sonar.api.batch.fs.internal.charhandler.CharHandler%5B%5D)|,<default(),static()>>,
    <|java+method:///org/sonar/api/ce/posttask/Branch$Type/valueOf(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata/readFile(java.io.File,java.nio.charset.Charset,org.sonar.api.batch.fs.internal.FileMetadata$CharHandler%5B%5D)|,<static(),default()>>,
    <|java+method:///org/sonar/api/config/PropertyDefinition$Builder/addQualifiers(java.util.List,java.util.List)|,<default(),static()>>,
    <|java+method:///org/sonar/api/resources/Java/isJavaFile(java.io.File)|,<static(),default()>>,
    <|java+method:///org/sonar/api/checks/AnnotationCheckFactory/getField(java.lang.Object,java.lang.String)|,<static(),default()>>,
    <|java+method:///org/sonar/api/web/ServletFilter$UrlPattern$Builder/staticResourcePatterns()|,<default(),static()>>,
    <|java+method:///org/sonar/graph/DsmPrinter/print(java.io.Writer,org.sonar.graph.Dsm,boolean)|,<static(),default()>>,
    <|java+initializer:///org/sonar/api/server/ws/RailsHandler/RailsHandler$initializer|,<static(),default()>>,
    <|java+method:///org/sonar/api/profiles/RulesProfile/lambda$activateRule$0(org.sonar.api.rules.Rule,org.sonar.api.rules.ActiveRule)|,<default(),static()>>,
    <|java+method:///org/sonar/api/resources/Method/createMethod(java.lang.String,org.sonar.api.resources.Language)|,<static(),default()>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester/access$600(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester)|,<static(),default()>>,
    <|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRepositoryImpl/access$600(org.sonar.api.server.rule.RulesDefinition$NewRepositoryImpl)|,<static(),default()>>,
    <|java+initializer:///org/sonar/api/server/ws/Request$AbsentParam/Request$AbsentParam$initializer|,<default(),static()>>,
    <|java+method:///org/sonar/api/checks/AnnotationCheckFactory/create(org.sonar.api.profiles.RulesProfile,java.lang.String,java.util.Collection)|,<static(),default()>>,
    <|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/newRangeValidPointers(org.sonar.api.batch.fs.TextPointer,org.sonar.api.batch.fs.TextPointer)|,<static(),default()>>,
    <|java+method:///org/sonar/api/config/PropertyDefinition$Result/access$1700(java.lang.String)|,<static(),default()>>,
    <|java+method:///org/sonar/api/config/PropertyDefinition/lambda$createValidations$1(java.util.List,java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/batch/fs/internal/TestInputFileBuilder/nextBatchId()|,<default(),static()>>,
    <|java+method:///org/sonar/api/SonarQubeSide/valueOf(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/resources/Project$AnalysisType/valueOf(java.lang.String)|,<static(),default()>>,
    <|java+method:///org/sonar/api/server/ws/internal/ValidatingRequest/lambda$validateValues$1(org.sonar.api.server.ws.WebService$Param,java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester/access$500(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester)|,<static(),default()>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileExclusions/lambda$inclusions$0(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/server/ws/WebService$SelectionMode/lambda$static$0(org.sonar.api.server.ws.WebService$SelectionMode)|,<default(),static()>>,
    <|java+method:///org/sonar/api/batch/rule/internal/DefaultActiveRules/lambda$new$0(java.lang.String)|,<default(),static()>>,
    <|java+initializer:///org/sonar/api/utils/ZipUtils$TrueZipEntryFilter/ZipUtils$TrueZipEntryFilter$initializer|,<static(),default()>>,
    <|java+method:///org/sonar/api/resources/Qualifiers/isPackage(org.sonar.api.resources.Resource)|,<static(),default()>>,
    <|java+method:///org/sonar/api/batch/fs/internal/DefaultInputModule/initWorkingDir(org.sonar.api.batch.bootstrap.ProjectDefinition)|,<default(),static()>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileExclusions/lambda$inclusions$1(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/batch/sensor/internal/SensorContextTester/sumOrNull(java.lang.Integer,java.lang.Integer)|,<default(),static()>>,
    <|java+method:///org/sonar/api/batch/rule/internal/DefaultActiveRules/lambda$new$1(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/server/rule/RulesDefinition$Context/access$400(org.sonar.api.server.rule.RulesDefinition$Context)|,<default(),static()>>,
    <|java+initializer:///org/sonar/api/batch/fs/internal/FileMetadata/FileMetadata$initializer|,<static(),default()>>,
    <|java+method:///org/sonar/api/server/ws/WebService$SelectionMode/lambda$static$1(org.sonar.api.server.ws.WebService$SelectionMode)|,<default(),static()>>,
    <|java+initializer:///org/sonar/api/batch/fs/internal/TestInputFileBuilder/TestInputFileBuilder$initializer|,<default(),static()>>,
    <|java+method:///org/sonar/api/SonarProduct/valueOf(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/web/page/Page$Builder/access$400(org.sonar.api.web.page.Page$Builder)|,<default(),static()>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester/access$400(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester)|,<static(),default()>>,
    <|java+method:///org/sonar/api/server/ws/Request/access$100(java.util.function.Supplier)|,<default(),static()>>,
    <|java+method:///org/sonar/api/utils/DateUtils/parseEndingDateOrDateTime(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/resources/InputFileUtils/getRelativePath(java.io.File,java.io.File)|,<static(),default()>>,
    <|java+method:///org/sonar/api/server/ws/Request$AbsentStringParam/absent()|,<default(),static()>>,
    <|java+method:///org/sonar/api/resources/InputFileUtils/create(java.io.File,java.lang.String)|,<static(),default()>>,
    <|java+method:///org/sonar/api/web/page/Page$Builder/access$300(org.sonar.api.web.page.Page$Builder)|,<default(),static()>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileQuery/on(org.sonar.api.scan.filesystem.FileType%5B%5D)|,<static(),default()>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$BranchBuilder/access$1500(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$BranchBuilder)|,<default(),static()>>,
    <|java+method:///org/sonar/api/web/page/Page$Builder/access$200(org.sonar.api.web.page.Page$Builder)|,<default(),static()>>,
    <|java+method:///org/sonar/api/user/UserQuery$Builder/access$300(org.sonar.api.user.UserQuery$Builder)|,<default(),static()>>,
    <|java+method:///org/sonar/api/web/Filter/create()|,<static(),default()>>,
    <|java+method:///org/sonar/api/resources/JavaFile/fromAbsolutePath(java.lang.String,java.util.List,boolean)|,<static(),default()>>,
    <|java+method:///org/sonar/api/batch/fs/internal/DefaultInputFile/newRangeValidPointers(org.sonar.api.batch.fs.TextPointer,org.sonar.api.batch.fs.TextPointer,boolean)|,<default(),static()>>,
    <|java+initializer:///org/sonar/api/ce/posttask/Branch$Type/Branch$Type$initializer|,<default(),static()>>,
    <|java+method:///org/sonar/api/resources/ResourceTypes/lambda$getAllWithPropertyKey$1(java.lang.String,org.sonar.api.resources.ResourceType)|,<default(),static()>>,
    <|java+method:///org/sonar/api/web/page/Page$Scope/valueOf(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/graph/DsmTopologicalSorter/sort(org.sonar.graph.Dsm)|,<static(),default()>>,
    <|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/create(java.util.Properties)|,<static(),default()>>,
    <|java+method:///org/sonar/api/config/PropertyDefinition/validateBoolean()|,<default(),static()>>,
    <|java+method:///org/sonar/api/resources/ResourceUtils/isClass(org.sonar.api.resources.Resource)|,<static(),default()>>,
    <|java+method:///org/sonar/api/utils/DateUtils/truncateToSeconds(long)|,<default(),static()>>,
    <|java+method:///org/sonar/api/resources/ResourceTypes/access$000(org.sonar.api.resources.ResourceTypes)|,<static(),default()>>,
    <|java+method:///org/sonar/api/web/page/Page$Builder/access$100(org.sonar.api.web.page.Page$Builder)|,<default(),static()>>,
    <|java+method:///org/sonar/api/profiles/RulesProfile/lambda$clone$1(org.sonar.api.rules.ActiveRule)|,<default(),static()>>,
    <|java+method:///org/sonar/api/server/profile/BuiltInQualityProfilesDefinition$NewOverriddenParam/access$900(org.sonar.api.server.profile.BuiltInQualityProfilesDefinition$NewOverriddenParam)|,<default(),static()>>,
    <|java+method:///org/sonar/api/config/PropertyDefinition$Result/access$1700()|,<default(),static()>>,
    <|java+method:///org/sonar/api/config/EmailSettings/definitions()|,<default(),static()>>,
    <|java+method:///org/sonar/api/checks/AnnotationCheckFactory/instantiate(org.sonar.api.rules.ActiveRule,java.lang.Object)|,<static(),default()>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$BranchBuilder/access$1400(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$BranchBuilder)|,<default(),static()>>,
    <|java+method:///org/sonar/colorizer/MultilinesDocTokenizer/access$000(org.sonar.colorizer.MultilinesDocTokenizer)|,<static(),default()>>,
    <|java+method:///org/sonar/api/utils/ZipUtils/lambda$unzip$0(java.util.zip.ZipEntry)|,<default(),static()>>,
    <|java+method:///org/sonar/api/utils/Version/parseSequence(java.lang.String)|,<static(),default()>>,
    <|java+method:///org/sonar/api/resources/ResourceTypeTree/access$300(org.sonar.api.resources.ResourceTypeTree)|,<static(),default()>>,
    <|java+method:///org/sonar/api/utils/Durations/format(int,int,int,boolean)|,<default(),static()>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$BranchBuilder/access$1300(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$BranchBuilder)|,<default(),static()>>,
    <|java+method:///org/sonar/api/web/ServletFilter$UrlPattern/lambda$new$2(int)|,<default(),static()>>,
    <|java+method:///org/sonar/api/web/page/Page$Builder/access$000(org.sonar.api.web.page.Page$Builder)|,<default(),static()>>,
    <|java+method:///org/sonar/api/utils/ZipUtils$TrueZipEntryFilter/values()|,<static(),default()>>,
    <|java+method:///org/sonar/api/batch/sensor/internal/DefaultSensorDescriptor/lambda$requireProperties$0(java.lang.String%5B%5D,org.sonar.api.config.Configuration)|,<default(),static()>>,
    <|java+method:///org/sonar/api/config/PropertyDefinition$Result/access$1800()|,<static(),default()>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileExtensionPredicate/getExtension(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata/read(java.io.Reader,org.sonar.api.batch.fs.internal.FileMetadata$CharHandler%5B%5D)|,<static(),default()>>,
    <|java+method:///org/sonar/api/batch/fs/internal/TestInputFileBuilder/create(java.lang.String,java.io.File,java.io.File)|,<default(),static()>>,
    <|java+method:///org/sonar/api/resources/ResourceTypes/orderedTypes(java.util.Map)|,<default(),static()>>,
    <|java+method:///org/sonar/colorizer/CodeColorizer/groovyToHtml(java.io.Reader,org.sonar.colorizer.HtmlOptions)|,<static(),default()>>,
    <|java+method:///org/sonar/duplications/detector/suffixtree/SuffixTreeCloneDetectionAlgorithm/lambda$static$0(org.sonar.duplications.block.Block,org.sonar.duplications.block.Block)|,<default(),static()>>,
    <|java+method:///org/sonar/api/resources/InputFileUtils/toFiles(java.util.Collection)|,<static(),default()>>,
    <|java+initializer:///org/sonar/api/SonarProduct/SonarProduct$initializer|,<default(),static()>>,
    <|java+method:///org/sonar/api/web/page/Page/builder(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata/computeLineHashesForIssueTracking(org.sonar.api.batch.fs.internal.DefaultInputFile,org.sonar.api.batch.fs.internal.FileMetadata$LineHashConsumer)|,<static(),default()>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$ProjectAnalysisBuilder/access$3000(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$ProjectAnalysisBuilder)|,<default(),static()>>,
    <|java+method:///org/sonar/api/utils/ZipUtils/lambda$unzip$1(java.util.zip.ZipEntry)|,<default(),static()>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileExclusions/lambda$inclusions$2(int)|,<default(),static()>>,
    <|java+method:///org/sonar/colorizer/MultilinesDocTokenizer/access$100(org.sonar.colorizer.MultilinesDocTokenizer)|,<static(),default()>>,
    <|java+method:///org/sonar/api/batch/fs/internal/TestInputFileBuilder/create(java.lang.String,java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/graph/DsmScanner/scan(java.lang.String)|,<static(),default()>>,
    <|java+initializer:///org/sonar/api/batch/fs/internal/charhandler/IntArrayList/IntArrayList$initializer|,<default(),static()>>,
    <|java+method:///org/sonar/api/utils/DateUtils/parseOffsetDateTimeQuietly(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/utils/Version/parseFieldAsLong(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/web/ServletFilter$UrlPattern/lambda$new$1(int)|,<default(),static()>>,
    <|java+method:///org/sonar/api/web/page/Page$Qualifier/fromKey(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/server/ws/Request$AbsentStringParam/valueOf(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/duplications/internal/pmd/TokenizerBridge/addNewTokensLine(java.util.List,int,int,int,java.lang.StringBuilder)|,<default(),static()>>,
    <|java+method:///org/sonar/duplications/statement/StatementChunker$Builder/access$100(org.sonar.duplications.statement.StatementChunker$Builder)|,<static(),default()>>,
    <|java+method:///org/sonar/api/server/ws/WebService$NewAction/access$2000(org.sonar.api.server.ws.WebService$NewAction)|,<default(),static()>>,
    <|java+method:///org/sonar/api/server/rule/RulesDefinition$NewParam/access$3100(org.sonar.api.server.rule.RulesDefinition$NewParam)|,<default(),static()>>,
    <|java+method:///org/sonar/api/utils/Version/parseFieldAsInt(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileQuery/onTest()|,<static(),default()>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$ProjectAnalysisBuilder/access$3100(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$ProjectAnalysisBuilder)|,<default(),static()>>,
    <|java+method:///org/sonar/api/server/profile/BuiltInQualityProfilesDefinition$NewBuiltInActiveRule/access$400(org.sonar.api.server.profile.BuiltInQualityProfilesDefinition$NewBuiltInActiveRule)|,<default(),static()>>,
    <|java+method:///org/sonar/api/server/profile/BuiltInQualityProfilesDefinition$NewOverriddenParam/access$1100(org.sonar.api.server.profile.BuiltInQualityProfilesDefinition$NewOverriddenParam)|,<default(),static()>>,
    <|java+method:///org/sonar/api/ce/measure/test/TestMeasureComputerDefinition$MetricToKey/values()|,<static(),default()>>,
    <|java+method:///org/sonar/colorizer/JavaConstantTokenizer/isJavaConstantStart(int)|,<static(),default()>>,
    <|java+method:///org/sonar/api/profiles/RulesProfile$CloneFunction/valueOf(java.lang.String)|,<static(),default()>>,
    <|java+method:///org/sonar/api/utils/ZipUtils/unzip(java.io.File,java.io.File,java.util.function.Predicate)|,<default(),static()>>,
    <|java+method:///org/sonar/api/server/profile/BuiltInQualityProfilesDefinition$NewBuiltInActiveRule/access$500(org.sonar.api.server.profile.BuiltInQualityProfilesDefinition$NewBuiltInActiveRule)|,<default(),static()>>,
    <|java+method:///org/sonar/api/batch/sensor/internal/SensorContextTester/maxOrNull(java.lang.Integer,java.lang.Integer)|,<default(),static()>>,
    <|java+method:///org/sonar/api/server/ws/WebService$SelectionMode/access$2100(org.sonar.api.server.ws.WebService$SelectionMode)|,<static(),default()>>,
    <|java+method:///org/sonar/api/server/ws/RailsHandler/addJsonOnlyFormatParam(org.sonar.api.server.ws.WebService$NewAction)|,<static(),default()>>,
    <|java+method:///org/sonar/api/server/rule/RulesDefinition$NewParam/access$3200(org.sonar.api.server.rule.RulesDefinition$NewParam)|,<default(),static()>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileExtensionPredicate/getExtension(org.sonar.api.batch.fs.InputFile)|,<default(),static()>>,
    <|java+method:///org/sonar/api/batch/SquidUtils/convertToSquidKeyFormat(org.sonar.api.resources.JavaFile)|,<static(),default()>>,
    <|java+method:///org/sonar/api/server/ws/Request/createGetValueISE()|,<default(),static()>>,
    <|java+method:///org/sonar/duplications/internal/pmd/TokenizerBridge/addNewTokensLine(org.sonar.api.internal.google.common.collect.ImmutableList$Builder,int,int,int,java.lang.StringBuilder)|,<static(),default()>>,
    <|java+method:///org/sonar/duplications/statement/StatementChunker$Builder/access$000(org.sonar.duplications.statement.StatementChunker$Builder)|,<default(),static()>>,
    <|java+method:///org/sonar/api/resources/InputFileUtils/create(java.io.File,java.util.Collection)|,<static(),default()>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$ConditionBuilder/access$2200(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$ConditionBuilder)|,<default(),static()>>,
    <|java+method:///org/sonar/api/resources/Qualifiers/isParagraph(org.sonar.api.resources.Resource)|,<static(),default()>>,
    <|java+method:///org/sonar/api/batch/fs/internal/AndPredicate/lambda$operands$0(org.sonar.api.batch.fs.internal.OptimizedFilePredicate)|,<default(),static()>>,
    <|java+method:///org/sonar/colorizer/GroovyTokenizers/forHtml()|,<static(),default()>>,
    <|java+method:///org/sonar/graph/FeedbackCycle/buildFeedbackCycles(java.util.Set)|,<static(),default()>>,
    <|java+method:///org/sonar/api/batch/sensor/internal/SensorContextTester/lambda$coveredConditions$2(int,org.sonar.api.batch.sensor.coverage.internal.DefaultCoverage)|,<default(),static()>>,
    <|java+method:///org/sonar/api/server/rule/RulesDefinition$NewParam/access$3300(org.sonar.api.server.rule.RulesDefinition$NewParam)|,<default(),static()>>,
    <|java+method:///org/sonar/api/utils/internal/AlwaysIncreasingSystem2/randomInitialValue()|,<default(),static()>>,
    <|java+method:///org/sonar/api/batch/sensor/symbol/internal/DefaultSymbolTable/lambda$newSymbol$0(org.sonar.api.batch.fs.TextRange,org.sonar.api.batch.fs.TextRange)|,<default(),static()>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileExclusions/sanitize(java.lang.String%5B%5D)|,<static(),default()>>,
    <|java+initializer:///org/sonar/api/server/profile/BuiltInQualityProfilesDefinition$BuiltInQualityProfileImpl/BuiltInQualityProfilesDefinition$BuiltInQualityProfileImpl$initializer|,<default(),static()>>,
    <|java+initializer:///org/sonar/api/SonarQubeSide/SonarQubeSide$initializer|,<default(),static()>>,
    <|java+method:///org/sonar/api/resources/File/fromIOFile(java.io.File,java.util.List)|,<static(),default()>>,
    <|java+method:///org/sonar/api/server/profile/BuiltInQualityProfilesDefinition$Context/lambda$registerProfile$0(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/profiles/RulesProfile$CloneFunction/values()|,<static(),default()>>,
    <|java+method:///org/sonar/api/ce/measure/test/TestMeasureComputerDefinition$MetricToKey/valueOf(java.lang.String)|,<static(),default()>>,
    <|java+method:///org/sonar/api/batch/fs/internal/TestInputFileBuilder/newDefaultInputModule(java.lang.String,java.io.File)|,<default(),static()>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$ConditionBuilder/access$2300(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$ConditionBuilder)|,<default(),static()>>,
    <|java+method:///org/sonar/graph/DsmManualSorter/sort(org.sonar.graph.Dsm,java.util.List)|,<static(),default()>>,
    <|java+initializer:///org/sonar/api/web/ServletFilter$UrlPattern$Builder/ServletFilter$UrlPattern$Builder$initializer|,<default(),static()>>,
    <|java+method:///org/sonar/api/config/PropertyDefinition/lambda$validate$0(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/colorizer/MultilinesDocTokenizer/access$300(org.sonar.colorizer.MultilinesDocTokenizer,org.sonar.colorizer.HtmlCodeBuilder,java.lang.Boolean)|,<static(),default()>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$QualityGateBuilder/access$1300(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$QualityGateBuilder)|,<static(),default()>>,
    <|java+method:///org/sonar/api/resources/JavaPackage/unsupported()|,<static(),default()>>,
    <|java+method:///org/sonar/api/rules/ActiveRule/lambda$clone$0(org.sonar.api.rules.ActiveRule,org.sonar.api.rules.ActiveRuleParam)|,<default(),static()>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$ConditionBuilder/access$2400(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$ConditionBuilder)|,<default(),static()>>,
    <|java+initializer:///org/sonar/api/server/ws/internal/ValidatingRequest/ValidatingRequest$initializer|,<default(),static()>>,
    <|java+method:///org/sonar/api/server/rule/RulesDefinition$Context/access$600(org.sonar.api.server.rule.RulesDefinition$Context,org.sonar.api.server.rule.RulesDefinition$NewRepositoryImpl)|,<default(),static()>>,
    <|java+method:///org/sonar/api/resources/ResourceTypes/lambda$getAllWithPropertyValue$3(java.lang.String,boolean,org.sonar.api.resources.ResourceType)|,<default(),static()>>,
    <|java+method:///org/sonar/api/server/profile/BuiltInQualityProfilesDefinition$NewBuiltInActiveRule/access$800(org.sonar.api.server.profile.BuiltInQualityProfilesDefinition$NewBuiltInActiveRule)|,<default(),static()>>,
    <|java+method:///org/sonar/api/server/ws/Request$AbsentStringParam/values()|,<default(),static()>>,
    <|java+initializer:///org/sonar/api/web/FilterColumn/FilterColumn$initializer|,<static(),default()>>,
    <|java+method:///org/sonar/api/web/ServletFilter$UrlPattern$Builder/lambda$compile$3(java.lang.String,java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/utils/DateUtils/parseLocalDate(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/utils/ZipUtils$TrueZipEntryFilter/valueOf(java.lang.String)|,<static(),default()>>,
    <|java+method:///org/sonar/api/utils/internal/AlwaysIncreasingSystem2/lambda$new$0(long)|,<default(),static()>>,
    <|java+method:///org/sonar/graph/DsmPrinter/print(org.sonar.graph.Dsm)|,<static(),default()>>,
    <|java+method:///org/sonar/api/server/ws/Request$GenericParam/present(java.lang.Object)|,<default(),static()>>,
    <|java+method:///org/sonar/api/measures/CoreMetrics/lambda$getMetric$0(java.lang.String,org.sonar.api.measures.Metric)|,<default(),static()>>,
    <|java+method:///org/sonar/api/resources/JavaFile/fromRelativePath(java.lang.String,boolean)|,<static(),default()>>,
    <|java+method:///org/sonar/api/web/ServletFilter$UrlPattern$Builder/lambda$compile$2(java.lang.String,java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/graph/DsmScanner/scan(java.io.Reader)|,<static(),default()>>,
    <|java+method:///org/sonar/api/utils/DateUtils$ThreadSafeDateFormat/access$000(org.sonar.api.utils.DateUtils$ThreadSafeDateFormat)|,<static(),default()>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$QualityGateBuilder/access$1400(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$QualityGateBuilder)|,<static(),default()>>,
    <|java+method:///org/sonar/api/resources/ProjectUtils/toIoFiles(java.util.Collection)|,<static(),default()>>,
    <|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/access$2900(org.sonar.api.server.rule.RulesDefinition$NewRule)|,<default(),static()>>,
    <|java+method:///org/sonar/api/server/rule/RulesDefinition$Context/access$500(org.sonar.api.server.rule.RulesDefinition$Context,org.sonar.api.server.rule.RulesDefinition$NewRepositoryImpl)|,<static(),default()>>,
    <|java+method:///org/sonar/api/web/FilterColumn/create(java.lang.String,java.lang.String,java.lang.String,boolean)|,<static(),default()>>,
    <|java+method:///org/sonar/api/batch/sensor/cpd/internal/DefaultCpdTokens/addNewTokensLine(java.util.List,int,int,int,java.lang.StringBuilder)|,<default(),static()>>,
    <|java+method:///org/sonar/api/server/rule/RulesDefinition$NewParam/access$2500(org.sonar.api.server.rule.RulesDefinition$NewParam)|,<static(),default()>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$ProjectAnalysisBuilder/access$2500(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$ProjectAnalysisBuilder)|,<default(),static()>>,
    <|java+initializer:///org/sonar/colorizer/GroovyKeywords/GroovyKeywords$initializer|,<static(),default()>>,
    <|java+initializer:///org/sonar/colorizer/CodeColorizer$Format/CodeColorizer$Format$initializer|,<static(),default()>>,
    <|java+initializer:///org/sonar/colorizer/JavaKeywords/JavaKeywords$initializer|,<static(),default()>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$QualityGateBuilder/access$1500(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$QualityGateBuilder)|,<static(),default()>>,
    <|java+method:///org/sonar/api/resources/File/fromIOFile(java.io.File,org.sonar.api.resources.Project)|,<static(),default()>>,
    <|java+method:///org/sonar/api/web/ServletFilter$UrlPattern$Builder/lambda$compile$1(java.lang.String,java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/colorizer/JavaKeywords/get()|,<static(),default()>>,
    <|java+method:///org/sonar/api/batch/sensor/cpd/internal/DefaultCpdTokens/addNewTokensLine(org.sonar.api.internal.google.common.collect.ImmutableList$Builder,int,int,int,java.lang.StringBuilder)|,<static(),default()>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester/newBranchBuilder()|,<default(),static()>>,
    <|java+initializer:///org/sonar/colorizer/JavaTokenizers/JavaTokenizers$initializer|,<static(),default()>>,
    <|java+initializer:///org/sonar/colorizer/InlineDocTokenizer/InlineDocTokenizer$initializer|,<static(),default()>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$ProjectAnalysisBuilder/access$2600(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$ProjectAnalysisBuilder)|,<default(),static()>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileQuery/onMain()|,<static(),default()>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata/readFile(java.io.InputStream,java.nio.charset.Charset,java.lang.String,org.sonar.api.batch.fs.internal.charhandler.CharHandler%5B%5D)|,<default(),static()>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$ProjectAnalysisBuilder/access$2700(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$ProjectAnalysisBuilder)|,<default(),static()>>,
    <|java+method:///org/sonar/api/web/page/Page$Scope/values()|,<default(),static()>>,
    <|java+method:///org/sonar/api/web/ServletFilter$UrlPattern$Builder/access$000(org.sonar.api.web.ServletFilter$UrlPattern$Builder)|,<default(),static()>>,
    <|java+method:///org/sonar/api/server/profile/BuiltInQualityProfilesDefinition$Context/lambda$profile$1(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/duplications/index/MemoryCloneIndex/lambda$getBySequenceHash$1(org.sonar.duplications.block.ByteArray)|,<default(),static()>>,
    <|java+method:///org/sonar/api/config/PropertyDefinition/lambda$validateFloat$4(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$ProjectAnalysisBuilder/access$2800(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$ProjectAnalysisBuilder)|,<default(),static()>>,
    <|java+method:///org/sonar/api/resources/JavaFile/unsupported()|,<static(),default()>>,
    <|java+method:///org/sonar/api/resources/JavaFile/fromIOFile(java.io.File,org.sonar.api.resources.Project,boolean)|,<static(),default()>>,
    <|java+method:///org/sonar/api/web/ServletFilter$UrlPattern$Builder/access$100(org.sonar.api.web.ServletFilter$UrlPattern$Builder)|,<default(),static()>>,
    <|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/access$2600(org.sonar.api.server.rule.RulesDefinition$NewRule)|,<default(),static()>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$QualityGateBuilder/access$1700(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$QualityGateBuilder)|,<default(),static()>>,
    <|java+method:///org/sonar/api/resources/Project/createFromMavenIds(java.lang.String,java.lang.String,java.lang.String)|,<static(),default()>>,
    <|java+method:///org/sonar/graph/DirectedGraph/createStringDirectedGraph()|,<static(),default()>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$ConditionBuilder/access$1700(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$ConditionBuilder)|,<static(),default()>>,
    <|java+initializer:///org/sonar/api/config/PropertyDefinition/PropertyDefinition$initializer|,<default(),static()>>,
    <|java+method:///org/sonar/api/checks/AnnotationCheckFactory/configureFields(org.sonar.api.rules.ActiveRule,java.lang.Object)|,<static(),default()>>,
    <|java+method:///org/sonar/api/resources/InputFileUtils/create(java.io.File,java.io.File)|,<static(),default()>>,
    <|java+method:///org/sonar/api/server/rule/RulesDefinition$NewParam/access$2800(org.sonar.api.server.rule.RulesDefinition$NewParam)|,<static(),default()>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$QualityGateBuilder/access$1800(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$QualityGateBuilder)|,<default(),static()>>,
    <|java+method:///org/sonar/api/server/rule/RulesDefinition$NewParam/access$2900(org.sonar.api.server.rule.RulesDefinition$NewParam)|,<static(),default()>>,
    <|java+method:///org/sonar/graph/DsmPrinter/print(org.sonar.graph.Dsm,boolean)|,<static(),default()>>,
    <|java+method:///org/sonar/api/SonarProduct/values()|,<default(),static()>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$ProjectAnalysisBuilder/access$2900(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$ProjectAnalysisBuilder)|,<default(),static()>>,
    <|java+method:///org/sonar/api/web/ServletFilter$UrlPattern$Builder/access$200(org.sonar.api.web.ServletFilter$UrlPattern$Builder)|,<default(),static()>>,
    <|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/access$2500(org.sonar.api.server.rule.RulesDefinition$NewRule)|,<default(),static()>>,
    <|java+initializer:///org/sonar/api/resources/Project/Project$initializer|,<static(),default()>>,
    <|java+method:///org/sonar/api/resources/JavaFile/fromIOFile(java.io.File,java.util.List,boolean)|,<static(),default()>>,
    <|java+method:///org/sonar/api/web/ServletFilter$UrlPattern/builder()|,<default(),static()>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$ConditionBuilder/access$1800(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$ConditionBuilder)|,<static(),default()>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileQuery/onSource()|,<static(),default()>>,
    <|java+method:///org/sonar/api/resources/ResourceType$Builder/access$000(org.sonar.api.resources.ResourceType$Builder)|,<default(),static()>>,
    <|java+method:///org/sonar/api/web/page/Page$Qualifier/lambda$fromKey$0(java.lang.String,org.sonar.api.web.page.Page$Qualifier)|,<default(),static()>>,
    <|java+method:///org/sonar/api/config/PropertyDefinition/lambda$validateInteger$3(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$ConditionBuilder/access$1900(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$ConditionBuilder)|,<static(),default()>>,
    <|java+method:///org/sonar/api/resources/Project$AnalysisType/values()|,<static(),default()>>,
    <|java+method:///org/sonar/api/ce/posttask/PostProjectAnalysisTaskTester$QualityGateBuilder/access$1900(org.sonar.api.ce.posttask.PostProjectAnalysisTaskTester$QualityGateBuilder)|,<default(),static()>>,
    <|java+initializer:///org/sonar/colorizer/JavaConstantTokenizer/JavaConstantTokenizer$initializer|,<static(),default()>>,
    <|java+method:///org/sonar/api/web/ServletFilter$UrlPattern$Builder/access$300(org.sonar.api.web.ServletFilter$UrlPattern$Builder)|,<default(),static()>>,
    <|java+method:///org/sonar/api/server/ws/Request$AbsentParam/absent()|,<default(),static()>>,
    <|java+method:///org/sonar/api/resources/ResourceTypes/lambda$getAllWithPropertyValue$2(java.lang.String,java.lang.String,org.sonar.api.resources.ResourceType)|,<default(),static()>>,
    <|java+method:///org/sonar/api/utils/DateUtils/truncateToSecondsImpl(java.util.Date)|,<default(),static()>>,
    <|java+method:///org/sonar/api/SonarQubeSide/values()|,<default(),static()>>,
    <|java+method:///org/sonar/api/config/Settings/lambda$getKeysStartingWith$0(java.lang.String,java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/config/PropertyDefinition/createValidations(java.util.List)|,<default(),static()>>,
    <|java+method:///org/sonar/api/utils/DateUtils/truncateToSeconds(java.util.Date)|,<default(),static()>>,
    <|java+method:///org/sonar/api/resources/ResourceUtils/isPackage(org.sonar.api.resources.Resource)|,<static(),default()>>,
    <|java+method:///org/sonar/api/server/ws/internal/ValidatingRequest/lambda$paramAsEnums$0(java.lang.Class,java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/access$1200(org.sonar.api.server.rule.RulesDefinition$NewRule)|,<static(),default()>>,
    <|java+method:///org/sonar/api/server/ws/Request/checkDefaultValueSupplier(java.util.function.Supplier)|,<default(),static()>>,
    <|java+method:///org/sonar/colorizer/MultilinesDocTokenizer/access$200(org.sonar.colorizer.MultilinesDocTokenizer,org.sonar.colorizer.HtmlCodeBuilder)|,<static(),default()>>,
    <|java+method:///org/sonar/api/config/PropertyDefinition$Builder/addQualifiers(java.util.List,java.lang.String,java.lang.String%5B%5D)|,<default(),static()>>,
    <|java+method:///org/sonar/api/resources/Qualifiers/isMethod(org.sonar.api.resources.Resource)|,<static(),default()>>,
    <|java+method:///org/sonar/api/batch/SquidUtils/convertJavaFileKeyFromSquidFormat(java.lang.String)|,<static(),default()>>,
    <|java+method:///org/sonar/api/batch/SquidUtils/convertJavaPackageKeyFromSquidFormat(java.lang.String)|,<static(),default()>>,
    <|java+method:///org/sonar/api/config/PropertyDefinition/validateFloat(java.lang.String)|,<static(),default()>>,
    <|java+method:///org/sonar/api/server/ws/Request$StringParamImpl/present(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/server/ws/internal/ValidatingRequest/validateValues(java.util.List,org.sonar.api.server.ws.WebService$Param)|,<default(),static()>>,
    <|java+method:///org/sonar/api/resources/Qualifiers/isClass(org.sonar.api.resources.Resource)|,<static(),default()>>,
    <|java+method:///org/sonar/api/web/ServletFilter$UrlPattern/lambda$new$0(java.lang.Object)|,<default(),static()>>,
    <|java+method:///org/sonar/api/ce/posttask/Branch$Type/values()|,<default(),static()>>,
    <|java+method:///org/sonar/graph/DsmManualSorter/sort(org.sonar.graph.Dsm,java.lang.Object%5B%5D)|,<static(),default()>>,
    <|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/access$1000(org.sonar.api.server.rule.RulesDefinition$NewRule)|,<default(),static()>>,
    <|java+method:///org/sonar/api/config/PropertyDefinition/validateInteger(java.lang.String)|,<static(),default()>>,
    <|java+initializer:///org/sonar/api/scan/filesystem/FileType/FileType$initializer|,<static(),default()>>,
    <|java+method:///org/sonar/api/resources/ResourceType$Builder/access$400(org.sonar.api.resources.ResourceType$Builder)|,<static(),default()>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileType/values()|,<static(),default()>>,
    <|java+method:///org/sonar/colorizer/JavaConstantTokenizer/hasNextToken(org.sonar.channel.CodeReader)|,<static(),default()>>,
    <|java+method:///org/sonar/api/utils/WildcardPattern/lambda$create$0(java.lang.String,java.lang.String,java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/colorizer/CodeColorizer$Format/valueOf(java.lang.String)|,<static(),default()>>,
    <|java+method:///org/sonar/api/batch/fs/internal/DefaultInputModule/initBaseDir(org.sonar.api.batch.bootstrap.ProjectDefinition)|,<default(),static()>>,
    <|java+method:///org/sonar/api/checks/AnnotationCheckFactory/getRuleKey(java.lang.Object)|,<static(),default()>>,
    <|java+initializer:///org/sonar/colorizer/HtmlOptions/HtmlOptions$initializer|,<static(),default()>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata/computeLineHashesForIssueTracking(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.fs.internal.FileMetadata$LineHashConsumer)|,<default(),static()>>,
    <|java+method:///org/sonar/api/utils/ZipUtils/unzipEntry(java.util.zip.ZipEntry,java.util.zip.ZipInputStream,java.io.File)|,<default(),static()>>,
    <|java+method:///org/sonar/api/rules/RuleType$ToName/values()|,<static(),default()>>,
    <|java+initializer:///org/sonar/api/web/page/Page$Qualifier/Page$Qualifier$initializer|,<default(),static()>>,
    <|java+initializer:///org/sonar/api/web/page/Page$Scope/Page$Scope$initializer|,<default(),static()>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileExtensionPredicate/lowercase(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/batch/sensor/internal/SensorContextTester/lambda$lineHits$0(int,org.sonar.api.batch.sensor.coverage.internal.DefaultCoverage)|,<default(),static()>>,
    <|java+initializer:///org/sonar/api/profiles/RulesProfile$CloneFunction/RulesProfile$CloneFunction$initializer|,<static(),default()>>,
    <|java+method:///org/sonar/api/web/ServletFilter$UrlPattern/lambda$matches$4(java.lang.String,java.util.function.Predicate)|,<default(),static()>>,
    <|java+method:///org/sonar/api/config/PropertyDefinition$Result/access$2000(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/config/PropertyDefinition/validateFloat()|,<default(),static()>>,
    <|java+method:///org/sonar/api/utils/DateUtils/parseLocalDateQuietly(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/server/ws/Request$AbsentParam/valueOf(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/scan/filesystem/FileExclusions/lambda$exclusions$3(int)|,<default(),static()>>,
    <|java+method:///org/sonar/api/config/PropertyDefinition$Builder/validateQualifier(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/resources/InputFileUtils/getRelativeDirectory(org.sonar.api.resources.InputFile)|,<static(),default()>>,
    <|java+method:///org/sonar/api/server/ws/WebService$NewParam/access$3200(org.sonar.api.server.ws.WebService$NewParam)|,<default(),static()>>,
    <|java+method:///org/sonar/api/server/ws/WebService$NewParam/access$2100(org.sonar.api.server.ws.WebService$NewParam)|,<default(),static()>>,
    <|java+method:///org/sonar/api/checks/AnnotationCheckFactory/configureField(java.lang.Object,java.lang.reflect.Field,java.lang.String)|,<static(),default()>>,
    <|java+method:///org/sonar/api/server/authentication/UserIdentity$ValidateGroupName/values()|,<static(),default()>>,
    <|java+method:///org/sonar/api/server/authentication/UnauthorizedException/encodeMessage(java.lang.String)|,<static(),default()>>,
    <|java+method:///org/sonar/api/server/ws/Request/access$000()|,<default(),static()>>,
    <|java+initializer:///org/sonar/api/batch/fs/internal/charhandler/LineCounter/LineCounter$initializer|,<default(),static()>>,
    <|java+initializer:///org/sonar/api/rules/RuleType$ToName/RuleType$ToName$initializer|,<static(),default()>>,
    <|java+method:///org/sonar/api/web/page/Page$Qualifier/values()|,<default(),static()>>,
    <|java+method:///org/sonar/api/web/ServletFilter$UrlPattern/lambda$matches$3(java.lang.String,java.util.function.Predicate)|,<default(),static()>>,
    <|java+method:///org/sonar/api/config/PropertyDefinition/access$1800()|,<default(),static()>>,
    <|java+method:///org/sonar/api/batch/sensor/issue/internal/DefaultIssue/lambda$null$0(java.util.List)|,<default(),static()>>,
    <|java+method:///org/sonar/api/scan/filesystem/PathResolver/relativize(java.nio.file.Path,java.nio.file.Path)|,<default(),static()>>,
    <|java+method:///org/sonar/api/config/PropertyDefinition/validateInteger()|,<default(),static()>>,
    <|java+method:///org/sonar/api/config/PropertyDefinition/lambda$validateRegexp$5(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/colorizer/GroovyKeywords/get()|,<static(),default()>>,
    <|java+method:///org/sonar/api/server/ws/WebService$NewParam/access$3100(org.sonar.api.server.ws.WebService$NewParam)|,<default(),static()>>,
    <|java+initializer:///org/sonar/api/batch/fs/internal/PathPattern/PathPattern$initializer|,<default(),static()>>,
    <|java+method:///org/sonar/api/server/authentication/UserIdentity$ValidateGroupName/valueOf(java.lang.String)|,<static(),default()>>,
    <|java+method:///org/sonar/api/config/PropertyDefinition/lambda$validateBoolean$2(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/web/page/Page$Qualifier/valueOf(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/colorizer/CodeColorizer/javaToHtml(java.io.Reader,org.sonar.colorizer.HtmlOptions)|,<static(),default()>>,
    <|java+method:///org/sonar/api/web/ServletFilter$UrlPattern/convertPatternsToString(java.util.List)|,<default(),static()>>,
    <|java+method:///org/sonar/api/server/ws/WebService$NewParam/access$2000(org.sonar.api.server.ws.WebService$NewParam)|,<static(),default()>>,
    <|java+method:///org/sonar/api/batch/fs/internal/FileMetadata/access$000()|,<static(),default()>>,
    <|java+method:///org/sonar/api/server/ws/WebService$NewParam/access$3000(org.sonar.api.server.ws.WebService$NewParam)|,<default(),static()>>,
    <|java+method:///org/sonar/api/batch/fs/internal/TestInputFileBuilder/newDefaultInputModule(org.sonar.api.batch.bootstrap.ProjectDefinition)|,<default(),static()>>,
    <|java+method:///org/sonar/api/web/ServletFilter$UrlPattern$Builder/compile(java.lang.String)|,<default(),static()>>,
    <|java+method:///org/sonar/api/utils/DateUtils/formatDateTime(java.time.OffsetDateTime)|,<default(),static()>>,
    <|java+method:///org/sonar/api/server/ws/Request$AbsentParam/values()|,<default(),static()>>,
    <|java+method:///org/sonar/api/resources/ResourceTypes/lambda$static$0(org.sonar.api.resources.ResourceType)|,<default(),static()>>,
    <|java+method:///org/sonar/api/config/PropertyDefinition/validateRegexp()|,<default(),static()>>
  })