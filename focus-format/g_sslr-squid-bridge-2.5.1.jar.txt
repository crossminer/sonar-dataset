org/sonar/squidbridge/checks/AbstractNestedCommentsCheck/visitToken(com.sonar.sslr.api.Token)#com/sonar/sslr/api/Token/getOriginalValue()
org/sonar/squidbridge/checks/AbstractNestedCommentsCheck/visitToken(com.sonar.sslr.api.Token)#org/sonar/squidbridge/checks/AbstractNestedCommentsCheck/getContext()
org/sonar/squidbridge/checks/AbstractNestedCommentsCheck/visitToken(com.sonar.sslr.api.Token)#com/sonar/sslr/api/Trivia/getToken()
org/sonar/squidbridge/checks/AbstractNestedCommentsCheck/visitToken(com.sonar.sslr.api.Token)#java/util/Iterator/hasNext()
org/sonar/squidbridge/checks/AbstractNestedCommentsCheck/visitToken(com.sonar.sslr.api.Token)#com/sonar/sslr/api/Trivia/isComment()
org/sonar/squidbridge/checks/AbstractNestedCommentsCheck/visitToken(com.sonar.sslr.api.Token)#java/util/Iterator/next()
org/sonar/squidbridge/checks/AbstractNestedCommentsCheck/visitToken(com.sonar.sslr.api.Token)#java/util/Set/iterator()
org/sonar/squidbridge/checks/AbstractNestedCommentsCheck/visitToken(com.sonar.sslr.api.Token)#com/sonar/sslr/api/Token/getTrivia()
org/sonar/squidbridge/checks/AbstractNestedCommentsCheck/visitToken(com.sonar.sslr.api.Token)#java/lang/String/contains(java.lang.CharSequence)
org/sonar/squidbridge/checks/AbstractNestedCommentsCheck/visitToken(com.sonar.sslr.api.Token)#java/util/List/iterator()
org/sonar/squidbridge/annotations/AnnotationBasedProfileBuilder/addRule(java.lang.Class,org.sonar.api.profiles.RulesProfile,java.lang.String,org.sonar.api.utils.ValidationMessages)#org/sonar/check/Rule/key()
org/sonar/squidbridge/annotations/AnnotationBasedProfileBuilder/addRule(java.lang.Class,org.sonar.api.profiles.RulesProfile,java.lang.String,org.sonar.api.utils.ValidationMessages)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/squidbridge/annotations/AnnotationBasedProfileBuilder/addRule(java.lang.Class,org.sonar.api.profiles.RulesProfile,java.lang.String,org.sonar.api.utils.ValidationMessages)#org/sonar/api/profiles/RulesProfile/activateRule(org.sonar.api.rules.Rule,org.sonar.api.rules.RulePriority)
org/sonar/squidbridge/annotations/AnnotationBasedProfileBuilder/addRule(java.lang.Class,org.sonar.api.profiles.RulesProfile,java.lang.String,org.sonar.api.utils.ValidationMessages)#java/lang/StringBuilder/StringBuilder()
org/sonar/squidbridge/annotations/AnnotationBasedProfileBuilder/addRule(java.lang.Class,org.sonar.api.profiles.RulesProfile,java.lang.String,org.sonar.api.utils.ValidationMessages)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/squidbridge/annotations/AnnotationBasedProfileBuilder/addRule(java.lang.Class,org.sonar.api.profiles.RulesProfile,java.lang.String,org.sonar.api.utils.ValidationMessages)#org/sonar/api/rules/RuleFinder/findByKey(java.lang.String,java.lang.String)
org/sonar/squidbridge/annotations/AnnotationBasedProfileBuilder/addRule(java.lang.Class,org.sonar.api.profiles.RulesProfile,java.lang.String,org.sonar.api.utils.ValidationMessages)#java/lang/StringBuilder/toString()
org/sonar/squidbridge/annotations/AnnotationBasedProfileBuilder/addRule(java.lang.Class,org.sonar.api.profiles.RulesProfile,java.lang.String,org.sonar.api.utils.ValidationMessages)#org/sonar/api/utils/ValidationMessages/addWarningText(java.lang.String)
org/sonar/squidbridge/annotations/AnnotationBasedProfileBuilder/addRule(java.lang.Class,org.sonar.api.profiles.RulesProfile,java.lang.String,org.sonar.api.utils.ValidationMessages)#org/sonar/api/utils/AnnotationUtils/getAnnotation(java.lang.Object,java.lang.Class)
org/sonar/squidbridge/checks/AbstractNoSonarCheck/visitToken(com.sonar.sslr.api.Token)#com/sonar/sslr/api/Token/getOriginalValue()
org/sonar/squidbridge/checks/AbstractNoSonarCheck/visitToken(com.sonar.sslr.api.Token)#org/sonar/squidbridge/checks/AbstractNoSonarCheck/getContext()
org/sonar/squidbridge/checks/AbstractNoSonarCheck/visitToken(com.sonar.sslr.api.Token)#java/lang/String/split(java.lang.String,int)
org/sonar/squidbridge/checks/AbstractNoSonarCheck/visitToken(com.sonar.sslr.api.Token)#com/sonar/sslr/api/Trivia/getToken()
org/sonar/squidbridge/checks/AbstractNoSonarCheck/visitToken(com.sonar.sslr.api.Token)#java/util/Iterator/hasNext()
org/sonar/squidbridge/checks/AbstractNoSonarCheck/visitToken(com.sonar.sslr.api.Token)#com/sonar/sslr/api/Trivia/isComment()
org/sonar/squidbridge/checks/AbstractNoSonarCheck/visitToken(com.sonar.sslr.api.Token)#com/sonar/sslr/api/Token/getLine()
org/sonar/squidbridge/checks/AbstractNoSonarCheck/visitToken(com.sonar.sslr.api.Token)#com/sonar/sslr/api/Token/getTrivia()
org/sonar/squidbridge/checks/AbstractNoSonarCheck/visitToken(com.sonar.sslr.api.Token)#java/lang/String/contains(java.lang.CharSequence)
org/sonar/squidbridge/checks/AbstractNoSonarCheck/visitToken(com.sonar.sslr.api.Token)#java/util/List/iterator()
org/sonar/squidbridge/checks/AbstractNoSonarCheck/visitToken(com.sonar.sslr.api.Token)#java/util/Iterator/next()
org/sonar/squidbridge/metrics/CommentsVisitor/visitToken(com.sonar.sslr.api.Token)#com/sonar/sslr/api/Token/getOriginalValue()
org/sonar/squidbridge/metrics/CommentsVisitor/visitToken(com.sonar.sslr.api.Token)#java/lang/String/split(java.lang.String,int)
org/sonar/squidbridge/metrics/CommentsVisitor/visitToken(com.sonar.sslr.api.Token)#java/util/Iterator/hasNext()
org/sonar/squidbridge/metrics/CommentsVisitor/visitToken(com.sonar.sslr.api.Token)#com/sonar/sslr/api/Trivia/isComment()
org/sonar/squidbridge/metrics/CommentsVisitor/visitToken(com.sonar.sslr.api.Token)#com/sonar/sslr/api/Token/getLine()
org/sonar/squidbridge/metrics/CommentsVisitor/visitToken(com.sonar.sslr.api.Token)#com/sonar/sslr/api/Token/getTrivia()
org/sonar/squidbridge/metrics/CommentsVisitor/visitToken(com.sonar.sslr.api.Token)#java/lang/String/contains(java.lang.CharSequence)
org/sonar/squidbridge/metrics/CommentsVisitor/visitToken(com.sonar.sslr.api.Token)#java/util/List/iterator()
org/sonar/squidbridge/metrics/CommentsVisitor/visitToken(com.sonar.sslr.api.Token)#com/sonar/sslr/api/Trivia/getToken()
org/sonar/squidbridge/metrics/CommentsVisitor/visitToken(com.sonar.sslr.api.Token)#java/util/Iterator/next()
org/sonar/squidbridge/metrics/CommentsVisitor/visitToken(com.sonar.sslr.api.Token)#org/sonar/squidbridge/metrics/CommentsVisitor/getContext()
org/sonar/squidbridge/rules/PropertyFileLoader/loadNames(org.sonar.api.server.rule.RulesDefinition$NewRepository,java.io.InputStream)#org/sonar/api/server/rule/RulesDefinition$NewRule/params()
org/sonar/squidbridge/rules/PropertyFileLoader/loadNames(org.sonar.api.server.rule.RulesDefinition$NewRepository,java.io.InputStream)#org/sonar/api/server/rule/RulesDefinition$NewRepository/rules()
org/sonar/squidbridge/rules/PropertyFileLoader/loadNames(org.sonar.api.server.rule.RulesDefinition$NewRepository,java.io.InputStream)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/squidbridge/rules/PropertyFileLoader/loadNames(org.sonar.api.server.rule.RulesDefinition$NewRepository,java.io.InputStream)#org/sonar/api/server/rule/RulesDefinition$NewRepository/key()
org/sonar/squidbridge/rules/PropertyFileLoader/loadNames(org.sonar.api.server.rule.RulesDefinition$NewRepository,java.io.InputStream)#java/util/Iterator/next()
org/sonar/squidbridge/rules/PropertyFileLoader/loadNames(org.sonar.api.server.rule.RulesDefinition$NewRepository,java.io.InputStream)#java/util/Properties/Properties()
org/sonar/squidbridge/rules/PropertyFileLoader/loadNames(org.sonar.api.server.rule.RulesDefinition$NewRepository,java.io.InputStream)#java/lang/StringBuilder/StringBuilder()
org/sonar/squidbridge/rules/PropertyFileLoader/loadNames(org.sonar.api.server.rule.RulesDefinition$NewRepository,java.io.InputStream)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
org/sonar/squidbridge/rules/PropertyFileLoader/loadNames(org.sonar.api.server.rule.RulesDefinition$NewRepository,java.io.InputStream)#java/util/Properties/load(java.io.InputStream)
org/sonar/squidbridge/rules/PropertyFileLoader/loadNames(org.sonar.api.server.rule.RulesDefinition$NewRepository,java.io.InputStream)#java/lang/StringBuilder/toString()
org/sonar/squidbridge/rules/PropertyFileLoader/loadNames(org.sonar.api.server.rule.RulesDefinition$NewRepository,java.io.InputStream)#org/sonar/api/server/rule/RulesDefinition$NewParam/key()
org/sonar/squidbridge/rules/PropertyFileLoader/loadNames(org.sonar.api.server.rule.RulesDefinition$NewRepository,java.io.InputStream)#org/sonar/api/server/rule/RulesDefinition$NewRule/setName(java.lang.String)
org/sonar/squidbridge/rules/PropertyFileLoader/loadNames(org.sonar.api.server.rule.RulesDefinition$NewRepository,java.io.InputStream)#java/util/Properties/getProperty(java.lang.String)
org/sonar/squidbridge/rules/PropertyFileLoader/loadNames(org.sonar.api.server.rule.RulesDefinition$NewRepository,java.io.InputStream)#java/util/Iterator/hasNext()
org/sonar/squidbridge/rules/PropertyFileLoader/loadNames(org.sonar.api.server.rule.RulesDefinition$NewRepository,java.io.InputStream)#org/sonar/api/server/rule/RulesDefinition$NewParam/setDescription(java.lang.String)
org/sonar/squidbridge/rules/PropertyFileLoader/loadNames(org.sonar.api.server.rule.RulesDefinition$NewRepository,java.io.InputStream)#java/util/Collection/iterator()
org/sonar/squidbridge/rules/PropertyFileLoader/loadNames(org.sonar.api.server.rule.RulesDefinition$NewRepository,java.io.InputStream)#org/sonar/api/server/rule/RulesDefinition$NewRule/key()
org/sonar/squidbridge/AstScanner/scanFiles(java.util.Collection)#com/sonar/sslr/impl/Parser/parse(java.io.File)
org/sonar/squidbridge/AstScanner/scanFiles(java.util.Collection)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/squidbridge/AstScanner/scanFiles(java.util.Collection)#java/util/Iterator/next()
org/sonar/squidbridge/AstScanner/scanFiles(java.util.Collection)#java/lang/StringBuilder/StringBuilder()
org/sonar/squidbridge/AstScanner/scanFiles(java.util.Collection)#com/sonar/sslr/impl/ast/AstWalker/AstWalker(java.util.List)
org/sonar/squidbridge/AstScanner/scanFiles(java.util.Collection)#com/sonar/sslr/api/RecognitionException/getMessage()
org/sonar/squidbridge/AstScanner/scanFiles(java.util.Collection)#java/lang/StringBuilder/toString()
org/sonar/squidbridge/AstScanner/scanFiles(java.util.Collection)#java/util/Iterator/hasNext()
org/sonar/squidbridge/AstScanner/scanFiles(java.util.Collection)#org/slf4j/Logger/error(java.lang.String)
org/sonar/squidbridge/AstScanner/scanFiles(java.util.Collection)#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
org/sonar/squidbridge/AstScanner/scanFiles(java.util.Collection)#java/io/File/getAbsolutePath()
org/sonar/squidbridge/AstScanner/scanFiles(java.util.Collection)#java/util/List/iterator()
org/sonar/squidbridge/AstScanner/scanFiles(java.util.Collection)#com/sonar/sslr/impl/ast/AstWalker/walkAndVisit(com.sonar.sslr.api.AstNode)
org/sonar/squidbridge/AstScanner/scanFiles(java.util.Collection)#java/util/Collection/iterator()
org/sonar/squidbridge/Squid/register(java.lang.Class)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/sonar/squidbridge/Squid/register(java.lang.Class)#org/picocontainer/MutablePicoContainer/getComponent(java.lang.Class)
org/sonar/squidbridge/Squid/register(java.lang.Class)#java/util/Iterator/hasNext()
org/sonar/squidbridge/Squid/register(java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/squidbridge/Squid/register(java.lang.Class)#java/util/Iterator/next()
org/sonar/squidbridge/Squid/register(java.lang.Class)#java/lang/Class/getName()
org/sonar/squidbridge/Squid/register(java.lang.Class)#java/lang/StringBuilder/StringBuilder()
org/sonar/squidbridge/Squid/register(java.lang.Class)#java/util/Set/iterator()
org/sonar/squidbridge/Squid/register(java.lang.Class)#java/util/Collection/iterator()
org/sonar/squidbridge/Squid/register(java.lang.Class)#java/lang/StringBuilder/toString()
org/sonar/squidbridge/text/MultiLinesCommentHandler/matchToEnd(org.sonar.squidbridge.text.Line,java.lang.StringBuilder)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/sonar/squidbridge/text/MultiLinesCommentHandler/matchToEnd(org.sonar.squidbridge.text.Line,java.lang.StringBuilder)#java/lang/StringBuilder/indexOf(java.lang.String)
org/sonar/squidbridge/text/MultiLinesCommentHandler/matchToEnd(org.sonar.squidbridge.text.Line,java.lang.StringBuilder)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/squidbridge/text/MultiLinesCommentHandler/matchToEnd(org.sonar.squidbridge.text.Line,java.lang.StringBuilder)#org/sonar/squidbridge/text/MultiLinesCommentHandler/getLastCharacter(java.lang.StringBuilder)
org/sonar/squidbridge/text/MultiLinesCommentHandler/matchToEnd(org.sonar.squidbridge.text.Line,java.lang.StringBuilder)#java/lang/StringBuilder/StringBuilder()
org/sonar/squidbridge/text/MultiLinesCommentHandler/matchToEnd(org.sonar.squidbridge.text.Line,java.lang.StringBuilder)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/squidbridge/text/MultiLinesCommentHandler/matchToEnd(org.sonar.squidbridge.text.Line,java.lang.StringBuilder)#java/lang/StringBuilder/toString()
org/sonar/squidbridge/text/MultiLinesCommentHandler/matchToEnd(org.sonar.squidbridge.text.Line,java.lang.StringBuilder)#org/sonar/squidbridge/text/MultiLinesCommentHandler/matchEndOfString(java.lang.StringBuilder,java.lang.String)
org/sonar/squidbridge/text/MultiLinesCommentHandler/matchToEnd(org.sonar.squidbridge.text.Line,java.lang.StringBuilder)#java/lang/StringBuilder/append(char)
org/sonar/squidbridge/rules/SqaleXmlLoader/processRule(java.lang.String,org.codehaus.staxmate.in.SMInputCursor)#org/codehaus/staxmate/in/SMInputCursor/getNext()
org/sonar/squidbridge/rules/SqaleXmlLoader/processRule(java.lang.String,org.codehaus.staxmate.in.SMInputCursor)#java/util/Map/get(java.lang.Object)
org/sonar/squidbridge/rules/SqaleXmlLoader/processRule(java.lang.String,org.codehaus.staxmate.in.SMInputCursor)#java/lang/String/equals(java.lang.Object)
org/sonar/squidbridge/rules/SqaleXmlLoader/processRule(java.lang.String,org.codehaus.staxmate.in.SMInputCursor)#org/codehaus/staxmate/in/SMInputCursor/getElemStringValue()
org/sonar/squidbridge/rules/SqaleXmlLoader/processRule(java.lang.String,org.codehaus.staxmate.in.SMInputCursor)#org/sonar/api/server/rule/RulesDefinition$NewRule/setDebtSubCharacteristic(java.lang.String)
org/sonar/squidbridge/rules/SqaleXmlLoader/processRule(java.lang.String,org.codehaus.staxmate.in.SMInputCursor)#org/codehaus/staxmate/in/SMInputCursor/getLocalName()
org/sonar/squidbridge/rules/SqaleXmlLoader/processRule(java.lang.String,org.codehaus.staxmate.in.SMInputCursor)#org/sonar/api/server/rule/RulesDefinition$NewRule/debtRemediationFunctions()
org/sonar/squidbridge/rules/SqaleXmlLoader/processRule(java.lang.String,org.codehaus.staxmate.in.SMInputCursor)#org/sonar/api/server/rule/RulesDefinition$NewRepository/rule(java.lang.String)
org/sonar/squidbridge/rules/SqaleXmlLoader/processRule(java.lang.String,org.codehaus.staxmate.in.SMInputCursor)#org/sonar/api/server/rule/RulesDefinition$NewRule/setDebtRemediationFunction(org.sonar.api.server.debt.DebtRemediationFunction)
org/sonar/squidbridge/rules/SqaleXmlLoader/processRule(java.lang.String,org.codehaus.staxmate.in.SMInputCursor)#org/codehaus/staxmate/in/SMInputCursor/childElementCursor()
org/sonar/squidbridge/checks/ViolationCounterCheck/getRelativePath(java.io.File)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/squidbridge/checks/ViolationCounterCheck/getRelativePath(java.io.File)#java/lang/String/length()
org/sonar/squidbridge/checks/ViolationCounterCheck/getRelativePath(java.io.File)#java/lang/StringBuilder/StringBuilder()
org/sonar/squidbridge/checks/ViolationCounterCheck/getRelativePath(java.io.File)#java/io/File/getAbsolutePath()
org/sonar/squidbridge/checks/ViolationCounterCheck/getRelativePath(java.io.File)#java/lang/String/startsWith(java.lang.String)
org/sonar/squidbridge/checks/ViolationCounterCheck/getRelativePath(java.io.File)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/sonar/squidbridge/checks/ViolationCounterCheck/getRelativePath(java.io.File)#java/lang/StringBuilder/toString()
org/sonar/squidbridge/checks/ViolationCounterCheck/getRelativePath(java.io.File)#com/google/common/base/Throwables/propagate(java.lang.Throwable)
org/sonar/squidbridge/checks/ViolationCounterCheck/getRelativePath(java.io.File)#java/io/File/exists()
org/sonar/squidbridge/checks/ViolationCounterCheck/getRelativePath(java.io.File)#java/lang/String/substring(int)
org/sonar/squidbridge/checks/ViolationCounterCheck/getRelativePath(java.io.File)#java/lang/String/replace(char,char)
org/sonar/squidbridge/checks/ViolationCounterCheck/getRelativePath(java.io.File)#java/io/File/getCanonicalPath()
org/sonar/squidbridge/checks/AbstractCommentRegularExpressionCheck/visitToken(com.sonar.sslr.api.Token)#com/sonar/sslr/api/Token/getOriginalValue()
org/sonar/squidbridge/checks/AbstractCommentRegularExpressionCheck/visitToken(com.sonar.sslr.api.Token)#com/sonar/sslr/api/Trivia/getToken()
org/sonar/squidbridge/checks/AbstractCommentRegularExpressionCheck/visitToken(com.sonar.sslr.api.Token)#java/util/Iterator/hasNext()
org/sonar/squidbridge/checks/AbstractCommentRegularExpressionCheck/visitToken(com.sonar.sslr.api.Token)#com/sonar/sslr/api/Trivia/isComment()
org/sonar/squidbridge/checks/AbstractCommentRegularExpressionCheck/visitToken(com.sonar.sslr.api.Token)#org/sonar/squidbridge/checks/AbstractCommentRegularExpressionCheck/getContext()
org/sonar/squidbridge/checks/AbstractCommentRegularExpressionCheck/visitToken(com.sonar.sslr.api.Token)#java/util/Iterator/next()
org/sonar/squidbridge/checks/AbstractCommentRegularExpressionCheck/visitToken(com.sonar.sslr.api.Token)#com/sonar/sslr/api/Token/getTrivia()
org/sonar/squidbridge/checks/AbstractCommentRegularExpressionCheck/visitToken(com.sonar.sslr.api.Token)#java/util/List/iterator()
org/sonar/squidbridge/checks/AbstractCommentRegularExpressionCheck/visitToken(com.sonar.sslr.api.Token)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/sonar/squidbridge/checks/AbstractCommentRegularExpressionCheck/visitToken(com.sonar.sslr.api.Token)#java/util/regex/Matcher/matches()
org/sonar/squidbridge/checks/AbstractSingleLineCommentsSyntaxCheck/visitToken(com.sonar.sslr.api.Token)#com/sonar/sslr/api/Token/getOriginalValue()
org/sonar/squidbridge/checks/AbstractSingleLineCommentsSyntaxCheck/visitToken(com.sonar.sslr.api.Token)#org/apache/commons/lang/StringUtils/containsAny(java.lang.String,java.lang.String)
org/sonar/squidbridge/checks/AbstractSingleLineCommentsSyntaxCheck/visitToken(com.sonar.sslr.api.Token)#com/sonar/sslr/api/Trivia/getToken()
org/sonar/squidbridge/checks/AbstractSingleLineCommentsSyntaxCheck/visitToken(com.sonar.sslr.api.Token)#java/util/Iterator/hasNext()
org/sonar/squidbridge/checks/AbstractSingleLineCommentsSyntaxCheck/visitToken(com.sonar.sslr.api.Token)#com/sonar/sslr/api/Trivia/isComment()
org/sonar/squidbridge/checks/AbstractSingleLineCommentsSyntaxCheck/visitToken(com.sonar.sslr.api.Token)#java/util/Iterator/next()
org/sonar/squidbridge/checks/AbstractSingleLineCommentsSyntaxCheck/visitToken(com.sonar.sslr.api.Token)#java/lang/String/startsWith(java.lang.String)
org/sonar/squidbridge/checks/AbstractSingleLineCommentsSyntaxCheck/visitToken(com.sonar.sslr.api.Token)#com/sonar/sslr/api/Token/getTrivia()
org/sonar/squidbridge/checks/AbstractSingleLineCommentsSyntaxCheck/visitToken(com.sonar.sslr.api.Token)#java/util/List/iterator()
org/sonar/squidbridge/checks/AbstractSingleLineCommentsSyntaxCheck/visitToken(com.sonar.sslr.api.Token)#com/sonar/sslr/api/Token/getLine()
org/sonar/squidbridge/checks/AbstractSingleLineCommentsSyntaxCheck/visitToken(com.sonar.sslr.api.Token)#org/sonar/squidbridge/checks/AbstractSingleLineCommentsSyntaxCheck/getContext()
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/addRuleClasses(boolean,java.lang.Iterable)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/addRuleClasses(boolean,java.lang.Iterable)#com/google/common/collect/Lists/newArrayList()
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/addRuleClasses(boolean,java.lang.Iterable)#java/util/Iterator/next()
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/addRuleClasses(boolean,java.lang.Iterable)#java/lang/Iterable/iterator()
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/addRuleClasses(boolean,java.lang.Iterable)#java/lang/StringBuilder/StringBuilder()
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/addRuleClasses(boolean,java.lang.Iterable)#java/util/List/add(java.lang.Object)
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/addRuleClasses(boolean,java.lang.Iterable)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/addRuleClasses(boolean,java.lang.Iterable)#org/sonar/api/server/rule/RulesDefinitionAnnotationLoader/load(org.sonar.api.server.rule.RulesDefinition$NewExtendedRepository,java.lang.Class[])
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/addRuleClasses(boolean,java.lang.Iterable)#java/util/Iterator/hasNext()
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/addRuleClasses(boolean,java.lang.Iterable)#org/sonar/api/server/rule/RulesDefinition$NewRule/setTemplate(boolean)
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/addRuleClasses(boolean,java.lang.Iterable)#com/google/common/collect/Iterables/toArray(java.lang.Iterable,java.lang.Class)
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/addRuleClasses(boolean,java.lang.Iterable)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/addRuleClasses(boolean,java.lang.Iterable)#org/sonar/api/server/rule/RulesDefinitionAnnotationLoader/RulesDefinitionAnnotationLoader()
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/addRuleClasses(boolean,java.lang.Iterable)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/addRuleClasses(boolean,java.lang.Iterable)#org/sonar/api/utils/AnnotationUtils/getAnnotation(java.lang.Object,java.lang.Class)
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/addRuleClasses(boolean,java.lang.Iterable)#java/lang/StringBuilder/toString()
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupSqaleModel(org.sonar.api.server.rule.RulesDefinition$NewRule,java.lang.Class)#org/sonar/api/server/rule/RulesDefinition$NewRule/debtRemediationFunctions()
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupSqaleModel(org.sonar.api.server.rule.RulesDefinition$NewRule,java.lang.Class)#com/google/common/collect/Iterables/size(java.lang.Iterable)
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupSqaleModel(org.sonar.api.server.rule.RulesDefinition$NewRule,java.lang.Class)#org/sonar/api/server/rule/RulesDefinition$DebtRemediationFunctions/linearWithOffset(java.lang.String,java.lang.String)
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupSqaleModel(org.sonar.api.server.rule.RulesDefinition$NewRule,java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupSqaleModel(org.sonar.api.server.rule.RulesDefinition$NewRule,java.lang.Class)#com/google/common/collect/Iterables/filter(java.lang.Iterable,com.google.common.base.Predicate)
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupSqaleModel(org.sonar.api.server.rule.RulesDefinition$NewRule,java.lang.Class)#org/sonar/api/server/rule/RulesDefinition$DebtRemediationFunctions/constantPerIssue(java.lang.String)
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupSqaleModel(org.sonar.api.server.rule.RulesDefinition$NewRule,java.lang.Class)#org/sonar/api/server/rule/RulesDefinition$NewRule/setDebtRemediationFunction(org.sonar.api.server.debt.DebtRemediationFunction)
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupSqaleModel(org.sonar.api.server.rule.RulesDefinition$NewRule,java.lang.Class)#java/lang/StringBuilder/StringBuilder()
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupSqaleModel(org.sonar.api.server.rule.RulesDefinition$NewRule,java.lang.Class)#org/sonar/api/server/rule/RulesDefinition$DebtRemediationFunctions/linear(java.lang.String)
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupSqaleModel(org.sonar.api.server.rule.RulesDefinition$NewRule,java.lang.Class)#com/google/common/collect/Sets/newHashSet(java.lang.Object[])
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupSqaleModel(org.sonar.api.server.rule.RulesDefinition$NewRule,java.lang.Class)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupSqaleModel(org.sonar.api.server.rule.RulesDefinition$NewRule,java.lang.Class)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupSqaleModel(org.sonar.api.server.rule.RulesDefinition$NewRule,java.lang.Class)#org/sonar/api/server/rule/RulesDefinition$NewRule/setDebtSubCharacteristic(java.lang.String)
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupSqaleModel(org.sonar.api.server.rule.RulesDefinition$NewRule,java.lang.Class)#com/google/common/base/Predicates/notNull()
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupSqaleModel(org.sonar.api.server.rule.RulesDefinition$NewRule,java.lang.Class)#java/lang/StringBuilder/toString()
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupSqaleModel(org.sonar.api.server.rule.RulesDefinition$NewRule,java.lang.Class)#org/sonar/api/utils/AnnotationUtils/getAnnotation(java.lang.Object,java.lang.Class)
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupExternalNames(java.util.Collection)#org/sonar/api/server/rule/RulesDefinition$NewRule/params()
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupExternalNames(java.util.Collection)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupExternalNames(java.util.Collection)#org/sonar/api/server/rule/RulesDefinition$NewRepository/key()
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupExternalNames(java.util.Collection)#java/util/ResourceBundle/getBundle(java.lang.String,java.util.Locale)
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupExternalNames(java.util.Collection)#java/lang/StringBuilder/StringBuilder()
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupExternalNames(java.util.Collection)#java/util/ResourceBundle/containsKey(java.lang.String)
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupExternalNames(java.util.Collection)#java/util/ResourceBundle/getString(java.lang.String)
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupExternalNames(java.util.Collection)#java/lang/StringBuilder/toString()
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupExternalNames(java.util.Collection)#org/sonar/api/server/rule/RulesDefinition$NewParam/key()
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupExternalNames(java.util.Collection)#org/sonar/api/server/rule/RulesDefinition$NewRule/setName(java.lang.String)
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupExternalNames(java.util.Collection)#java/util/Iterator/hasNext()
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupExternalNames(java.util.Collection)#org/sonar/api/server/rule/RulesDefinition$NewParam/setDescription(java.lang.String)
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupExternalNames(java.util.Collection)#java/util/Iterator/next()
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupExternalNames(java.util.Collection)#java/lang/Class/getResource(java.lang.String)
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupExternalNames(java.util.Collection)#java/util/Collection/iterator()
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/setupExternalNames(java.util.Collection)#org/sonar/api/server/rule/RulesDefinition$NewRule/key()
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/newRule(java.lang.Class)#org/sonar/check/Rule/key()
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/newRule(java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/newRule(java.lang.Class)#java/lang/StringBuilder/StringBuilder()
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/newRule(java.lang.Class)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/newRule(java.lang.Class)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/newRule(java.lang.Class)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/newRule(java.lang.Class)#org/sonar/api/server/rule/RulesDefinition$NewRepository/rule(java.lang.String)
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/newRule(java.lang.Class)#java/lang/StringBuilder/toString()
org/sonar/squidbridge/annotations/AnnotationBasedRulesDefinition/newRule(java.lang.Class)#org/sonar/api/utils/AnnotationUtils/getAnnotation(java.lang.Object,java.lang.Class)
org/sonar/squidbridge/checks/ViolationCounterCheck$ViolationDifferenceAnalyzer/printDifferencesByFile()#java/util/Iterator/hasNext()
org/sonar/squidbridge/checks/ViolationCounterCheck$ViolationDifferenceAnalyzer/printDifferencesByFile()#java/util/Map/get(java.lang.Object)
org/sonar/squidbridge/checks/ViolationCounterCheck$ViolationDifferenceAnalyzer/printDifferencesByFile()#com/google/common/collect/Sets/newHashSet()
org/sonar/squidbridge/checks/ViolationCounterCheck$ViolationDifferenceAnalyzer/printDifferencesByFile()#java/util/Set/contains(java.lang.Object)
org/sonar/squidbridge/checks/ViolationCounterCheck$ViolationDifferenceAnalyzer/printDifferencesByFile()#java/util/Set/iterator()
org/sonar/squidbridge/checks/ViolationCounterCheck$ViolationDifferenceAnalyzer/printDifferencesByFile()#com/google/common/collect/Maps/immutableEntry(java.lang.Object,java.lang.Object)
org/sonar/squidbridge/checks/ViolationCounterCheck$ViolationDifferenceAnalyzer/printDifferencesByFile()#java/util/Set/add(java.lang.Object)
org/sonar/squidbridge/checks/ViolationCounterCheck$ViolationDifferenceAnalyzer/printDifferencesByFile()#java/util/Iterator/next()
org/sonar/squidbridge/checks/ViolationCounterCheck$ViolationDifferenceAnalyzer/printDifferencesByFile()#java/util/Map/keySet()
