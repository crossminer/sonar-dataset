com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPublicModifier(com.sonar.sslr.api.AstNode,com.sonar.sslr.api.AstNodeType)#java/util/Iterator/hasNext()
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPublicModifier(com.sonar.sslr.api.AstNode,com.sonar.sslr.api.AstNodeType)#com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/getContext()
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPublicModifier(com.sonar.sslr.api.AstNode,com.sonar.sslr.api.AstNodeType)#com/sonar/sslr/api/AstNode/getToken()
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPublicModifier(com.sonar.sslr.api.AstNode,com.sonar.sslr.api.AstNodeType)#org/sonar/squidbridge/SquidAstVisitorContext/peekSourceCode()
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPublicModifier(com.sonar.sslr.api.AstNode,com.sonar.sslr.api.AstNodeType)#org/sonar/squidbridge/api/SourceCode/add(org.sonar.squidbridge.measures.MetricDef,double)
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPublicModifier(com.sonar.sslr.api.AstNode,com.sonar.sslr.api.AstNodeType)#java/util/List/iterator()
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPublicModifier(com.sonar.sslr.api.AstNode,com.sonar.sslr.api.AstNodeType)#java/lang/Object/equals(java.lang.Object)
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPublicModifier(com.sonar.sslr.api.AstNode,com.sonar.sslr.api.AstNodeType)#com/sonar/sslr/api/AstNode/getChildren(com.sonar.sslr.api.AstNodeType[])
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPublicModifier(com.sonar.sslr.api.AstNode,com.sonar.sslr.api.AstNodeType)#java/util/Iterator/next()
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPublicModifier(com.sonar.sslr.api.AstNode,com.sonar.sslr.api.AstNodeType)#com/sonar/sslr/api/Token/getType()
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPreviousComments(com.sonar.sslr.api.AstNode)#java/util/Iterator/hasNext()
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPreviousComments(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/Trivia/isComment()
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPreviousComments(com.sonar.sslr.api.AstNode)#com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/getContext()
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPreviousComments(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/AstNode/getToken()
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPreviousComments(com.sonar.sslr.api.AstNode)#java/util/Iterator/next()
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPreviousComments(com.sonar.sslr.api.AstNode)#org/sonar/squidbridge/SquidAstVisitorContext/peekSourceCode()
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPreviousComments(com.sonar.sslr.api.AstNode)#java/util/List/iterator()
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPreviousComments(com.sonar.sslr.api.AstNode)#org/sonar/squidbridge/api/SourceCode/add(org.sonar.squidbridge.measures.MetricDef,double)
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPreviousComments(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/Token/getTrivia()
com/sonar/csharp/squid/tree/CSharpTypeVisitor/extractNamespaceSignature(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/AstNode/getChildren()
com/sonar/csharp/squid/tree/CSharpTypeVisitor/extractNamespaceSignature(com.sonar.sslr.api.AstNode)#java/util/Iterator/hasNext()
com/sonar/csharp/squid/tree/CSharpTypeVisitor/extractNamespaceSignature(com.sonar.sslr.api.AstNode)#java/lang/StringBuilder/append(java.lang.String)
com/sonar/csharp/squid/tree/CSharpTypeVisitor/extractNamespaceSignature(com.sonar.sslr.api.AstNode)#java/util/Iterator/next()
com/sonar/csharp/squid/tree/CSharpTypeVisitor/extractNamespaceSignature(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/AstNode/getFirstChild(com.sonar.sslr.api.AstNodeType[])
com/sonar/csharp/squid/tree/CSharpTypeVisitor/extractNamespaceSignature(com.sonar.sslr.api.AstNode)#java/lang/StringBuilder/StringBuilder()
com/sonar/csharp/squid/tree/CSharpTypeVisitor/extractNamespaceSignature(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/AstNode/getTokenValue()
com/sonar/csharp/squid/tree/CSharpTypeVisitor/extractNamespaceSignature(com.sonar.sslr.api.AstNode)#java/util/List/iterator()
com/sonar/csharp/squid/tree/CSharpTypeVisitor/extractNamespaceSignature(com.sonar.sslr.api.AstNode)#java/lang/StringBuilder/toString()
com/sonar/csharp/squid/tree/CSharpMemberVisitor/extractPropertySignature(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/AstNode/getPreviousSibling()
com/sonar/csharp/squid/tree/CSharpMemberVisitor/extractPropertySignature(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/AstNode/getTokenLine()
com/sonar/csharp/squid/tree/CSharpMemberVisitor/extractPropertySignature(com.sonar.sslr.api.AstNode)#java/lang/StringBuilder/append(java.lang.String)
com/sonar/csharp/squid/tree/CSharpMemberVisitor/extractPropertySignature(com.sonar.sslr.api.AstNode)#java/lang/StringBuilder/append(int)
com/sonar/csharp/squid/tree/CSharpMemberVisitor/extractPropertySignature(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/AstNode/getParent()
com/sonar/csharp/squid/tree/CSharpMemberVisitor/extractPropertySignature(com.sonar.sslr.api.AstNode)#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/sonar/csharp/squid/tree/CSharpMemberVisitor/extractPropertySignature(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/AstNode/getLastToken()
com/sonar/csharp/squid/tree/CSharpMemberVisitor/extractPropertySignature(com.sonar.sslr.api.AstNode)#java/lang/StringBuilder/toString()
com/sonar/csharp/squid/tree/CSharpMemberVisitor/extractPropertySignature(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/Token/getValue()
com/sonar/csharp/squid/tree/CSharpMemberVisitor/extractPropertySignature(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/AstNode/getFirstChild(com.sonar.sslr.api.AstNodeType[])
com/sonar/csharp/squid/tree/CSharpMemberVisitor/extractPropertySignature(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/AstNode/is(com.sonar.sslr.api.AstNodeType[])
com/sonar/csharp/squid/tree/CSharpMemberVisitor/extractPropertySignature(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/AstNode/getTokenValue()
com/sonar/csharp/squid/ProgressReport/run()#java/lang/Thread/sleep(long)
com/sonar/csharp/squid/ProgressReport/run()#java/lang/StringBuilder/append(java.lang.String)
com/sonar/csharp/squid/ProgressReport/run()#java/lang/StringBuilder/append(int)
com/sonar/csharp/squid/ProgressReport/run()#java/lang/Thread/interrupted()
com/sonar/csharp/squid/ProgressReport/run()#java/lang/Thread/interrupt()
com/sonar/csharp/squid/ProgressReport/run()#org/slf4j/Logger/info(java.lang.String)
com/sonar/csharp/squid/ProgressReport/run()#java/lang/StringBuilder/StringBuilder()
com/sonar/csharp/squid/ProgressReport/run()#java/io/File/getAbsolutePath()
com/sonar/csharp/squid/ProgressReport/run()#java/lang/StringBuilder/toString()
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/channel/BlackHoleChannel/BlackHoleChannel(java.lang.String)
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/channel/RegexpChannelBuilder/opt(java.lang.String)
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/Lexer$Builder/withChannel(org.sonar.sslr.channel.Channel)
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/channel/RegexpChannelBuilder/anyButNot(java.lang.String[])
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/channel/UnknownCharacterChannel/UnknownCharacterChannel()
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/Lexer$Builder/withCharset(java.nio.charset.Charset)
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/Lexer/builder()
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/channel/RegexpChannelBuilder/commentRegexp(java.lang.String[])
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/channel/RegexpChannelBuilder/or(java.lang.String[])
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/channel/BomCharacterChannel/BomCharacterChannel()
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/csharp/squid/CSharpConfiguration/getCharset()
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/channel/RegexpChannelBuilder/one2n(java.lang.String)
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/Lexer$Builder/withFailIfNoChannelToConsumeOneCharacter(boolean)
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/Lexer$Builder/withPreprocessor(com.sonar.sslr.api.Preprocessor)
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/channel/RegexpChannelBuilder/g(java.lang.String[])
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/channel/RegexpChannelBuilder/regexp(com.sonar.sslr.api.TokenType,java.lang.String[])
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/channel/PunctuatorChannel/PunctuatorChannel(com.sonar.sslr.api.TokenType[])
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/Lexer$Builder/build()
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/channel/IdentifierAndKeywordChannel/IdentifierAndKeywordChannel(java.lang.String,boolean,com.sonar.sslr.api.TokenType[][])
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/channel/RegexpChannelBuilder/o2n(java.lang.String)
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#org/sonar/squidbridge/AstScanner$Builder/setCommentAnalyser(org.sonar.squidbridge.CommentAnalyser)
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#org/sonar/squidbridge/AstScanner$Builder/setFilesMetric(org.sonar.squidbridge.measures.MetricDef)
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#org/sonar/squidbridge/metrics/CommentsVisitor$CommentsVisitorBuilder/withNoSonar(boolean)
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#org/sonar/squidbridge/metrics/CounterVisitor$Builder/build()
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#org/sonar/squidbridge/metrics/CounterVisitor$Builder/setMetricDef(org.sonar.squidbridge.measures.MetricDef)
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#org/sonar/squidbridge/metrics/CommentsVisitor$CommentsVisitorBuilder/build()
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#com/sonar/csharp/squid/CSharpConfiguration/getCharset()
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#org/sonar/squidbridge/AstScanner$Builder/withMetrics(org.sonar.squidbridge.measures.MetricDef[])
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#org/sonar/squidbridge/metrics/CommentsVisitor/builder()
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#org/sonar/squidbridge/SquidAstVisitorContextImpl/SquidAstVisitorContextImpl(org.sonar.squidbridge.api.SourceProject)
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#org/sonar/squidbridge/api/SourceProject/SourceProject(java.lang.String)
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#com/sonar/csharp/squid/ProgressAstScanner$Builder/setBaseParser(com.sonar.sslr.impl.Parser)
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#org/sonar/squidbridge/metrics/CounterVisitor/builder()
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#org/sonar/squidbridge/AstScanner$Builder/withSquidAstVisitor(org.sonar.squidbridge.SquidAstVisitor)
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#org/sonar/squidbridge/metrics/CommentsVisitor$CommentsVisitorBuilder/withCommentMetric(org.sonar.squidbridge.measures.MetricDef)
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#org/sonar/squidbridge/metrics/CounterVisitor$Builder/subscribeTo(com.sonar.sslr.api.AstNodeType[])
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#org/sonar/squidbridge/metrics/LinesOfCodeVisitor/LinesOfCodeVisitor(org.sonar.squidbridge.measures.MetricDef)
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#org/sonar/squidbridge/metrics/LinesVisitor/LinesVisitor(org.sonar.squidbridge.measures.MetricDef)
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#org/sonar/squidbridge/AstScanner$Builder/build()
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#org/sonar/squidbridge/metrics/CommentsVisitor$CommentsVisitorBuilder/withIgnoreHeaderComment(boolean)
com/sonar/csharp/squid/scanner/CSharpAstScanner/scanSingleFile(java.io.File,com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#org/sonar/squidbridge/AstScanner/getIndex()
com/sonar/csharp/squid/scanner/CSharpAstScanner/scanSingleFile(java.io.File,com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/sonar/csharp/squid/scanner/CSharpAstScanner/scanSingleFile(java.io.File,com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#java/lang/StringBuilder/append(java.lang.String)
com/sonar/csharp/squid/scanner/CSharpAstScanner/scanSingleFile(java.io.File,com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#java/lang/StringBuilder/append(int)
com/sonar/csharp/squid/scanner/CSharpAstScanner/scanSingleFile(java.io.File,com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#java/util/Collection/size()
com/sonar/csharp/squid/scanner/CSharpAstScanner/scanSingleFile(java.io.File,com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#java/util/Iterator/next()
com/sonar/csharp/squid/scanner/CSharpAstScanner/scanSingleFile(java.io.File,com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#java/lang/StringBuilder/StringBuilder()
com/sonar/csharp/squid/scanner/CSharpAstScanner/scanSingleFile(java.io.File,com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#org/sonar/squidbridge/api/SourceCodeSearchEngine/search(org.sonar.squidbridge.api.Query[])
com/sonar/csharp/squid/scanner/CSharpAstScanner/scanSingleFile(java.io.File,com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#java/lang/StringBuilder/append(java.lang.Object)
com/sonar/csharp/squid/scanner/CSharpAstScanner/scanSingleFile(java.io.File,com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#java/util/Collection/iterator()
com/sonar/csharp/squid/scanner/CSharpAstScanner/scanSingleFile(java.io.File,com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#java/lang/StringBuilder/toString()
com/sonar/csharp/squid/scanner/CSharpAstScanner/scanSingleFile(java.io.File,com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#org/sonar/squidbridge/indexer/QueryByType/QueryByType(java.lang.Class)
com/sonar/csharp/squid/scanner/CSharpAstScanner/scanSingleFile(java.io.File,com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#org/sonar/squidbridge/AstScanner/scanFile(java.io.File)
com/sonar/csharp/squid/scanner/CSharpAstScanner/scanSingleFile(java.io.File,com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonar/csharp/squid/scanner/CSharpAstScanner/scanSingleFile(java.io.File,com.sonar.csharp.squid.CSharpConfiguration,org.sonar.squidbridge.SquidAstVisitor[])#java/io/File/isFile()
