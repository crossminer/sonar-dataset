com/sonar/csharp/squid/metric/CSharpFileLinesVisitor/visitToken(com.sonar.sslr.api.Token)#java/lang/Object/equals(java.lang.Object)
com/sonar/csharp/squid/metric/CSharpFileLinesVisitor/visitToken(com.sonar.sslr.api.Token)#com/sonar/sslr/api/Trivia/getToken()
com/sonar/csharp/squid/metric/CSharpFileLinesVisitor/visitToken(com.sonar.sslr.api.Token)#java/util/Iterator/hasNext()
com/sonar/csharp/squid/metric/CSharpFileLinesVisitor/visitToken(com.sonar.sslr.api.Token)#com/sonar/sslr/api/Trivia/isComment()
com/sonar/csharp/squid/metric/CSharpFileLinesVisitor/visitToken(com.sonar.sslr.api.Token)#com/sonar/sslr/api/Token/getLine()
com/sonar/csharp/squid/metric/CSharpFileLinesVisitor/visitToken(com.sonar.sslr.api.Token)#java/lang/Integer/valueOf(int)
com/sonar/csharp/squid/metric/CSharpFileLinesVisitor/visitToken(com.sonar.sslr.api.Token)#com/sonar/sslr/api/Token/getTrivia()
com/sonar/csharp/squid/metric/CSharpFileLinesVisitor/visitToken(com.sonar.sslr.api.Token)#java/util/List/iterator()
com/sonar/csharp/squid/metric/CSharpFileLinesVisitor/visitToken(com.sonar.sslr.api.Token)#java/util/Set/add(java.lang.Object)
com/sonar/csharp/squid/metric/CSharpFileLinesVisitor/visitToken(com.sonar.sslr.api.Token)#java/util/Iterator/next()
com/sonar/csharp/squid/metric/CSharpFileLinesVisitor/visitToken(com.sonar.sslr.api.Token)#com/sonar/sslr/api/Token/getType()
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPublicModifier(com.sonar.sslr.api.AstNode,com.sonar.sslr.api.AstNodeType)#java/util/Iterator/hasNext()
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPublicModifier(com.sonar.sslr.api.AstNode,com.sonar.sslr.api.AstNodeType)#com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/getContext()
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPublicModifier(com.sonar.sslr.api.AstNode,com.sonar.sslr.api.AstNodeType)#com/sonar/sslr/api/AstNode/getToken()
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPublicModifier(com.sonar.sslr.api.AstNode,com.sonar.sslr.api.AstNodeType)#com/sonar/sslr/squid/SquidAstVisitorContext/peekSourceCode()
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPublicModifier(com.sonar.sslr.api.AstNode,com.sonar.sslr.api.AstNodeType)#org/sonar/squid/api/SourceCode/add(org.sonar.squid.measures.MetricDef,double)
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPublicModifier(com.sonar.sslr.api.AstNode,com.sonar.sslr.api.AstNodeType)#java/util/List/iterator()
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPublicModifier(com.sonar.sslr.api.AstNode,com.sonar.sslr.api.AstNodeType)#java/lang/Object/equals(java.lang.Object)
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPublicModifier(com.sonar.sslr.api.AstNode,com.sonar.sslr.api.AstNodeType)#com/sonar/sslr/api/AstNode/getChildren(com.sonar.sslr.api.AstNodeType[])
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPublicModifier(com.sonar.sslr.api.AstNode,com.sonar.sslr.api.AstNodeType)#java/util/Iterator/next()
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPublicModifier(com.sonar.sslr.api.AstNode,com.sonar.sslr.api.AstNodeType)#com/sonar/sslr/api/Token/getType()
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPreviousComments(com.sonar.sslr.api.AstNode)#java/util/Iterator/hasNext()
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPreviousComments(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/Trivia/isComment()
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPreviousComments(com.sonar.sslr.api.AstNode)#com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/getContext()
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPreviousComments(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/AstNode/getToken()
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPreviousComments(com.sonar.sslr.api.AstNode)#com/sonar/sslr/squid/SquidAstVisitorContext/peekSourceCode()
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPreviousComments(com.sonar.sslr.api.AstNode)#java/util/Iterator/next()
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPreviousComments(com.sonar.sslr.api.AstNode)#java/util/List/iterator()
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPreviousComments(com.sonar.sslr.api.AstNode)#org/sonar/squid/api/SourceCode/add(org.sonar.squid.measures.MetricDef,double)
com/sonar/csharp/squid/metric/CSharpPublicApiVisitor/checkNodeForPreviousComments(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/Token/getTrivia()
com/sonar/csharp/squid/scanner/CSharpAstScanner/scanSingleFile(java.io.File,com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#com/sonar/sslr/squid/AstScanner/scanFile(java.io.File)
com/sonar/csharp/squid/scanner/CSharpAstScanner/scanSingleFile(java.io.File,com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/sonar/csharp/squid/scanner/CSharpAstScanner/scanSingleFile(java.io.File,com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#java/lang/StringBuilder/append(java.lang.String)
com/sonar/csharp/squid/scanner/CSharpAstScanner/scanSingleFile(java.io.File,com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#org/sonar/squid/api/SourceCodeSearchEngine/search(org.sonar.squid.api.Query[])
com/sonar/csharp/squid/scanner/CSharpAstScanner/scanSingleFile(java.io.File,com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#java/lang/StringBuilder/append(int)
com/sonar/csharp/squid/scanner/CSharpAstScanner/scanSingleFile(java.io.File,com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#java/util/Iterator/next()
com/sonar/csharp/squid/scanner/CSharpAstScanner/scanSingleFile(java.io.File,com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#java/lang/StringBuilder/StringBuilder()
com/sonar/csharp/squid/scanner/CSharpAstScanner/scanSingleFile(java.io.File,com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#java/lang/StringBuilder/append(java.lang.Object)
com/sonar/csharp/squid/scanner/CSharpAstScanner/scanSingleFile(java.io.File,com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#java/util/Collection/iterator()
com/sonar/csharp/squid/scanner/CSharpAstScanner/scanSingleFile(java.io.File,com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#com/sonar/sslr/squid/AstScanner/getIndex()
com/sonar/csharp/squid/scanner/CSharpAstScanner/scanSingleFile(java.io.File,com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#java/lang/StringBuilder/toString()
com/sonar/csharp/squid/scanner/CSharpAstScanner/scanSingleFile(java.io.File,com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#java/util/Collection/size()
com/sonar/csharp/squid/scanner/CSharpAstScanner/scanSingleFile(java.io.File,com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#org/sonar/squid/indexer/QueryByType/QueryByType(java.lang.Class)
com/sonar/csharp/squid/scanner/CSharpAstScanner/scanSingleFile(java.io.File,com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonar/csharp/squid/scanner/CSharpAstScanner/scanSingleFile(java.io.File,com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#java/io/File/isFile()
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#com/sonar/sslr/squid/AstScanner$Builder/setBaseParser(com.sonar.sslr.impl.Parser)
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#com/sonar/sslr/squid/metrics/CounterVisitor$Builder/setMetricDef(org.sonar.squid.measures.MetricDef)
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#com/sonar/sslr/squid/AstScanner/builder(com.sonar.sslr.squid.SquidAstVisitorContextImpl)
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#com/sonar/sslr/squid/metrics/CounterVisitor$Builder/build()
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#com/sonar/csharp/squid/CSharpConfiguration/getCharset()
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#org/sonar/squid/api/SourceProject/SourceProject(java.lang.String)
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#com/sonar/sslr/squid/AstScanner$Builder/setFilesMetric(org.sonar.squid.measures.MetricDef)
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#com/sonar/sslr/squid/metrics/CommentsVisitor/builder()
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#com/sonar/sslr/squid/metrics/LinesOfCodeVisitor/LinesOfCodeVisitor(org.sonar.squid.measures.MetricDef)
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#com/sonar/sslr/squid/metrics/LinesVisitor/LinesVisitor(org.sonar.squid.measures.MetricDef)
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#com/sonar/sslr/squid/AstScanner$Builder/setCommentAnalyser(com.sonar.sslr.api.CommentAnalyser)
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#com/sonar/sslr/squid/metrics/CommentsVisitor$CommentsVisitorBuilder/withCommentMetric(org.sonar.squid.measures.MetricDef)
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#com/sonar/sslr/squid/metrics/CounterVisitor/builder()
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#com/sonar/sslr/squid/metrics/CommentsVisitor$CommentsVisitorBuilder/withNoSonar(boolean)
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#com/sonar/sslr/squid/AstScanner$Builder/withSquidAstVisitor(com.sonar.sslr.squid.SquidAstVisitor)
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#com/sonar/sslr/squid/metrics/CommentsVisitor$CommentsVisitorBuilder/withIgnoreHeaderComment(boolean)
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#com/sonar/sslr/squid/metrics/CounterVisitor$Builder/subscribeTo(com.sonar.sslr.api.AstNodeType[])
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#com/sonar/sslr/squid/SquidAstVisitorContextImpl/SquidAstVisitorContextImpl(org.sonar.squid.api.SourceProject)
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#com/sonar/sslr/squid/metrics/CommentsVisitor$CommentsVisitorBuilder/withBlankCommentMetric(org.sonar.squid.measures.MetricDef)
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#com/sonar/sslr/squid/AstScanner$Builder/withMetrics(org.sonar.squid.measures.MetricDef[])
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#com/sonar/sslr/squid/AstScanner$Builder/build()
com/sonar/csharp/squid/scanner/CSharpAstScanner/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.squid.SquidAstVisitor[])#com/sonar/sslr/squid/metrics/CommentsVisitor$CommentsVisitorBuilder/build()
com/sonar/csharp/squid/tree/CSharpTypeVisitor/extractNamespaceSignature(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/AstNode/getChildren()
com/sonar/csharp/squid/tree/CSharpTypeVisitor/extractNamespaceSignature(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/AstNode/getNextSibling()
com/sonar/csharp/squid/tree/CSharpTypeVisitor/extractNamespaceSignature(com.sonar.sslr.api.AstNode)#java/util/Iterator/hasNext()
com/sonar/csharp/squid/tree/CSharpTypeVisitor/extractNamespaceSignature(com.sonar.sslr.api.AstNode)#java/lang/StringBuilder/append(java.lang.String)
com/sonar/csharp/squid/tree/CSharpTypeVisitor/extractNamespaceSignature(com.sonar.sslr.api.AstNode)#java/util/Iterator/next()
com/sonar/csharp/squid/tree/CSharpTypeVisitor/extractNamespaceSignature(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/AstNode/getFirstChild(com.sonar.sslr.api.AstNodeType[])
com/sonar/csharp/squid/tree/CSharpTypeVisitor/extractNamespaceSignature(com.sonar.sslr.api.AstNode)#java/lang/StringBuilder/StringBuilder()
com/sonar/csharp/squid/tree/CSharpTypeVisitor/extractNamespaceSignature(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/AstNode/getTokenValue()
com/sonar/csharp/squid/tree/CSharpTypeVisitor/extractNamespaceSignature(com.sonar.sslr.api.AstNode)#java/util/List/iterator()
com/sonar/csharp/squid/tree/CSharpTypeVisitor/extractNamespaceSignature(com.sonar.sslr.api.AstNode)#java/lang/StringBuilder/toString()
com/sonar/csharp/squid/tree/CSharpTypeVisitor/extractTypeName(com.sonar.sslr.api.AstNode)#java/lang/StringBuilder/append(java.lang.String)
com/sonar/csharp/squid/tree/CSharpTypeVisitor/extractTypeName(com.sonar.sslr.api.AstNode)#java/util/Map/get(java.lang.Object)
com/sonar/csharp/squid/tree/CSharpTypeVisitor/extractTypeName(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/AstNode/getFirstChild(com.sonar.sslr.api.AstNodeType[])
com/sonar/csharp/squid/tree/CSharpTypeVisitor/extractTypeName(com.sonar.sslr.api.AstNode)#java/lang/StringBuilder/StringBuilder()
com/sonar/csharp/squid/tree/CSharpTypeVisitor/extractTypeName(com.sonar.sslr.api.AstNode)#java/util/Stack/isEmpty()
com/sonar/csharp/squid/tree/CSharpTypeVisitor/extractTypeName(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/AstNode/getTokenValue()
com/sonar/csharp/squid/tree/CSharpTypeVisitor/extractTypeName(com.sonar.sslr.api.AstNode)#java/util/Stack/peek()
com/sonar/csharp/squid/tree/CSharpTypeVisitor/extractTypeName(com.sonar.sslr.api.AstNode)#java/lang/StringBuilder/toString()
com/sonar/csharp/squid/tree/CSharpTypeVisitor/extractTypeName(com.sonar.sslr.api.AstNode)#java/lang/Object/equals(java.lang.Object)
com/sonar/csharp/squid/tree/CSharpTypeVisitor/extractTypeName(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/AstNode/getNextSibling()
com/sonar/csharp/squid/tree/CSharpMemberVisitor/extractPropertySignature(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/AstNode/getPreviousSibling()
com/sonar/csharp/squid/tree/CSharpMemberVisitor/extractPropertySignature(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/AstNode/getTokenLine()
com/sonar/csharp/squid/tree/CSharpMemberVisitor/extractPropertySignature(com.sonar.sslr.api.AstNode)#java/lang/StringBuilder/append(java.lang.String)
com/sonar/csharp/squid/tree/CSharpMemberVisitor/extractPropertySignature(com.sonar.sslr.api.AstNode)#java/lang/StringBuilder/append(int)
com/sonar/csharp/squid/tree/CSharpMemberVisitor/extractPropertySignature(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/AstNode/getParent()
com/sonar/csharp/squid/tree/CSharpMemberVisitor/extractPropertySignature(com.sonar.sslr.api.AstNode)#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/sonar/csharp/squid/tree/CSharpMemberVisitor/extractPropertySignature(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/AstNode/getLastToken()
com/sonar/csharp/squid/tree/CSharpMemberVisitor/extractPropertySignature(com.sonar.sslr.api.AstNode)#java/lang/StringBuilder/toString()
com/sonar/csharp/squid/tree/CSharpMemberVisitor/extractPropertySignature(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/Token/getValue()
com/sonar/csharp/squid/tree/CSharpMemberVisitor/extractPropertySignature(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/AstNode/getFirstChild(com.sonar.sslr.api.AstNodeType[])
com/sonar/csharp/squid/tree/CSharpMemberVisitor/extractPropertySignature(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/AstNode/is(com.sonar.sslr.api.AstNodeType[])
com/sonar/csharp/squid/tree/CSharpMemberVisitor/extractPropertySignature(com.sonar.sslr.api.AstNode)#com/sonar/sslr/api/AstNode/getTokenValue()
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/channel/BlackHoleChannel/BlackHoleChannel(java.lang.String)
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/channel/RegexpChannelBuilder/opt(java.lang.String)
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/channel/RegexpChannelBuilder/anyButNot(java.lang.String[])
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/channel/UnknownCharacterChannel/UnknownCharacterChannel()
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/Lexer$Builder/withCharset(java.nio.charset.Charset)
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/Lexer/builder()
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/Lexer$Builder/withChannel(org.sonar.channel.Channel)
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/channel/RegexpChannelBuilder/commentRegexp(java.lang.String[])
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/channel/RegexpChannelBuilder/or(java.lang.String[])
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/channel/BomCharacterChannel/BomCharacterChannel()
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/csharp/squid/CSharpConfiguration/getCharset()
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/channel/RegexpChannelBuilder/one2n(java.lang.String)
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/Lexer$Builder/withFailIfNoChannelToConsumeOneCharacter(boolean)
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/Lexer$Builder/withPreprocessor(com.sonar.sslr.api.Preprocessor)
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/channel/RegexpChannelBuilder/g(java.lang.String[])
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/channel/RegexpChannelBuilder/regexp(com.sonar.sslr.api.TokenType,java.lang.String[])
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/channel/PunctuatorChannel/PunctuatorChannel(com.sonar.sslr.api.TokenType[])
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/Lexer$Builder/build()
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/channel/IdentifierAndKeywordChannel/IdentifierAndKeywordChannel(java.lang.String,boolean,com.sonar.sslr.api.TokenType[][])
com/sonar/csharp/squid/lexer/CSharpLexer/create(com.sonar.csharp.squid.CSharpConfiguration,com.sonar.sslr.api.Preprocessor[])#com/sonar/sslr/impl/channel/RegexpChannelBuilder/o2n(java.lang.String)
